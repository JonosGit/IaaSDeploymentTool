Function makeimage_withinfo_4p-vo-vnp360-single
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = '4psa',
	[string]$Offer = 'voipnow',
	[string]$Skus = 'vnp360-single',
	[string]$version =  'latest',
	[string]$Product = 'voipnow',
	[string]$name = 'vnp360-single'
)
Write-Host "Image Creation in Process - Plan Info - 4psa | vnp360-single"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: 4psa Offer:voipnow Sku:vnp360-single Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_4w-4w-4ward365_base
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = '4ward365',
	[string]$Offer = '4ward365',
	[string]$Skus = '4ward365_base',
	[string]$version =  'latest',
	[string]$Product = '4ward365',
	[string]$name = '4ward365_base'
)
Write-Host "Image Creation in Process - Plan Info - 4ward365 | 4ward365_base"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: 4ward365 Offer:4ward365 Sku:4ward365_base Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_7i-sa-sapp1510-ubuntu1404
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = '7isolutions',
	[string]$Offer = 'sapp',
	[string]$Skus = 'sapp1510-ubuntu1404',
	[string]$version =  'latest',
	[string]$Product = 'sapp',
	[string]$name = 'sapp1510-ubuntu1404'
)
Write-Host "Image Creation in Process - Plan Info - 7isolutions | sapp1510-ubuntu1404"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: 7isolutions Offer:sapp Sku:sapp1510-ubuntu1404 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_7i-sa-sapp-project-server-2015-06
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = '7isolutions',
	[string]$Offer = 'sapp-project-server-2015-05',
	[string]$Skus = 'sapp-project-server-2015-06',
	[string]$version =  'latest',
	[string]$Product = 'sapp-project-server-2015-05',
	[string]$name = 'sapp-project-server-2015-06'
)
Write-Host "Image Creation in Process - Plan Info - 7isolutions | sapp-project-server-2015-06"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: 7isolutions Offer:sapp-project-server-2015-05 Sku:sapp-project-server-2015-06 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_a1-a1-vthunder_100mbps
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'a10networks',
	[string]$Offer = 'a10-vthunder-adc',
	[string]$Skus = 'vthunder_100mbps',
	[string]$version =  'latest',
	[string]$Product = 'a10-vthunder-adc',
	[string]$name = 'vthunder_100mbps'
)
Write-Host "Image Creation in Process - Plan Info - a10networks | vthunder_100mbps"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: a10networks Offer:a10-vthunder-adc Sku:vthunder_100mbps Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_a1-a1-vthunder_10mbps
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'a10networks',
	[string]$Offer = 'a10-vthunder-adc',
	[string]$Skus = 'vthunder_10mbps',
	[string]$version =  'latest',
	[string]$Product = 'a10-vthunder-adc',
	[string]$name = 'vthunder_10mbps'
)
Write-Host "Image Creation in Process - Plan Info - a10networks | vthunder_10mbps"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: a10networks Offer:a10-vthunder-adc Sku:vthunder_10mbps Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_a1-a1-vthunder_200mbps
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'a10networks',
	[string]$Offer = 'a10-vthunder-adc',
	[string]$Skus = 'vthunder_200mbps',
	[string]$version =  'latest',
	[string]$Product = 'a10-vthunder-adc',
	[string]$name = 'vthunder_200mbps'
)
Write-Host "Image Creation in Process - Plan Info - a10networks | vthunder_200mbps"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: a10networks Offer:a10-vthunder-adc Sku:vthunder_200mbps Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_a1-a1-vthunder_500mbps
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'a10networks',
	[string]$Offer = 'a10-vthunder-adc',
	[string]$Skus = 'vthunder_500mbps',
	[string]$version =  'latest',
	[string]$Product = 'a10-vthunder-adc',
	[string]$name = 'vthunder_500mbps'
)
Write-Host "Image Creation in Process - Plan Info - a10networks | vthunder_500mbps"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: a10networks Offer:a10-vthunder-adc Sku:vthunder_500mbps Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_a1-a1-vthunder_50mbps
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'a10networks',
	[string]$Offer = 'a10-vthunder-adc',
	[string]$Skus = 'vthunder_50mbps',
	[string]$version =  'latest',
	[string]$Product = 'a10-vthunder-adc',
	[string]$name = 'vthunder_50mbps'
)
Write-Host "Image Creation in Process - Plan Info - a10networks | vthunder_50mbps"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: a10networks Offer:a10-vthunder-adc Sku:vthunder_50mbps Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_a1-a1-vthunder_byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'a10networks',
	[string]$Offer = 'a10-vthunder-adc',
	[string]$Skus = 'vthunder_byol',
	[string]$version =  'latest',
	[string]$Product = 'a10-vthunder-adc',
	[string]$name = 'vthunder_byol'
)
Write-Host "Image Creation in Process - Plan Info - a10networks | vthunder_byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: a10networks Offer:a10-vthunder-adc Sku:vthunder_byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ab-ab-abiquo-340-monolithic
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'abiquo',
	[string]$Offer = 'abiquo-hybrid-cloud-34',
	[string]$Skus = 'abiquo-340-monolithic',
	[string]$version =  'latest',
	[string]$Product = 'abiquo-hybrid-cloud-34',
	[string]$name = 'abiquo-340-monolithic'
)
Write-Host "Image Creation in Process - Plan Info - abiquo | abiquo-340-monolithic"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: abiquo Offer:abiquo-hybrid-cloud-34 Sku:abiquo-340-monolithic Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ac-ki-kiteworks_vm_byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'accellion',
	[string]$Offer = 'kiteworks-by-accellion',
	[string]$Skus = 'kiteworks_vm_byol',
	[string]$version =  'latest',
	[string]$Product = 'kiteworks-by-accellion',
	[string]$name = 'kiteworks_vm_byol'
)
Write-Host "Image Creation in Process - Plan Info - accellion | kiteworks_vm_byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: accellion Offer:kiteworks-by-accellion Sku:kiteworks_vm_byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ac-ki-kiteworks_vm_byol_classic
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'accellion',
	[string]$Offer = 'kiteworks-by-accellion',
	[string]$Skus = 'kiteworks_vm_byol_classic',
	[string]$version =  'latest',
	[string]$Product = 'kiteworks-by-accellion',
	[string]$name = 'kiteworks_vm_byol_classic'
)
Write-Host "Image Creation in Process - Plan Info - accellion | kiteworks_vm_byol_classic"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: accellion Offer:kiteworks-by-accellion Sku:kiteworks_vm_byol_classic Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ac-ac-actian_matrix_compute
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'actian_matrix',
	[string]$Offer = 'actian_matrix',
	[string]$Skus = 'actian_matrix_compute',
	[string]$version =  'latest',
	[string]$Product = 'actian_matrix',
	[string]$name = 'actian_matrix_compute'
)
Write-Host "Image Creation in Process - Plan Info - actian_matrix | actian_matrix_compute"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: actian_matrix Offer:actian_matrix Sku:actian_matrix_compute Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ac-ac-actian_matrix_leader
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'actian_matrix',
	[string]$Offer = 'actian_matrix',
	[string]$Skus = 'actian_matrix_leader',
	[string]$version =  'latest',
	[string]$Product = 'actian_matrix',
	[string]$name = 'actian_matrix_leader'
)
Write-Host "Image Creation in Process - Plan Info - actian_matrix | actian_matrix_leader"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: actian_matrix Offer:actian_matrix Sku:actian_matrix_leader Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ac-an-an_disc_msaz_starter
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'active-navigation',
	[string]$Offer = 'an_discovery_center_azure_starter',
	[string]$Skus = 'an_disc_msaz_starter',
	[string]$version =  'latest',
	[string]$Product = 'an_discovery_center_azure_starter',
	[string]$name = 'an_disc_msaz_starter'
)
Write-Host "Image Creation in Process - Plan Info - active-navigation | an_disc_msaz_starter"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: active-navigation Offer:an_discovery_center_azure_starter Sku:an_disc_msaz_starter Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ac-ac-free
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'activeeon',
	[string]$Offer = 'activeeon-workload-scheduler',
	[string]$Skus = 'free',
	[string]$version =  'latest',
	[string]$Product = 'activeeon-workload-scheduler',
	[string]$name = 'free'
)
Write-Host "Image Creation in Process - Plan Info - activeeon | free"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: activeeon Offer:activeeon-workload-scheduler Sku:free Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ad-ad-adamsoftware
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'adam-software',
	[string]$Offer = 'adam',
	[string]$Skus = 'adamsoftware',
	[string]$version =  'latest',
	[string]$Product = 'adam',
	[string]$name = 'adamsoftware'
)
Write-Host "Image Creation in Process - Plan Info - adam-software | adamsoftware"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: adam-software Offer:adam Sku:adamsoftware Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ad-ad-adam-sandbox
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'adam-software',
	[string]$Offer = 'adam-sandbox',
	[string]$Skus = 'adam-sandbox',
	[string]$version =  'latest',
	[string]$Product = 'adam-sandbox',
	[string]$name = 'adam-sandbox'
)
Write-Host "Image Creation in Process - Plan Info - adam-software | adam-sandbox"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: adam-software Offer:adam-sandbox Sku:adam-sandbox Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ad-ad-adobeaem
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'adobe',
	[string]$Offer = 'adobe_aem',
	[string]$Skus = 'adobeaem',
	[string]$version =  'latest',
	[string]$Product = 'adobe_aem',
	[string]$name = 'adobeaem'
)
Write-Host "Image Creation in Process - Plan Info - adobe | adobeaem"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: adobe Offer:adobe_aem Sku:adobeaem Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ad-ad-adobe_camp_test
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'adobe',
	[string]$Offer = 'adobe_campaign_test',
	[string]$Skus = 'adobe_camp_test',
	[string]$version =  'latest',
	[string]$Product = 'adobe_campaign_test',
	[string]$name = 'adobe_camp_test'
)
Write-Host "Image Creation in Process - Plan Info - adobe | adobe_camp_test"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: adobe Offer:adobe_campaign_test Sku:adobe_camp_test Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ad-ac-accounts_on_azure
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'adra-match',
	[string]$Offer = 'accounts',
	[string]$Skus = 'accounts_on_azure',
	[string]$version =  'latest',
	[string]$Product = 'accounts',
	[string]$name = 'accounts_on_azure'
)
Write-Host "Image Creation in Process - Plan Info - adra-match | accounts_on_azure"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: adra-match Offer:accounts Sku:accounts_on_azure Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ad-rm-standard
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'advantech',
	[string]$Offer = 'rmm31_for_windows',
	[string]$Skus = 'standard',
	[string]$version =  'latest',
	[string]$Product = 'rmm31_for_windows',
	[string]$name = 'standard'
)
Write-Host "Image Creation in Process - Plan Info - advantech | standard"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: advantech Offer:rmm31_for_windows Sku:standard Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ad-su-std
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'advantech',
	[string]$Offer = 'susiaccess30',
	[string]$Skus = 'std',
	[string]$version =  'latest',
	[string]$Product = 'susiaccess30',
	[string]$name = 'std'
)
Write-Host "Image Creation in Process - Plan Info - advantech | std"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: advantech Offer:susiaccess30 Sku:std Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ad-we-1500tags
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'advantech-webaccess',
	[string]$Offer = 'webaccess-8_0_1',
	[string]$Skus = '1500tags',
	[string]$version =  'latest',
	[string]$Product = 'webaccess-8_0_1',
	[string]$name = '1500tags'
)
Write-Host "Image Creation in Process - Plan Info - advantech-webaccess | 1500tags"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: advantech-webaccess Offer:webaccess-8_0_1 Sku:1500tags Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ad-we-ver8_0_0626
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'advantech-webaccess',
	[string]$Offer = 'webaccess-8_0_1',
	[string]$Skus = 'ver8_0_0626',
	[string]$version =  'latest',
	[string]$Product = 'webaccess-8_0_1',
	[string]$name = 'ver8_0_0626'
)
Write-Host "Image Creation in Process - Plan Info - advantech-webaccess | ver8_0_0626"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: advantech-webaccess Offer:webaccess-8_0_1 Sku:ver8_0_0626 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ae-ae-aerospikedb003
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'aerospike',
	[string]$Offer = 'aerospike-database-vm',
	[string]$Skus = 'aerospikedb003',
	[string]$version =  'latest',
	[string]$Product = 'aerospike-database-vm',
	[string]$name = 'aerospikedb003'
)
Write-Host "Image Creation in Process - Plan Info - aerospike | aerospikedb003"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: aerospike Offer:aerospike-database-vm Sku:aerospikedb003 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ai-ai-aimsforbiztalkenterprise
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'aimsinnovation',
	[string]$Offer = 'aims-for-biztalk',
	[string]$Skus = 'aimsforbiztalkenterprise',
	[string]$version =  'latest',
	[string]$Product = 'aims-for-biztalk',
	[string]$name = 'aimsforbiztalkenterprise'
)
Write-Host "Image Creation in Process - Plan Info - aimsinnovation | aimsforbiztalkenterprise"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: aimsinnovation Offer:aims-for-biztalk Sku:aimsforbiztalkenterprise Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ai-ai-aimsforbiztalkprofessional
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'aimsinnovation',
	[string]$Offer = 'aims-for-biztalk',
	[string]$Skus = 'aimsforbiztalkprofessional',
	[string]$version =  'latest',
	[string]$Product = 'aims-for-biztalk',
	[string]$name = 'aimsforbiztalkprofessional'
)
Write-Host "Image Creation in Process - Plan Info - aimsinnovation | aimsforbiztalkprofessional"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: aimsinnovation Offer:aims-for-biztalk Sku:aimsforbiztalkprofessional Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ai-ai-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'aiscaler-cache-control-ddos-and-url-rewriting-',
	[string]$Offer = 'aimobile-site-acceleration',
	[string]$Skus = 'byol',
	[string]$version =  'latest',
	[string]$Product = 'aimobile-site-acceleration',
	[string]$name = 'byol'
)
Write-Host "Image Creation in Process - Plan Info - aiscaler-cache-control-ddos-and-url-rewriting- | byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: aiscaler-cache-control-ddos-and-url-rewriting- Offer:aimobile-site-acceleration Sku:byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ai-ai-hourly
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'aiscaler-cache-control-ddos-and-url-rewriting-',
	[string]$Offer = 'aimobile-site-acceleration',
	[string]$Skus = 'hourly',
	[string]$version =  'latest',
	[string]$Product = 'aimobile-site-acceleration',
	[string]$name = 'hourly'
)
Write-Host "Image Creation in Process - Plan Info - aiscaler-cache-control-ddos-and-url-rewriting- | hourly"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: aiscaler-cache-control-ddos-and-url-rewriting- Offer:aimobile-site-acceleration Sku:hourly Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ai-ai-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'aiscaler-cache-control-ddos-and-url-rewriting-',
	[string]$Offer = 'aiprotect-ddos-firewall',
	[string]$Skus = 'byol',
	[string]$version =  'latest',
	[string]$Product = 'aiprotect-ddos-firewall',
	[string]$name = 'byol'
)
Write-Host "Image Creation in Process - Plan Info - aiscaler-cache-control-ddos-and-url-rewriting- | byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: aiscaler-cache-control-ddos-and-url-rewriting- Offer:aiprotect-ddos-firewall Sku:byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ai-ai-hourly
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'aiscaler-cache-control-ddos-and-url-rewriting-',
	[string]$Offer = 'aiprotect-ddos-firewall',
	[string]$Skus = 'hourly',
	[string]$version =  'latest',
	[string]$Product = 'aiprotect-ddos-firewall',
	[string]$name = 'hourly'
)
Write-Host "Image Creation in Process - Plan Info - aiscaler-cache-control-ddos-and-url-rewriting- | hourly"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: aiscaler-cache-control-ddos-and-url-rewriting- Offer:aiprotect-ddos-firewall Sku:hourly Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ai-ai-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'aiscaler-cache-control-ddos-and-url-rewriting-',
	[string]$Offer = 'aiscaler-traffic-manager-caching',
	[string]$Skus = 'byol',
	[string]$version =  'latest',
	[string]$Product = 'aiscaler-traffic-manager-caching',
	[string]$name = 'byol'
)
Write-Host "Image Creation in Process - Plan Info - aiscaler-cache-control-ddos-and-url-rewriting- | byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: aiscaler-cache-control-ddos-and-url-rewriting- Offer:aiscaler-traffic-manager-caching Sku:byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ai-ai-hourly
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'aiscaler-cache-control-ddos-and-url-rewriting-',
	[string]$Offer = 'aiscaler-traffic-manager-caching',
	[string]$Skus = 'hourly',
	[string]$version =  'latest',
	[string]$Product = 'aiscaler-traffic-manager-caching',
	[string]$name = 'hourly'
)
Write-Host "Image Creation in Process - Plan Info - aiscaler-cache-control-ddos-and-url-rewriting- | hourly"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: aiscaler-cache-control-ddos-and-url-rewriting- Offer:aiscaler-traffic-manager-caching Sku:hourly Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ai-ai-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'aiscaler-cache-control-ddos-and-url-rewriting-',
	[string]$Offer = 'aivideo',
	[string]$Skus = 'byol',
	[string]$version =  'latest',
	[string]$Product = 'aivideo',
	[string]$name = 'byol'
)
Write-Host "Image Creation in Process - Plan Info - aiscaler-cache-control-ddos-and-url-rewriting- | byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: aiscaler-cache-control-ddos-and-url-rewriting- Offer:aivideo Sku:byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ai-ai-hourly
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'aiscaler-cache-control-ddos-and-url-rewriting-',
	[string]$Offer = 'aivideo',
	[string]$Skus = 'hourly',
	[string]$version =  'latest',
	[string]$Product = 'aivideo',
	[string]$name = 'hourly'
)
Write-Host "Image Creation in Process - Plan Info - aiscaler-cache-control-ddos-and-url-rewriting- | hourly"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: aiscaler-cache-control-ddos-and-url-rewriting- Offer:aivideo Sku:hourly Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ak-ak-akeronre
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'akeron',
	[string]$Offer = 'akeron-real-estate',
	[string]$Skus = 'akeronre',
	[string]$version =  'latest',
	[string]$Product = 'akeron-real-estate',
	[string]$name = 'akeronre'
)
Write-Host "Image Creation in Process - Plan Info - akeron | akeronre"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: akeron Offer:akeron-real-estate Sku:akeronre Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ak-ak-akerontp
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'akeron',
	[string]$Offer = 'akeron-trade-promotion',
	[string]$Skus = 'akerontp',
	[string]$version =  'latest',
	[string]$Product = 'akeron-trade-promotion',
	[string]$name = 'akerontp'
)
Write-Host "Image Creation in Process - Plan Info - akeron | akerontp"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: akeron Offer:akeron-trade-promotion Sku:akerontp Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_al-nc-ncache-opensource
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'alachisoft',
	[string]$Offer = 'ncache-opensource',
	[string]$Skus = 'ncache-opensource',
	[string]$version =  'latest',
	[string]$Product = 'ncache-opensource',
	[string]$name = 'ncache-opensource'
)
Write-Host "Image Creation in Process - Plan Info - alachisoft | ncache-opensource"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: alachisoft Offer:ncache-opensource Sku:ncache-opensource Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_al-nc-ncache-prof-46-sp1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'alachisoft',
	[string]$Offer = 'ncache-professional-46-sp1',
	[string]$Skus = 'ncache-prof-46-sp1',
	[string]$version =  'latest',
	[string]$Product = 'ncache-professional-46-sp1',
	[string]$name = 'ncache-prof-46-sp1'
)
Write-Host "Image Creation in Process - Plan Info - alachisoft | ncache-prof-46-sp1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: alachisoft Offer:ncache-professional-46-sp1 Sku:ncache-prof-46-sp1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_al-al-20215000100-tmpbyol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'alertlogic',
	[string]$Offer = 'alert-logic-tm',
	[string]$Skus = '20215000100-tmpbyol',
	[string]$version =  'latest',
	[string]$Product = 'alert-logic-tm',
	[string]$name = '20215000100-tmpbyol'
)
Write-Host "Image Creation in Process - Plan Info - alertlogic | 20215000100-tmpbyol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: alertlogic Offer:alert-logic-tm Sku:20215000100-tmpbyol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_al-al-20216000100-wsmpbyl
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'alertlogic',
	[string]$Offer = 'alert-logic-wsm',
	[string]$Skus = '20216000100-wsmpbyl',
	[string]$version =  'latest',
	[string]$Product = 'alert-logic-wsm',
	[string]$name = '20216000100-wsmpbyl'
)
Write-Host "Image Creation in Process - Plan Info - alertlogic | 20216000100-wsmpbyl"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: alertlogic Offer:alert-logic-wsm Sku:20216000100-wsmpbyl Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_al-al-algebraixanalytics_std
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'algebraix-data',
	[string]$Offer = 'algebraix-analytics',
	[string]$Skus = 'algebraixanalytics_std',
	[string]$version =  'latest',
	[string]$Product = 'algebraix-analytics',
	[string]$name = 'algebraixanalytics_std'
)
Write-Host "Image Creation in Process - Plan Info - algebraix-data | algebraixanalytics_std"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: algebraix-data Offer:algebraix-analytics Sku:algebraixanalytics_std Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_al-al-algebraixanalytics_ent
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'algebraix-data',
	[string]$Offer = 'algebraix-analytics-enterprise',
	[string]$Skus = 'algebraixanalytics_ent',
	[string]$version =  'latest',
	[string]$Product = 'algebraix-analytics-enterprise',
	[string]$name = 'algebraixanalytics_ent'
)
Write-Host "Image Creation in Process - Plan Info - algebraix-data | algebraixanalytics_ent"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: algebraix-data Offer:algebraix-analytics-enterprise Sku:algebraixanalytics_ent Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_al-al-brevity-uploader-with-microsoft-media-services
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'alldigital-brevity',
	[string]$Offer = 'alldigital-brevity-microsoft-media-services',
	[string]$Skus = 'brevity-uploader-with-microsoft-media-services',
	[string]$version =  'latest',
	[string]$Product = 'alldigital-brevity-microsoft-media-services',
	[string]$name = 'brevity-uploader-with-microsoft-media-services'
)
Write-Host "Image Creation in Process - Plan Info - alldigital-brevity | brevity-uploader-with-microsoft-media-services"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: alldigital-brevity Offer:alldigital-brevity-microsoft-media-services Sku:brevity-uploader-with-microsoft-media-services Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_al-al-brevity-uploader
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'alldigital-brevity',
	[string]$Offer = 'alldigital-brevity-uploader',
	[string]$Skus = 'brevity-uploader',
	[string]$version =  'latest',
	[string]$Product = 'alldigital-brevity-uploader',
	[string]$name = 'brevity-uploader'
)
Write-Host "Image Creation in Process - Plan Info - alldigital-brevity | brevity-uploader"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: alldigital-brevity Offer:alldigital-brevity-uploader Sku:brevity-uploader Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_al-al-alteryx-designer-10_1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'alteryx',
	[string]$Offer = 'alteryx-designer',
	[string]$Skus = 'alteryx-designer-10_1',
	[string]$version =  'latest',
	[string]$Product = 'alteryx-designer',
	[string]$name = 'alteryx-designer-10_1'
)
Write-Host "Image Creation in Process - Plan Info - alteryx | alteryx-designer-10_1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: alteryx Offer:alteryx-designer Sku:alteryx-designer-10_1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_al-ec-enterprise
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'altiar',
	[string]$Offer = 'ecm',
	[string]$Skus = 'enterprise',
	[string]$version =  'latest',
	[string]$Product = 'ecm',
	[string]$name = 'enterprise'
)
Write-Host "Image Creation in Process - Plan Info - altiar | enterprise"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: altiar Offer:ecm Sku:enterprise Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_al-al-alvao
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'alvao',
	[string]$Offer = 'alvao-asset-service',
	[string]$Skus = 'alvao',
	[string]$version =  'latest',
	[string]$Product = 'alvao-asset-service',
	[string]$name = 'alvao'
)
Write-Host "Image Creation in Process - Plan Info - alvao | alvao"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: alvao Offer:alvao-asset-service Sku:alvao Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_an-an-analitica
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'analitica',
	[string]$Offer = 'analitica',
	[string]$Skus = 'analitica',
	[string]$version =  'latest',
	[string]$Product = 'analitica',
	[string]$name = 'analitica'
)
Write-Host "Image Creation in Process - Plan Info - analitica | analitica"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: analitica Offer:analitica Sku:analitica Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_an-an-xwmc0001
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'angoss',
	[string]$Offer = 'angoss-knowledgestudio',
	[string]$Skus = 'xwmc0001',
	[string]$version =  'latest',
	[string]$Product = 'angoss-knowledgestudio',
	[string]$name = 'xwmc0001'
)
Write-Host "Image Creation in Process - Plan Info - angoss | xwmc0001"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: angoss Offer:angoss-knowledgestudio Sku:xwmc0001 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_an-kn-kwmc0000
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'angoss',
	[string]$Offer = 'knowledgeseeker',
	[string]$Skus = 'kwmc0000',
	[string]$version =  'latest',
	[string]$Product = 'knowledgeseeker',
	[string]$name = 'kwmc0000'
)
Write-Host "Image Creation in Process - Plan Info - angoss | kwmc0000"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: angoss Offer:knowledgeseeker Sku:kwmc0000 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ap-ap-apigee-edge-4-15-07
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'apigee',
	[string]$Offer = 'apigee-edge',
	[string]$Skus = 'apigee-edge-4-15-07',
	[string]$version =  'latest',
	[string]$Product = 'apigee-edge',
	[string]$name = 'apigee-edge-4-15-07'
)
Write-Host "Image Creation in Process - Plan Info - apigee | apigee-edge-4-15-07"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: apigee Offer:apigee-edge Sku:apigee-edge-4-15-07 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ap-ap-apigee-edge-private-cloud
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'apigee',
	[string]$Offer = 'apigee-edge',
	[string]$Skus = 'apigee-edge-private-cloud',
	[string]$version =  'latest',
	[string]$Product = 'apigee-edge',
	[string]$name = 'apigee-edge-private-cloud'
)
Write-Host "Image Creation in Process - Plan Info - apigee | apigee-edge-private-cloud"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: apigee Offer:apigee-edge Sku:apigee-edge-private-cloud Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ap-ap-arrowazurevm
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'appcelerator',
	[string]$Offer = 'appcelerator-arrow-azure-vm',
	[string]$Skus = 'arrowazurevm',
	[string]$version =  'latest',
	[string]$Product = 'appcelerator-arrow-azure-vm',
	[string]$name = 'arrowazurevm'
)
Write-Host "Image Creation in Process - Plan Info - appcelerator | arrowazurevm"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: appcelerator Offer:appcelerator-arrow-azure-vm Sku:arrowazurevm Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ap-ap-apcto-pep-azure
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'appcitoinc',
	[string]$Offer = 'appcito-pep-marketplace',
	[string]$Skus = 'apcto-pep-azure',
	[string]$version =  'latest',
	[string]$Product = 'appcito-pep-marketplace',
	[string]$name = 'apcto-pep-azure'
)
Write-Host "Image Creation in Process - Plan Info - appcitoinc | apcto-pep-azure"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: appcitoinc Offer:appcito-pep-marketplace Sku:apcto-pep-azure Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ap-cl-standard-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'appex-networks',
	[string]$Offer = 'cloudexpress',
	[string]$Skus = 'standard-byol',
	[string]$version =  'latest',
	[string]$Product = 'cloudexpress',
	[string]$name = 'standard-byol'
)
Write-Host "Image Creation in Process - Plan Info - appex-networks | standard-byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: appex-networks Offer:cloudexpress Sku:standard-byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ap-ge-onebox-genome-pilot
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'appistry',
	[string]$Offer = 'genomepilot',
	[string]$Skus = 'onebox-genome-pilot',
	[string]$version =  'latest',
	[string]$Product = 'genomepilot',
	[string]$name = 'onebox-genome-pilot'
)
Write-Host "Image Creation in Process - Plan Info - appistry | onebox-genome-pilot"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: appistry Offer:genomepilot Sku:onebox-genome-pilot Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ap-ap-express
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'appveyorci',
	[string]$Offer = 'appveyor-ci',
	[string]$Skus = 'express',
	[string]$version =  'latest',
	[string]$Product = 'appveyor-ci',
	[string]$name = 'express'
)
Write-Host "Image Creation in Process - Plan Info - appveyorci | express"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: appveyorci Offer:appveyor-ci Sku:express Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ap-ap-appzero
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'appzero',
	[string]$Offer = 'appzero',
	[string]$Skus = 'appzero',
	[string]$version =  'latest',
	[string]$Product = 'appzero',
	[string]$name = 'appzero'
)
Write-Host "Image Creation in Process - Plan Info - appzero | appzero"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: appzero Offer:appzero Sku:appzero Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ar-ar-arangodb254
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'arangodb',
	[string]$Offer = 'arangodb',
	[string]$Skus = 'arangodb254',
	[string]$version =  'latest',
	[string]$Product = 'arangodb',
	[string]$name = 'arangodb254'
)
Write-Host "Image Creation in Process - Plan Info - arangodb | arangodb254"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: arangodb Offer:arangodb Sku:arangodb254 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ar-ar-arangodb289
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'arangodb',
	[string]$Offer = 'arangodb',
	[string]$Skus = 'arangodb289',
	[string]$version =  'latest',
	[string]$Product = 'arangodb',
	[string]$name = 'arangodb289'
)
Write-Host "Image Creation in Process - Plan Info - arangodb | arangodb289"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: arangodb Offer:arangodb Sku:arangodb289 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ar-ar-aras_innovator_plm_suite
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'aras',
	[string]$Offer = 'aras-innovator-plm-suite',
	[string]$Skus = 'aras_innovator_plm_suite',
	[string]$version =  'latest',
	[string]$Product = 'aras-innovator-plm-suite',
	[string]$name = 'aras_innovator_plm_suite'
)
Write-Host "Image Creation in Process - Plan Info - aras | aras_innovator_plm_suite"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: aras Offer:aras-innovator-plm-suite Sku:aras_innovator_plm_suite Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ar-ar-archive2anywhere
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'archive360',
	[string]$Offer = 'archive2anywhere',
	[string]$Skus = 'archive2anywhere',
	[string]$version =  'latest',
	[string]$Product = 'archive2anywhere',
	[string]$name = 'archive2anywhere'
)
Write-Host "Image Creation in Process - Plan Info - archive360 | archive2anywhere"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: archive360 Offer:archive2anywhere Sku:archive2anywhere Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ar-ar-a2z-marketplace
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'archive360',
	[string]$Offer = 'archive2azure-standard-image',
	[string]$Skus = 'a2z-marketplace',
	[string]$version =  'latest',
	[string]$Product = 'archive2azure-standard-image',
	[string]$name = 'a2z-marketplace'
)
Write-Host "Image Creation in Process - Plan Info - archive360 | a2z-marketplace"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: archive360 Offer:archive2azure-standard-image Sku:a2z-marketplace Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ar-ar-array-vapv-azure-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'array_networks',
	[string]$Offer = 'array-networks-vapv',
	[string]$Skus = 'array-vapv-azure-byol',
	[string]$version =  'latest',
	[string]$Product = 'array-networks-vapv',
	[string]$name = 'array-vapv-azure-byol'
)
Write-Host "Image Creation in Process - Plan Info - array_networks | array-vapv-azure-byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: array_networks Offer:array-networks-vapv Sku:array-vapv-azure-byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ar-bi-bicmonitor
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'arvatosystems',
	[string]$Offer = 'bicmonitor',
	[string]$Skus = 'bicmonitor',
	[string]$version =  'latest',
	[string]$Product = 'bicmonitor',
	[string]$name = 'bicmonitor'
)
Write-Host "Image Creation in Process - Plan Info - arvatosystems | bicmonitor"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: arvatosystems Offer:bicmonitor Sku:bicmonitor Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_as-as-aspera_fod100
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'aspera',
	[string]$Offer = 'aspera-faspex-ondemand100',
	[string]$Skus = 'aspera_fod100',
	[string]$version =  'latest',
	[string]$Product = 'aspera-faspex-ondemand100',
	[string]$name = 'aspera_fod100'
)
Write-Host "Image Creation in Process - Plan Info - aspera | aspera_fod100"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: aspera Offer:aspera-faspex-ondemand100 Sku:aspera_fod100 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_at-cl-attunity-cloudbeam-for-microsoft-azure-dw-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'attunity_cloudbeam',
	[string]$Offer = 'cloudbeam-dw-byol',
	[string]$Skus = 'attunity-cloudbeam-for-microsoft-azure-dw-byol',
	[string]$version =  'latest',
	[string]$Product = 'cloudbeam-dw-byol',
	[string]$name = 'attunity-cloudbeam-for-microsoft-azure-dw-byol'
)
Write-Host "Image Creation in Process - Plan Info - attunity_cloudbeam | attunity-cloudbeam-for-microsoft-azure-dw-byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: attunity_cloudbeam Offer:cloudbeam-dw-byol Sku:attunity-cloudbeam-for-microsoft-azure-dw-byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_at-cl-cloudbeam_windows_express_byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'attunity_cloudbeam',
	[string]$Offer = 'cloudbeam_windows_express_byol_w2012',
	[string]$Skus = 'cloudbeam_windows_express_byol',
	[string]$version =  'latest',
	[string]$Product = 'cloudbeam_windows_express_byol_w2012',
	[string]$name = 'cloudbeam_windows_express_byol'
)
Write-Host "Image Creation in Process - Plan Info - attunity_cloudbeam | cloudbeam_windows_express_byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: attunity_cloudbeam Offer:cloudbeam_windows_express_byol_w2012 Sku:cloudbeam_windows_express_byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_au-au-hourly
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'auraportal',
	[string]$Offer = 'auraportal-helium-document-management',
	[string]$Skus = 'hourly',
	[string]$version =  'latest',
	[string]$Product = 'auraportal-helium-document-management',
	[string]$name = 'hourly'
)
Write-Host "Image Creation in Process - Plan Info - auraportal | hourly"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: auraportal Offer:auraportal-helium-document-management Sku:hourly Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_au-es-data-viewer
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'auriq-systems',
	[string]$Offer = 'essentia',
	[string]$Skus = 'data-viewer',
	[string]$version =  'latest',
	[string]$Product = 'essentia',
	[string]$name = 'data-viewer'
)
Write-Host "Image Creation in Process - Plan Info - auriq-systems | data-viewer"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: auriq-systems Offer:essentia Sku:data-viewer Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_av-av-complianceguardian_4
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'avepoint',
	[string]$Offer = 'avepoint-compliance-guardian',
	[string]$Skus = 'complianceguardian_4',
	[string]$version =  'latest',
	[string]$Product = 'avepoint-compliance-guardian',
	[string]$name = 'complianceguardian_4'
)
Write-Host "Image Creation in Process - Plan Info - avepoint | complianceguardian_4"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: avepoint Offer:avepoint-compliance-guardian Sku:complianceguardian_4 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_av-do-docavemgr_6_6_0
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'avepoint',
	[string]$Offer = 'docave-for-office365',
	[string]$Skus = 'docavemgr_6_6_0',
	[string]$version =  'latest',
	[string]$Product = 'docave-for-office365',
	[string]$name = 'docavemgr_6_6_0'
)
Write-Host "Image Creation in Process - Plan Info - avepoint | docavemgr_6_6_0"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: avepoint Offer:docave-for-office365 Sku:docavemgr_6_6_0 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_av-vf-vfxtmgr
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'averesystems',
	[string]$Offer = 'vfxt',
	[string]$Skus = 'vfxtmgr',
	[string]$version =  'latest',
	[string]$Product = 'vfxt',
	[string]$name = 'vfxtmgr'
)
Write-Host "Image Creation in Process - Plan Info - averesystems | vfxtmgr"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: averesystems Offer:vfxt Sku:vfxtmgr Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_av-av-av-csg-10-tunnels
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'aviatrix-systems',
	[string]$Offer = 'aviatrix-cloud-services',
	[string]$Skus = 'av-csg-10-tunnels',
	[string]$version =  'latest',
	[string]$Product = 'aviatrix-cloud-services',
	[string]$name = 'av-csg-10-tunnels'
)
Write-Host "Image Creation in Process - Plan Info - aviatrix-systems | av-csg-10-tunnels"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: aviatrix-systems Offer:aviatrix-cloud-services Sku:av-csg-10-tunnels Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_av-av-av-csg-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'aviatrix-systems',
	[string]$Offer = 'aviatrix-cloud-services',
	[string]$Skus = 'av-csg-byol',
	[string]$version =  'latest',
	[string]$Product = 'aviatrix-cloud-services',
	[string]$name = 'av-csg-byol'
)
Write-Host "Image Creation in Process - Plan Info - aviatrix-systems | av-csg-byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: aviatrix-systems Offer:aviatrix-cloud-services Sku:av-csg-byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_av-av-aviatrix-companion-gateway
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'aviatrix-systems',
	[string]$Offer = 'aviatrix-companion-gateway',
	[string]$Skus = 'aviatrix-companion-gateway',
	[string]$version =  'latest',
	[string]$Product = 'aviatrix-companion-gateway',
	[string]$name = 'aviatrix-companion-gateway'
)
Write-Host "Image Creation in Process - Plan Info - aviatrix-systems | aviatrix-companion-gateway"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: aviatrix-systems Offer:aviatrix-companion-gateway Sku:aviatrix-companion-gateway Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_aw-aw-az0-000c-01c
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'awingu',
	[string]$Offer = 'awingu',
	[string]$Skus = 'az0-000c-01c',
	[string]$version =  'latest',
	[string]$Product = 'awingu',
	[string]$name = 'az0-000c-01c'
)
Write-Host "Image Creation in Process - Plan Info - awingu | az0-000c-01c"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: awingu Offer:awingu Sku:az0-000c-01c Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ax-ax-axinomcms1170
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'axinom',
	[string]$Offer = 'axinom-cms',
	[string]$Skus = 'axinomcms1170',
	[string]$version =  'latest',
	[string]$Product = 'axinom-cms',
	[string]$name = 'axinomcms1170'
)
Write-Host "Image Creation in Process - Plan Info - axinom | axinomcms1170"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: axinom Offer:axinom-cms Sku:axinomcms1170 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ax-ax-ms-saasax-mg-ad-1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'axway',
	[string]$Offer = 'axway-mailgate-secure-collaboration-advanced',
	[string]$Skus = 'ms-saasax-mg-ad-1',
	[string]$version =  'latest',
	[string]$Product = 'axway-mailgate-secure-collaboration-advanced',
	[string]$name = 'ms-saasax-mg-ad-1'
)
Write-Host "Image Creation in Process - Plan Info - axway | ms-saasax-mg-ad-1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: axway Offer:axway-mailgate-secure-collaboration-advanced Sku:ms-saasax-mg-ad-1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ax-ax-ms-saasax-mg-ad-2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'axway',
	[string]$Offer = 'axway-mailgate-secure-collaboration-advanced',
	[string]$Skus = 'ms-saasax-mg-ad-2',
	[string]$version =  'latest',
	[string]$Product = 'axway-mailgate-secure-collaboration-advanced',
	[string]$name = 'ms-saasax-mg-ad-2'
)
Write-Host "Image Creation in Process - Plan Info - axway | ms-saasax-mg-ad-2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: axway Offer:axway-mailgate-secure-collaboration-advanced Sku:ms-saasax-mg-ad-2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ax-ax-ms-saasax-mg-ad-3
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'axway',
	[string]$Offer = 'axway-mailgate-secure-collaboration-advanced',
	[string]$Skus = 'ms-saasax-mg-ad-3',
	[string]$version =  'latest',
	[string]$Product = 'axway-mailgate-secure-collaboration-advanced',
	[string]$name = 'ms-saasax-mg-ad-3'
)
Write-Host "Image Creation in Process - Plan Info - axway | ms-saasax-mg-ad-3"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: axway Offer:axway-mailgate-secure-collaboration-advanced Sku:ms-saasax-mg-ad-3 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ax-ax-ms-saasax-mg-ad-4
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'axway',
	[string]$Offer = 'axway-mailgate-secure-collaboration-advanced',
	[string]$Skus = 'ms-saasax-mg-ad-4',
	[string]$version =  'latest',
	[string]$Product = 'axway-mailgate-secure-collaboration-advanced',
	[string]$name = 'ms-saasax-mg-ad-4'
)
Write-Host "Image Creation in Process - Plan Info - axway | ms-saasax-mg-ad-4"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: axway Offer:axway-mailgate-secure-collaboration-advanced Sku:ms-saasax-mg-ad-4 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ax-ax-ms-saasax-mg-ad-5
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'axway',
	[string]$Offer = 'axway-mailgate-secure-collaboration-advanced',
	[string]$Skus = 'ms-saasax-mg-ad-5',
	[string]$version =  'latest',
	[string]$Product = 'axway-mailgate-secure-collaboration-advanced',
	[string]$name = 'ms-saasax-mg-ad-5'
)
Write-Host "Image Creation in Process - Plan Info - axway | ms-saasax-mg-ad-5"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: axway Offer:axway-mailgate-secure-collaboration-advanced Sku:ms-saasax-mg-ad-5 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ax-ax-ms-saasax-mg-ad-6
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'axway',
	[string]$Offer = 'axway-mailgate-secure-collaboration-advanced',
	[string]$Skus = 'ms-saasax-mg-ad-6',
	[string]$version =  'latest',
	[string]$Product = 'axway-mailgate-secure-collaboration-advanced',
	[string]$name = 'ms-saasax-mg-ad-6'
)
Write-Host "Image Creation in Process - Plan Info - axway | ms-saasax-mg-ad-6"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: axway Offer:axway-mailgate-secure-collaboration-advanced Sku:ms-saasax-mg-ad-6 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ax-ax-ms-saasax-mg-ad-7
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'axway',
	[string]$Offer = 'axway-mailgate-secure-collaboration-advanced',
	[string]$Skus = 'ms-saasax-mg-ad-7',
	[string]$version =  'latest',
	[string]$Product = 'axway-mailgate-secure-collaboration-advanced',
	[string]$name = 'ms-saasax-mg-ad-7'
)
Write-Host "Image Creation in Process - Plan Info - axway | ms-saasax-mg-ad-7"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: axway Offer:axway-mailgate-secure-collaboration-advanced Sku:ms-saasax-mg-ad-7 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ax-ax-ms-saasax-mg-pr-1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'axway',
	[string]$Offer = 'axway-mailgate-secure-collaboration-premium',
	[string]$Skus = 'ms-saasax-mg-pr-1',
	[string]$version =  'latest',
	[string]$Product = 'axway-mailgate-secure-collaboration-premium',
	[string]$name = 'ms-saasax-mg-pr-1'
)
Write-Host "Image Creation in Process - Plan Info - axway | ms-saasax-mg-pr-1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: axway Offer:axway-mailgate-secure-collaboration-premium Sku:ms-saasax-mg-pr-1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ax-ax-ms-saasax-mg-pr-2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'axway',
	[string]$Offer = 'axway-mailgate-secure-collaboration-premium',
	[string]$Skus = 'ms-saasax-mg-pr-2',
	[string]$version =  'latest',
	[string]$Product = 'axway-mailgate-secure-collaboration-premium',
	[string]$name = 'ms-saasax-mg-pr-2'
)
Write-Host "Image Creation in Process - Plan Info - axway | ms-saasax-mg-pr-2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: axway Offer:axway-mailgate-secure-collaboration-premium Sku:ms-saasax-mg-pr-2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ax-ax-ms-saasax-mg-pr-3
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'axway',
	[string]$Offer = 'axway-mailgate-secure-collaboration-premium',
	[string]$Skus = 'ms-saasax-mg-pr-3',
	[string]$version =  'latest',
	[string]$Product = 'axway-mailgate-secure-collaboration-premium',
	[string]$name = 'ms-saasax-mg-pr-3'
)
Write-Host "Image Creation in Process - Plan Info - axway | ms-saasax-mg-pr-3"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: axway Offer:axway-mailgate-secure-collaboration-premium Sku:ms-saasax-mg-pr-3 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ax-ax-ms-saasax-mg-pr-4
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'axway',
	[string]$Offer = 'axway-mailgate-secure-collaboration-premium',
	[string]$Skus = 'ms-saasax-mg-pr-4',
	[string]$version =  'latest',
	[string]$Product = 'axway-mailgate-secure-collaboration-premium',
	[string]$name = 'ms-saasax-mg-pr-4'
)
Write-Host "Image Creation in Process - Plan Info - axway | ms-saasax-mg-pr-4"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: axway Offer:axway-mailgate-secure-collaboration-premium Sku:ms-saasax-mg-pr-4 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ax-ax-ms-saasax-mg-pr-5
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'axway',
	[string]$Offer = 'axway-mailgate-secure-collaboration-premium',
	[string]$Skus = 'ms-saasax-mg-pr-5',
	[string]$version =  'latest',
	[string]$Product = 'axway-mailgate-secure-collaboration-premium',
	[string]$name = 'ms-saasax-mg-pr-5'
)
Write-Host "Image Creation in Process - Plan Info - axway | ms-saasax-mg-pr-5"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: axway Offer:axway-mailgate-secure-collaboration-premium Sku:ms-saasax-mg-pr-5 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ax-ax-ms-saasax-mg-pr-6
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'axway',
	[string]$Offer = 'axway-mailgate-secure-collaboration-premium',
	[string]$Skus = 'ms-saasax-mg-pr-6',
	[string]$version =  'latest',
	[string]$Product = 'axway-mailgate-secure-collaboration-premium',
	[string]$name = 'ms-saasax-mg-pr-6'
)
Write-Host "Image Creation in Process - Plan Info - axway | ms-saasax-mg-pr-6"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: axway Offer:axway-mailgate-secure-collaboration-premium Sku:ms-saasax-mg-pr-6 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ax-ax-ms-saasax-mg-pr-7
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'axway',
	[string]$Offer = 'axway-mailgate-secure-collaboration-premium',
	[string]$Skus = 'ms-saasax-mg-pr-7',
	[string]$version =  'latest',
	[string]$Product = 'axway-mailgate-secure-collaboration-premium',
	[string]$name = 'ms-saasax-mg-pr-7'
)
Write-Host "Image Creation in Process - Plan Info - axway | ms-saasax-mg-pr-7"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: axway Offer:axway-mailgate-secure-collaboration-premium Sku:ms-saasax-mg-pr-7 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ax-ax-ms-saasax-mg-st-1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'axway',
	[string]$Offer = 'axway-mailgate-secure-collaboration-standard',
	[string]$Skus = 'ms-saasax-mg-st-1',
	[string]$version =  'latest',
	[string]$Product = 'axway-mailgate-secure-collaboration-standard',
	[string]$name = 'ms-saasax-mg-st-1'
)
Write-Host "Image Creation in Process - Plan Info - axway | ms-saasax-mg-st-1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: axway Offer:axway-mailgate-secure-collaboration-standard Sku:ms-saasax-mg-st-1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ax-ax-ms-saasax-mg-st-2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'axway',
	[string]$Offer = 'axway-mailgate-secure-collaboration-standard',
	[string]$Skus = 'ms-saasax-mg-st-2',
	[string]$version =  'latest',
	[string]$Product = 'axway-mailgate-secure-collaboration-standard',
	[string]$name = 'ms-saasax-mg-st-2'
)
Write-Host "Image Creation in Process - Plan Info - axway | ms-saasax-mg-st-2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: axway Offer:axway-mailgate-secure-collaboration-standard Sku:ms-saasax-mg-st-2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ax-ax-ms-saasax-mg-st-3
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'axway',
	[string]$Offer = 'axway-mailgate-secure-collaboration-standard',
	[string]$Skus = 'ms-saasax-mg-st-3',
	[string]$version =  'latest',
	[string]$Product = 'axway-mailgate-secure-collaboration-standard',
	[string]$name = 'ms-saasax-mg-st-3'
)
Write-Host "Image Creation in Process - Plan Info - axway | ms-saasax-mg-st-3"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: axway Offer:axway-mailgate-secure-collaboration-standard Sku:ms-saasax-mg-st-3 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ax-ax-ms-saasax-mg-st-4
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'axway',
	[string]$Offer = 'axway-mailgate-secure-collaboration-standard',
	[string]$Skus = 'ms-saasax-mg-st-4',
	[string]$version =  'latest',
	[string]$Product = 'axway-mailgate-secure-collaboration-standard',
	[string]$name = 'ms-saasax-mg-st-4'
)
Write-Host "Image Creation in Process - Plan Info - axway | ms-saasax-mg-st-4"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: axway Offer:axway-mailgate-secure-collaboration-standard Sku:ms-saasax-mg-st-4 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ax-ax-ms-saasax-mg-st-5
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'axway',
	[string]$Offer = 'axway-mailgate-secure-collaboration-standard',
	[string]$Skus = 'ms-saasax-mg-st-5',
	[string]$version =  'latest',
	[string]$Product = 'axway-mailgate-secure-collaboration-standard',
	[string]$name = 'ms-saasax-mg-st-5'
)
Write-Host "Image Creation in Process - Plan Info - axway | ms-saasax-mg-st-5"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: axway Offer:axway-mailgate-secure-collaboration-standard Sku:ms-saasax-mg-st-5 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ax-ax-ms-saasax-mg-st-6
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'axway',
	[string]$Offer = 'axway-mailgate-secure-collaboration-standard',
	[string]$Skus = 'ms-saasax-mg-st-6',
	[string]$version =  'latest',
	[string]$Product = 'axway-mailgate-secure-collaboration-standard',
	[string]$name = 'ms-saasax-mg-st-6'
)
Write-Host "Image Creation in Process - Plan Info - axway | ms-saasax-mg-st-6"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: axway Offer:axway-mailgate-secure-collaboration-standard Sku:ms-saasax-mg-st-6 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ax-ax-ms-saasax-mg-st-7
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'axway',
	[string]$Offer = 'axway-mailgate-secure-collaboration-standard',
	[string]$Skus = 'ms-saasax-mg-st-7',
	[string]$version =  'latest',
	[string]$Product = 'axway-mailgate-secure-collaboration-standard',
	[string]$name = 'ms-saasax-mg-st-7'
)
Write-Host "Image Creation in Process - Plan Info - axway | ms-saasax-mg-st-7"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: axway Offer:axway-mailgate-secure-collaboration-standard Sku:ms-saasax-mg-st-7 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_az-az-azul-zre-2016q2-ubtu1404
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'azul',
	[string]$Offer = 'azul-zulu-enterprise-ubuntu',
	[string]$Skus = 'azul-zre-2016q2-ubtu1404',
	[string]$version =  'latest',
	[string]$Product = 'azul-zulu-enterprise-ubuntu',
	[string]$name = 'azul-zre-2016q2-ubtu1404'
)
Write-Host "Image Creation in Process - Plan Info - azul | azul-zre-2016q2-ubtu1404"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: azul Offer:azul-zulu-enterprise-ubuntu Sku:azul-zre-2016q2-ubtu1404 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_az-az-azul-zre-2016q3-ubtu1604
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'azul',
	[string]$Offer = 'azul-zulu-enterprise-ubuntu-1604',
	[string]$Skus = 'azul-zre-2016q3-ubtu1604',
	[string]$version =  'latest',
	[string]$Product = 'azul-zulu-enterprise-ubuntu-1604',
	[string]$name = 'azul-zre-2016q3-ubtu1604'
)
Write-Host "Image Creation in Process - Plan Info - azul | azul-zre-2016q3-ubtu1604"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: azul Offer:azul-zulu-enterprise-ubuntu-1604 Sku:azul-zre-2016q3-ubtu1604 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_az-az-azul-zre-2016q2-win12r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'azul',
	[string]$Offer = 'azul-zulu-enterprise-windows',
	[string]$Skus = 'azul-zre-2016q2-win12r2',
	[string]$version =  'latest',
	[string]$Product = 'azul-zulu-enterprise-windows',
	[string]$name = 'azul-zre-2016q2-win12r2'
)
Write-Host "Image Creation in Process - Plan Info - azul | azul-zre-2016q2-win12r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: azul Offer:azul-zulu-enterprise-windows Sku:azul-zre-2016q2-win12r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_az-az-azul-zre-2016q3-win12r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'azul',
	[string]$Offer = 'azul-zulu-enterprise-windows-2012r2',
	[string]$Skus = 'azul-zre-2016q3-win12r2',
	[string]$version =  'latest',
	[string]$Product = 'azul-zulu-enterprise-windows-2012r2',
	[string]$name = 'azul-zre-2016q3-win12r2'
)
Write-Host "Image Creation in Process - Plan Info - azul | azul-zre-2016q3-win12r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: azul Offer:azul-zulu-enterprise-windows-2012r2 Sku:azul-zre-2016q3-win12r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_az-az-azul-zulu-2016q2-ubtu1404
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'azul',
	[string]$Offer = 'azul-zulu-ubuntu',
	[string]$Skus = 'azul-zulu-2016q2-ubtu1404',
	[string]$version =  'latest',
	[string]$Product = 'azul-zulu-ubuntu',
	[string]$name = 'azul-zulu-2016q2-ubtu1404'
)
Write-Host "Image Creation in Process - Plan Info - azul | azul-zulu-2016q2-ubtu1404"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: azul Offer:azul-zulu-ubuntu Sku:azul-zulu-2016q2-ubtu1404 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_az-az-azul-zulu-2016q2-win12r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'azul',
	[string]$Offer = 'azul-zulu-windows',
	[string]$Skus = 'azul-zulu-2016q2-win12r2',
	[string]$version =  'latest',
	[string]$Product = 'azul-zulu-windows',
	[string]$name = 'azul-zulu-2016q2-win12r2'
)
Write-Host "Image Creation in Process - Plan Info - azul | azul-zulu-2016q2-win12r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: azul Offer:azul-zulu-windows Sku:azul-zulu-2016q2-win12r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_az-az-azul-zulu-2016q3-win12r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'azul',
	[string]$Offer = 'azul-zulu-windows-2012r2',
	[string]$Skus = 'azul-zulu-2016q3-win12r2',
	[string]$version =  'latest',
	[string]$Product = 'azul-zulu-windows-2012r2',
	[string]$name = 'azul-zulu-2016q3-win12r2'
)
Write-Host "Image Creation in Process - Plan Info - azul | azul-zulu-2016q3-win12r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: azul Offer:azul-zulu-windows-2012r2 Sku:azul-zulu-2016q3-win12r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ba-ba-scb
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'balabit',
	[string]$Offer = 'balabit-shell-control-box',
	[string]$Skus = 'scb',
	[string]$version =  'latest',
	[string]$Product = 'balabit-shell-control-box',
	[string]$name = 'scb'
)
Write-Host "Image Creation in Process - Plan Info - balabit | scb"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: balabit Offer:balabit-shell-control-box Sku:scb Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ba-ba-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'barracudanetworks',
	[string]$Offer = 'barracuda-message-archiver',
	[string]$Skus = 'byol',
	[string]$version =  'latest',
	[string]$Product = 'barracuda-message-archiver',
	[string]$name = 'byol'
)
Write-Host "Image Creation in Process - Plan Info - barracudanetworks | byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: barracudanetworks Offer:barracuda-message-archiver Sku:byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ba-ba-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'barracudanetworks',
	[string]$Offer = 'barracuda-ng-cc',
	[string]$Skus = 'byol',
	[string]$version =  'latest',
	[string]$Product = 'barracuda-ng-cc',
	[string]$name = 'byol'
)
Write-Host "Image Creation in Process - Plan Info - barracudanetworks | byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: barracudanetworks Offer:barracuda-ng-cc Sku:byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ba-ba-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'barracudanetworks',
	[string]$Offer = 'barracuda-ng-firewall',
	[string]$Skus = 'byol',
	[string]$version =  'latest',
	[string]$Product = 'barracuda-ng-firewall',
	[string]$name = 'byol'
)
Write-Host "Image Creation in Process - Plan Info - barracudanetworks | byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: barracudanetworks Offer:barracuda-ng-firewall Sku:byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ba-ba-hourly
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'barracudanetworks',
	[string]$Offer = 'barracuda-ng-firewall',
	[string]$Skus = 'hourly',
	[string]$version =  'latest',
	[string]$Product = 'barracuda-ng-firewall',
	[string]$name = 'hourly'
)
Write-Host "Image Creation in Process - Plan Info - barracudanetworks | hourly"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: barracudanetworks Offer:barracuda-ng-firewall Sku:hourly Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ba-ba-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'barracudanetworks',
	[string]$Offer = 'barracuda-spam-firewall',
	[string]$Skus = 'byol',
	[string]$version =  'latest',
	[string]$Product = 'barracuda-spam-firewall',
	[string]$name = 'byol'
)
Write-Host "Image Creation in Process - Plan Info - barracudanetworks | byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: barracudanetworks Offer:barracuda-spam-firewall Sku:byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ba-ba-hourly
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'barracudanetworks',
	[string]$Offer = 'barracuda-spam-firewall',
	[string]$Skus = 'hourly',
	[string]$version =  'latest',
	[string]$Product = 'barracuda-spam-firewall',
	[string]$name = 'hourly'
)
Write-Host "Image Creation in Process - Plan Info - barracudanetworks | hourly"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: barracudanetworks Offer:barracuda-spam-firewall Sku:hourly Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ba-wa-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'barracudanetworks',
	[string]$Offer = 'waf',
	[string]$Skus = 'byol',
	[string]$version =  'latest',
	[string]$Product = 'waf',
	[string]$name = 'byol'
)
Write-Host "Image Creation in Process - Plan Info - barracudanetworks | byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: barracudanetworks Offer:waf Sku:byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ba-wa-hourly
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'barracudanetworks',
	[string]$Offer = 'waf',
	[string]$Skus = 'hourly',
	[string]$version =  'latest',
	[string]$Product = 'waf',
	[string]$name = 'hourly'
)
Write-Host "Image Creation in Process - Plan Info - barracudanetworks | hourly"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: barracudanetworks Offer:waf Sku:hourly Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ba-ri-rs201-o
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'basho',
	[string]$Offer = 'riak-2-0-1',
	[string]$Skus = 'rs201-o',
	[string]$version =  'latest',
	[string]$Product = 'riak-2-0-1',
	[string]$name = 'rs201-o'
)
Write-Host "Image Creation in Process - Plan Info - basho | rs201-o"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: basho Offer:riak-2-0-1 Sku:rs201-o Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-3--3-4
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = '3-4',
	[string]$Skus = '3-4',
	[string]$version =  'latest',
	[string]$Product = '3-4',
	[string]$name = '3-4'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 3-4"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:3-4 Sku:3-4 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-ab-1-2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'abantecart',
	[string]$Skus = '1-2',
	[string]$version =  'latest',
	[string]$Product = 'abantecart',
	[string]$name = '1-2'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 1-2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:abantecart Sku:1-2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-ac-5-13
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'activemq',
	[string]$Skus = '5-13',
	[string]$version =  'latest',
	[string]$Product = 'activemq',
	[string]$name = '5-13'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 5-13"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:activemq Sku:5-13 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-ak-1-4
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'akeneo',
	[string]$Skus = '1-4',
	[string]$version =  'latest',
	[string]$Product = 'akeneo',
	[string]$name = '1-4'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 1-4"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:akeneo Sku:1-4 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-al-201602
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'alfrescocommunity',
	[string]$Skus = '201602',
	[string]$version =  'latest',
	[string]$Product = 'alfrescocommunity',
	[string]$name = '201602'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 201602"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:alfrescocommunity Sku:201602 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-am-3-7
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'ametys',
	[string]$Skus = '3-7',
	[string]$version =  'latest',
	[string]$Product = 'ametys',
	[string]$name = '3-7'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 3-7"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:ametys Sku:3-7 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-ap-5-5
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'apachesolr',
	[string]$Skus = '5-5',
	[string]$version =  'latest',
	[string]$Product = 'apachesolr',
	[string]$name = '5-5'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 5-5"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:apachesolr Sku:5-5 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-ar-4-5
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'artifactory',
	[string]$Skus = '4-5',
	[string]$version =  'latest',
	[string]$Product = 'artifactory',
	[string]$name = '4-5'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 4-5"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:artifactory Sku:4-5 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-ca-2016-02
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'canvaslms',
	[string]$Skus = '2016-02',
	[string]$version =  'latest',
	[string]$Product = 'canvaslms',
	[string]$name = '2016-02'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 2016-02"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:canvaslms Sku:2016-02 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-ca-3-7
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'cassandra',
	[string]$Skus = '3-7',
	[string]$version =  'latest',
	[string]$Product = 'cassandra',
	[string]$name = '3-7'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 3-7"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:cassandra Sku:3-7 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-ch-2-5
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'chyrp',
	[string]$Skus = '2-5',
	[string]$version =  'latest',
	[string]$Product = 'chyrp',
	[string]$name = '2-5'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 2-5"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:chyrp Sku:2-5 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-ci-4-6
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'civicrm',
	[string]$Skus = '4-6',
	[string]$version =  'latest',
	[string]$Product = 'civicrm',
	[string]$name = '4-6'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 4-6"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:civicrm Sku:4-6 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-ci-4-7
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'civicrm',
	[string]$Skus = '4-7',
	[string]$version =  'latest',
	[string]$Product = 'civicrm',
	[string]$name = '4-7'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 4-7"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:civicrm Sku:4-7 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-cm-2-1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'cmsmadesimple',
	[string]$Skus = '2-1',
	[string]$version =  'latest',
	[string]$Product = 'cmsmadesimple',
	[string]$name = '2-1'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 2-1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:cmsmadesimple Sku:2-1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-co-2-7
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'codiad',
	[string]$Skus = '2-7',
	[string]$version =  'latest',
	[string]$Product = 'codiad',
	[string]$name = '2-7'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 2-7"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:codiad Sku:2-7 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-co-5-7
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'concrete5',
	[string]$Skus = '5-7',
	[string]$version =  'latest',
	[string]$Product = 'concrete5',
	[string]$name = '5-7'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 5-7"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:concrete5 Sku:5-7 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-co-1-5
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'coppermine',
	[string]$Skus = '1-5',
	[string]$version =  'latest',
	[string]$Product = 'coppermine',
	[string]$name = '1-5'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 1-5"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:coppermine Sku:1-5 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-co-1-6
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'couchdb',
	[string]$Skus = '1-6',
	[string]$version =  'latest',
	[string]$Product = 'couchdb',
	[string]$name = '1-6'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 1-6"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:couchdb Sku:1-6 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-di-0-5
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'diaspora',
	[string]$Skus = '0-5',
	[string]$version =  'latest',
	[string]$Product = 'diaspora',
	[string]$name = '0-5'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 0-5"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:diaspora Sku:0-5 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-di-1-4
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'discourse',
	[string]$Skus = '1-4',
	[string]$version =  'latest',
	[string]$Product = 'discourse',
	[string]$name = '1-4'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 1-4"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:discourse Sku:1-4 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-dj-1-8
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'djangostack',
	[string]$Skus = '1-8',
	[string]$version =  'latest',
	[string]$Product = 'djangostack',
	[string]$name = '1-8'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 1-8"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:djangostack Sku:1-8 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-do-20150810a
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'dokuwiki',
	[string]$Skus = '20150810a',
	[string]$version =  'latest',
	[string]$Product = 'dokuwiki',
	[string]$name = '20150810a'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 20150810a"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:dokuwiki Sku:20150810a Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-do-3-8
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'dolibarr',
	[string]$Skus = '3-8',
	[string]$version =  'latest',
	[string]$Product = 'dolibarr',
	[string]$name = '3-8'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 3-8"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:dolibarr Sku:3-8 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-Dr-1.6
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'DreamFactory',
	[string]$Skus = '1.6',
	[string]$version =  'latest',
	[string]$Product = 'DreamFactory',
	[string]$name = '1.6'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 1.6"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:DreamFactory Sku:1.6 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-Dr-1.7
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'DreamFactory',
	[string]$Skus = '1.7',
	[string]$version =  'latest',
	[string]$Product = 'DreamFactory',
	[string]$name = '1.7'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 1.7"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:DreamFactory Sku:1.7 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-Dr-2-1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'DreamFactory',
	[string]$Skus = '2-1',
	[string]$version =  'latest',
	[string]$Product = 'DreamFactory',
	[string]$name = '2-1'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 2-1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:DreamFactory Sku:2-1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-dr-8-0
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'drupal',
	[string]$Skus = '8-0',
	[string]$version =  'latest',
	[string]$Product = 'drupal',
	[string]$name = '8-0'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 8-0"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:drupal Sku:8-0 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-ec-4-4
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'eclipseche',
	[string]$Skus = '4-4',
	[string]$version =  'latest',
	[string]$Product = 'eclipseche',
	[string]$name = '4-4'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 4-4"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:eclipseche Sku:4-4 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-el-2-2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'elastic-search',
	[string]$Skus = '2-2',
	[string]$version =  'latest',
	[string]$Product = 'elastic-search',
	[string]$name = '2-2'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 2-2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:elastic-search Sku:2-2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-en-1-1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'enanocms',
	[string]$Skus = '1-1',
	[string]$version =  'latest',
	[string]$Product = 'enanocms',
	[string]$name = '1-1'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 1-1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:enanocms Sku:1-1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-er-6-21
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'erpnext',
	[string]$Skus = '6-21',
	[string]$version =  'latest',
	[string]$Product = 'erpnext',
	[string]$name = '6-21'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 6-21"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:erpnext Sku:6-21 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-es-3-9
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'espocrm',
	[string]$Skus = '3-9',
	[string]$version =  'latest',
	[string]$Product = 'espocrm',
	[string]$name = '3-9'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 3-9"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:espocrm Sku:3-9 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-eX-Express-4
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'eXo-Platform',
	[string]$Skus = 'Express-4',
	[string]$version =  'latest',
	[string]$Product = 'eXo-Platform',
	[string]$name = 'Express-4'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | Express-4"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:eXo-Platform Sku:Express-4 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-ex-4
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'exoplatform',
	[string]$Skus = '4',
	[string]$version =  'latest',
	[string]$Product = 'exoplatform',
	[string]$name = '4'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 4"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:exoplatform Sku:4 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-ex-4-2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'exoplatformenterprise',
	[string]$Skus = '4-2',
	[string]$version =  'latest',
	[string]$Product = 'exoplatformenterprise',
	[string]$name = '4-2'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 4-2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:exoplatformenterprise Sku:4-2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-ez-2014-11
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'ezpublish',
	[string]$Skus = '2014-11',
	[string]$version =  'latest',
	[string]$Product = 'ezpublish',
	[string]$name = '2014-11'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 2014-11"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:ezpublish Sku:2014-11 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-fa-0-13
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'fatfreecrm',
	[string]$Skus = '0-13',
	[string]$version =  'latest',
	[string]$Product = 'fatfreecrm',
	[string]$name = '0-13'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 0-13"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:fatfreecrm Sku:0-13 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-gh-0-7
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'ghost',
	[string]$Skus = '0-7',
	[string]$version =  'latest',
	[string]$Product = 'ghost',
	[string]$name = '0-7'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 0-7"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:ghost Sku:0-7 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-gi-8-5
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'gitlab',
	[string]$Skus = '8-5',
	[string]$version =  'latest',
	[string]$Product = 'gitlab',
	[string]$name = '8-5'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 8-5"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:gitlab Sku:8-5 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-ha-2-7
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'hadoop',
	[string]$Skus = '2-7',
	[string]$version =  'latest',
	[string]$Product = 'hadoop',
	[string]$name = '2-7'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 2-7"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:hadoop Sku:2-7 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-hh-3-9
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'hhvmstack',
	[string]$Skus = '3-9',
	[string]$version =  'latest',
	[string]$Product = 'hhvmstack',
	[string]$name = '3-9'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 3-9"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:hhvmstack Sku:3-9 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-ho-5-2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'hordegroupwarewebmail',
	[string]$Skus = '5-2',
	[string]$version =  'latest',
	[string]$Product = 'hordegroupwarewebmail',
	[string]$name = '5-2'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 5-2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:hordegroupwarewebmail Sku:5-2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-ja-6-2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'jasperreports',
	[string]$Skus = '6-2',
	[string]$version =  'latest',
	[string]$Product = 'jasperreports',
	[string]$name = '6-2'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 6-2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:jasperreports Sku:6-2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-jb-7-2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'jbossas',
	[string]$Skus = '7-2',
	[string]$version =  'latest',
	[string]$Product = 'jbossas',
	[string]$name = '7-2'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 7-2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:jbossas Sku:7-2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-je-1-650
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'jenkins',
	[string]$Skus = '1-650',
	[string]$version =  'latest',
	[string]$Product = 'jenkins',
	[string]$name = '1-650'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 1-650"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:jenkins Sku:1-650 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-jo-3-5
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'joomla',
	[string]$Skus = '3-5',
	[string]$version =  'latest',
	[string]$Product = 'joomla',
	[string]$name = '3-5'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 3-5"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:joomla Sku:3-5 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-jr-9-0
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'jrubystack',
	[string]$Skus = '9-0',
	[string]$version =  'latest',
	[string]$Product = 'jrubystack',
	[string]$name = '9-0'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 9-0"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:jrubystack Sku:9-0 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-ka-0-1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'kafka',
	[string]$Skus = '0-1',
	[string]$version =  'latest',
	[string]$Product = 'kafka',
	[string]$name = '0-1'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 0-1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:kafka Sku:0-1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-la-5-6
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'lampstack',
	[string]$Skus = '5-6',
	[string]$version =  'latest',
	[string]$Product = 'lampstack',
	[string]$name = '5-6'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 5-6"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:lampstack Sku:5-6 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-la-5-6
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'lappstack',
	[string]$Skus = '5-6',
	[string]$version =  'latest',
	[string]$Product = 'lappstack',
	[string]$name = '5-6'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 5-6"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:lappstack Sku:5-6 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-le-0-4
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'letschat',
	[string]$Skus = '0-4',
	[string]$version =  'latest',
	[string]$Product = 'letschat',
	[string]$name = '0-4'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 0-4"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:letschat Sku:0-4 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-li-6-2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'liferay',
	[string]$Skus = '6-2',
	[string]$version =  'latest',
	[string]$Product = 'liferay',
	[string]$name = '6-2'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 6-2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:liferay Sku:6-2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-li-20160228
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'limesurvey',
	[string]$Skus = '20160228',
	[string]$version =  'latest',
	[string]$Product = 'limesurvey',
	[string]$name = '20160228'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 20160228"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:limesurvey Sku:20160228 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-li-2-44v
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'livehelperchat',
	[string]$Skus = '2-44v',
	[string]$version =  'latest',
	[string]$Product = 'livehelperchat',
	[string]$name = '2-44v'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 2-44v"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:livehelperchat Sku:2-44v Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-ma-2-0
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'magento',
	[string]$Skus = '2-0',
	[string]$version =  'latest',
	[string]$Product = 'magento',
	[string]$name = '2-0'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 2-0"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:magento Sku:2-0 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-ma-15-10
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'mahara',
	[string]$Skus = '15-10',
	[string]$version =  'latest',
	[string]$Product = 'mahara',
	[string]$name = '15-10'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 15-10"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:mahara Sku:15-10 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-ma-1-2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'mantis',
	[string]$Skus = '1-2',
	[string]$version =  'latest',
	[string]$Product = 'mantis',
	[string]$name = '1-2'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 1-2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:mantis Sku:1-2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-ma-1-2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'mautic',
	[string]$Skus = '1-2',
	[string]$version =  'latest',
	[string]$Product = 'mautic',
	[string]$name = '1-2'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 1-2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:mautic Sku:1-2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-me-3-2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'mean',
	[string]$Skus = '3-2',
	[string]$version =  'latest',
	[string]$Product = 'mean',
	[string]$name = '3-2'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 3-2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:mean Sku:3-2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-me-1-26
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'mediawiki',
	[string]$Skus = '1-26',
	[string]$version =  'latest',
	[string]$Product = 'mediawiki',
	[string]$name = '1-26'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 1-26"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:mediawiki Sku:1-26 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-me-1-4
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'memcached',
	[string]$Skus = '1-4',
	[string]$version =  'latest',
	[string]$Product = 'memcached',
	[string]$name = '1-4'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 1-4"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:memcached Sku:1-4 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-mo-2-4
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'modx',
	[string]$Skus = '2-4',
	[string]$version =  'latest',
	[string]$Product = 'modx',
	[string]$name = '2-4'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 2-4"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:modx Sku:2-4 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-mo-3-2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'mongodb',
	[string]$Skus = '3-2',
	[string]$version =  'latest',
	[string]$Product = 'mongodb',
	[string]$name = '3-2'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 3-2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:mongodb Sku:3-2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-mo-3-0
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'moodle',
	[string]$Skus = '3-0',
	[string]$version =  'latest',
	[string]$Product = 'moodle',
	[string]$name = '3-0'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 3-0"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:moodle Sku:3-0 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-my-1-8
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'mybb',
	[string]$Skus = '1-8',
	[string]$version =  'latest',
	[string]$Product = 'mybb',
	[string]$name = '1-8'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 1-8"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:mybb Sku:1-8 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-my-5-6
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'mysql',
	[string]$Skus = '5-6',
	[string]$version =  'latest',
	[string]$Product = 'mysql',
	[string]$name = '5-6'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 5-6"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:mysql Sku:5-6 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-ne-2-0
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'neos',
	[string]$Skus = '2-0',
	[string]$version =  'latest',
	[string]$Product = 'neos',
	[string]$name = '2-0'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 2-0"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:neos Sku:2-0 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-ng-1-9
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'nginxstack',
	[string]$Skus = '1-9',
	[string]$version =  'latest',
	[string]$Product = 'nginxstack',
	[string]$name = '1-9'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 1-9"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:nginxstack Sku:1-9 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-no-6-9
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'noalyss',
	[string]$Skus = '6-9',
	[string]$version =  'latest',
	[string]$Product = 'noalyss',
	[string]$name = '6-9'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 6-9"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:noalyss Sku:6-9 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-no-4-3
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'nodejs',
	[string]$Skus = '4-3',
	[string]$version =  'latest',
	[string]$Product = 'nodejs',
	[string]$name = '4-3'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 4-3"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:nodejs Sku:4-3 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-oc-9
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'ocportal',
	[string]$Skus = '9',
	[string]$version =  'latest',
	[string]$Product = 'ocportal',
	[string]$name = '9'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 9"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:ocportal Sku:9 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-oc-9-0
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'ocportal',
	[string]$Skus = '9-0',
	[string]$version =  'latest',
	[string]$Product = 'ocportal',
	[string]$name = '9-0'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 9-0"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:ocportal Sku:9-0 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-od-9-0
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'odoo',
	[string]$Skus = '9-0',
	[string]$version =  'latest',
	[string]$Product = 'odoo',
	[string]$name = '9-0'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 9-0"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:odoo Sku:9-0 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-op-2-54
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'openatrium',
	[string]$Skus = '2-54',
	[string]$version =  'latest',
	[string]$Product = 'openatrium',
	[string]$name = '2-54'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 2-54"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:openatrium Sku:2-54 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-op-2-1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'opencart',
	[string]$Skus = '2-1',
	[string]$version =  'latest',
	[string]$Product = 'opencart',
	[string]$name = '2-1'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 2-1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:opencart Sku:2-1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-op-cypress
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'openedx',
	[string]$Skus = 'cypress',
	[string]$version =  'latest',
	[string]$Product = 'openedx',
	[string]$name = 'cypress'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | cypress"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:openedx Sku:cypress Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-op-7-0
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'openerp',
	[string]$Skus = '7-0',
	[string]$version =  'latest',
	[string]$Product = 'openerp',
	[string]$name = '7-0'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 7-0"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:openerp Sku:7-0 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-op-4
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'openfire',
	[string]$Skus = '4',
	[string]$version =  'latest',
	[string]$Product = 'openfire',
	[string]$name = '4'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 4"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:openfire Sku:4 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-op-5-0
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'openproject',
	[string]$Skus = '5-0',
	[string]$version =  'latest',
	[string]$Product = 'openproject',
	[string]$name = '5-0'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 5-0"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:openproject Sku:5-0 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-or-3-3
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'orangehrm',
	[string]$Skus = '3-3',
	[string]$version =  'latest',
	[string]$Product = 'orangehrm',
	[string]$name = '3-3'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 3-3"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:orangehrm Sku:3-3 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-or-1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'orocrm',
	[string]$Skus = '1',
	[string]$version =  'latest',
	[string]$Product = 'orocrm',
	[string]$name = '1'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:orocrm Sku:1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-os-3-6
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'osclass',
	[string]$Skus = '3-6',
	[string]$version =  'latest',
	[string]$Product = 'osclass',
	[string]$name = '3-6'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 3-6"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:osclass Sku:3-6 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-os-1-0rc
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'osqa',
	[string]$Skus = '1-0rc',
	[string]$version =  'latest',
	[string]$Product = 'osqa',
	[string]$name = '1-0rc'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 1-0rc"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:osqa Sku:1-0rc Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-ow-8-2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'owncloud',
	[string]$Skus = '8-2',
	[string]$version =  'latest',
	[string]$Product = 'owncloud',
	[string]$name = '8-2'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 8-2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:owncloud Sku:8-2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-ox-4-9
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'oxid-eshop',
	[string]$Skus = '4-9',
	[string]$version =  'latest',
	[string]$Product = 'oxid-eshop',
	[string]$name = '4-9'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 4-9"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:oxid-eshop Sku:4-9 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-pa-2-1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'parseserver',
	[string]$Skus = '2-1',
	[string]$version =  'latest',
	[string]$Product = 'parseserver',
	[string]$name = '2-1'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 2-1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:parseserver Sku:2-1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-ph-20160208
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'phabricator',
	[string]$Skus = '20160208',
	[string]$version =  'latest',
	[string]$Product = 'phabricator',
	[string]$name = '20160208'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 20160208"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:phabricator Sku:20160208 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-ph-3-1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'phpbb',
	[string]$Skus = '3-1',
	[string]$version =  'latest',
	[string]$Product = 'phpbb',
	[string]$name = '3-1'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 3-1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:phpbb Sku:3-1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-ph-3-2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'phplist',
	[string]$Skus = '3-2',
	[string]$version =  'latest',
	[string]$Product = 'phplist',
	[string]$name = '3-2'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 3-2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:phplist Sku:3-2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-pi-3-1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'pimcore',
	[string]$Skus = '3-1',
	[string]$version =  'latest',
	[string]$Product = 'pimcore',
	[string]$name = '3-1'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 3-1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:pimcore Sku:3-1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-pi-2-16
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'piwik',
	[string]$Skus = '2-16',
	[string]$version =  'latest',
	[string]$Product = 'piwik',
	[string]$name = '2-16'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 2-16"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:piwik Sku:2-16 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-pl-5-0
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'plone',
	[string]$Skus = '5-0',
	[string]$version =  'latest',
	[string]$Product = 'plone',
	[string]$name = '5-0'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 5-0"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:plone Sku:5-0 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-po-2-7
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'pootle',
	[string]$Skus = '2-7',
	[string]$version =  'latest',
	[string]$Product = 'pootle',
	[string]$name = '2-7'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 2-7"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:pootle Sku:2-7 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-po-9-5
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'postgresql',
	[string]$Skus = '9-5',
	[string]$version =  'latest',
	[string]$Product = 'postgresql',
	[string]$name = '9-5'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 9-5"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:postgresql Sku:9-5 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-pr-1-6-1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'prestashop',
	[string]$Skus = '1-6-1',
	[string]$version =  'latest',
	[string]$Product = 'prestashop',
	[string]$name = '1-6-1'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 1-6-1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:prestashop Sku:1-6-1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-pr-3-0
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'processmakeropensourceedition',
	[string]$Skus = '3-0',
	[string]$version =  'latest',
	[string]$Product = 'processmakeropensourceedition',
	[string]$name = '3-0'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 3-0"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:processmakeropensourceedition Sku:3-0 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-pr-2-7
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'processwire',
	[string]$Skus = '2-7',
	[string]$version =  'latest',
	[string]$Product = 'processwire',
	[string]$name = '2-7'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 2-7"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:processwire Sku:2-7 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-pu-8-2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'publify',
	[string]$Skus = '8-2',
	[string]$version =  'latest',
	[string]$Product = 'publify',
	[string]$name = '8-2'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 8-2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:publify Sku:8-2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-ra-3-6
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'rabbitmq',
	[string]$Skus = '3-6',
	[string]$version =  'latest',
	[string]$Product = 'rabbitmq',
	[string]$name = '3-6'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 3-6"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:rabbitmq Sku:3-6 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-ra-4-2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'railo',
	[string]$Skus = '4-2',
	[string]$version =  'latest',
	[string]$Product = 'railo',
	[string]$name = '4-2'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 4-2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:railo Sku:4-2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-re-0-10
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'redash',
	[string]$Skus = '0-10',
	[string]$version =  'latest',
	[string]$Product = 'redash',
	[string]$name = '0-10'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 0-10"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:redash Sku:0-10 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-re-3-2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'redis',
	[string]$Skus = '3-2',
	[string]$version =  'latest',
	[string]$Product = 'redis',
	[string]$name = '3-2'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 3-2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:redis Sku:3-2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-re-3
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'redmine',
	[string]$Skus = '3',
	[string]$version =  'latest',
	[string]$Product = 'redmine',
	[string]$name = '3'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 3"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:redmine Sku:3 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-re-2-1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'refinerycms',
	[string]$Skus = '2-1',
	[string]$version =  'latest',
	[string]$Product = 'refinerycms',
	[string]$name = '2-1'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 2-1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:refinerycms Sku:2-1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-re-2-2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'reportserver',
	[string]$Skus = '2-2',
	[string]$version =  'latest',
	[string]$Product = 'reportserver',
	[string]$name = '2-2'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 2-2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:reportserver Sku:2-2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-re-7-5
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'resourcespace',
	[string]$Skus = '7-5',
	[string]$version =  'latest',
	[string]$Product = 'resourcespace',
	[string]$name = '7-5'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 7-5"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:resourcespace Sku:7-5 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-re-2-5
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'reviewboard',
	[string]$Skus = '2-5',
	[string]$version =  'latest',
	[string]$Product = 'reviewboard',
	[string]$name = '2-5'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 2-5"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:reviewboard Sku:2-5 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-ro-5-1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'roller',
	[string]$Skus = '5-1',
	[string]$version =  'latest',
	[string]$Product = 'roller',
	[string]$name = '5-1'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 5-1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:roller Sku:5-1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-ro-1-1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'roundcube',
	[string]$Skus = '1-1',
	[string]$version =  'latest',
	[string]$Product = 'roundcube',
	[string]$name = '1-1'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 1-1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:roundcube Sku:1-1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-ru-2-0
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'rubystack',
	[string]$Skus = '2-0',
	[string]$version =  'latest',
	[string]$Product = 'rubystack',
	[string]$name = '2-0'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 2-0"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:rubystack Sku:2-0 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-se-3-8
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'seopanel',
	[string]$Skus = '3-8',
	[string]$version =  'latest',
	[string]$Product = 'seopanel',
	[string]$name = '3-8'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 3-8"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:seopanel Sku:3-8 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-sh-0-1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'sharelock',
	[string]$Skus = '0-1',
	[string]$version =  'latest',
	[string]$Product = 'sharelock',
	[string]$name = '0-1'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 0-1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:sharelock Sku:0-1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-sh-default
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'shopware',
	[string]$Skus = 'default',
	[string]$version =  'latest',
	[string]$Product = 'shopware',
	[string]$name = 'default'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | default"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:shopware Sku:default Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-si-3-2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'silverstripe',
	[string]$Skus = '3-2',
	[string]$version =  'latest',
	[string]$Product = 'silverstripe',
	[string]$name = '3-2'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 3-2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:silverstripe Sku:3-2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-si-2013-1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'simpleinvoices',
	[string]$Skus = '2013-1',
	[string]$version =  'latest',
	[string]$Product = 'simpleinvoices',
	[string]$name = '2013-1'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 2013-1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:simpleinvoices Sku:2013-1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-si-2-0
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'simplemachinesforum',
	[string]$Skus = '2-0',
	[string]$version =  'latest',
	[string]$Product = 'simplemachinesforum',
	[string]$name = '2-0'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 2-0"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:simplemachinesforum Sku:2-0 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-si-2-2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'sitecake',
	[string]$Skus = '2-2',
	[string]$version =  'latest',
	[string]$Product = 'sitecake',
	[string]$name = '2-2'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 2-2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:sitecake Sku:2-2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-sp-3-0
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'spree',
	[string]$Skus = '3-0',
	[string]$version =  'latest',
	[string]$Product = 'spree',
	[string]$name = '3-0'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 3-0"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:spree Sku:3-0 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-sq-20151209
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'squash',
	[string]$Skus = '20151209',
	[string]$version =  'latest',
	[string]$Product = 'squash',
	[string]$name = '20151209'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 20151209"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:squash Sku:20151209 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-su-1-8
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'subversion',
	[string]$Skus = '1-8',
	[string]$version =  'latest',
	[string]$Product = 'subversion',
	[string]$name = '1-8'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 1-8"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:subversion Sku:1-8 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-su-6-5
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'sugarcrm',
	[string]$Skus = '6-5',
	[string]$version =  'latest',
	[string]$Product = 'sugarcrm',
	[string]$name = '6-5'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 6-5"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:sugarcrm Sku:6-5 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-su-7-4
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'suitecrm',
	[string]$Skus = '7-4',
	[string]$version =  'latest',
	[string]$Product = 'suitecrm',
	[string]$name = '7-4'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 7-4"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:suitecrm Sku:7-4 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-te-1-9
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'testlink',
	[string]$Skus = '1-9',
	[string]$version =  'latest',
	[string]$Product = 'testlink',
	[string]$name = '1-9'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 1-9"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:testlink Sku:1-9 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-th-2-0
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'thinkup',
	[string]$Skus = '2-0',
	[string]$version =  'latest',
	[string]$Product = 'thinkup',
	[string]$name = '2-0'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 2-0"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:thinkup Sku:2-0 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-ti-14-2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'tikiwikicmsgroupware',
	[string]$Skus = '14-2',
	[string]$version =  'latest',
	[string]$Product = 'tikiwikicmsgroupware',
	[string]$name = '14-2'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 14-2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:tikiwikicmsgroupware Sku:14-2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-ti-20160220
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'tinytinyrss',
	[string]$Skus = '20160220',
	[string]$version =  'latest',
	[string]$Product = 'tinytinyrss',
	[string]$name = '20160220'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 20160220"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:tinytinyrss Sku:20160220 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-to-7-0
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'tom-cat',
	[string]$Skus = '7-0',
	[string]$version =  'latest',
	[string]$Product = 'tom-cat',
	[string]$name = '7-0'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 7-0"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:tom-cat Sku:7-0 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-tr-1-0
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'trac',
	[string]$Skus = '1-0',
	[string]$version =  'latest',
	[string]$Product = 'trac',
	[string]$name = '1-0'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 1-0"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:trac Sku:1-0 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-tr-2-3
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'tracks',
	[string]$Skus = '2-3',
	[string]$version =  'latest',
	[string]$Product = 'tracks',
	[string]$name = '2-3'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 2-3"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:tracks Sku:2-3 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-ty-7-6
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'typo3',
	[string]$Skus = '7-6',
	[string]$version =  'latest',
	[string]$Product = 'typo3',
	[string]$name = '7-6'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 7-6"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:typo3 Sku:7-6 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-we-2-4
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'weblate',
	[string]$Skus = '2-4',
	[string]$version =  'latest',
	[string]$Product = 'weblate',
	[string]$name = '2-4'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 2-4"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:weblate Sku:2-4 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-wi-10-0
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'wildfly',
	[string]$Skus = '10-0',
	[string]$version =  'latest',
	[string]$Product = 'wildfly',
	[string]$name = '10-0'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 10-0"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:wildfly Sku:10-0 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-wo-4-4
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'wordpress',
	[string]$Skus = '4-4',
	[string]$version =  'latest',
	[string]$Product = 'wordpress',
	[string]$name = '4-4'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 4-4"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:wordpress Sku:4-4 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-wo-4
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'wordpress-multisite',
	[string]$Skus = '4',
	[string]$version =  'latest',
	[string]$Product = 'wordpress-multisite',
	[string]$name = '4'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 4"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:wordpress-multisite Sku:4 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-x2-5-5
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'x2enginesalescrm',
	[string]$Skus = '5-5',
	[string]$version =  'latest',
	[string]$Product = 'x2enginesalescrm',
	[string]$name = '5-5'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 5-5"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:x2enginesalescrm Sku:5-5 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-xo-2-5
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'xoops',
	[string]$Skus = '2-5',
	[string]$version =  'latest',
	[string]$Product = 'xoops',
	[string]$name = '2-5'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 2-5"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:xoops Sku:2-5 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Bi-zu-3-1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Bitnami',
	[string]$Offer = 'zurmo',
	[string]$Skus = '3-1',
	[string]$version =  'latest',
	[string]$Product = 'zurmo',
	[string]$name = '3-1'
)
Write-Host "Image Creation in Process - Plan Info - Bitnami | 3-1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Bitnami Offer:zurmo Sku:3-1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_bi-bi-bizagi106
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'bizagi',
	[string]$Offer = 'bizagibpms',
	[string]$Skus = 'bizagi106',
	[string]$version =  'latest',
	[string]$Product = 'bizagibpms',
	[string]$name = 'bizagi106'
)
Write-Host "Image Creation in Process - Plan Info - bizagi | bizagi106"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: bizagi Offer:bizagibpms Sku:bizagi106 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_bi-bi-biztalk360_azure
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'biztalk360',
	[string]$Offer = 'biztalk360-in-azure',
	[string]$Skus = 'biztalk360_azure',
	[string]$version =  'latest',
	[string]$Product = 'biztalk360-in-azure',
	[string]$name = 'biztalk360_azure'
)
Write-Host "Image Creation in Process - Plan Info - biztalk360 | biztalk360_azure"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: biztalk360 Offer:biztalk360-in-azure Sku:biztalk360_azure Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_bl-be-production_1_vm
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'blackberry',
	[string]$Offer = 'bes12-v12-4',
	[string]$Skus = 'production_1_vm',
	[string]$version =  'latest',
	[string]$Product = 'bes12-v12-4',
	[string]$name = 'production_1_vm'
)
Write-Host "Image Creation in Process - Plan Info - blackberry | production_1_vm"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: blackberry Offer:bes12-v12-4 Sku:production_1_vm Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_bl-be-bes12-v12-4devtesttrial
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'blackberry',
	[string]$Offer = 'bes12-v12-4devtesttrial',
	[string]$Skus = 'bes12-v12-4devtesttrial',
	[string]$version =  'latest',
	[string]$Product = 'bes12-v12-4devtesttrial',
	[string]$name = 'bes12-v12-4devtesttrial'
)
Write-Host "Image Creation in Process - Plan Info - blackberry | bes12-v12-4devtesttrial"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: blackberry Offer:bes12-v12-4devtesttrial Sku:bes12-v12-4devtesttrial Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_bl-be-besdevtrial
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'blackberry',
	[string]$Offer = 'bes12devtesttrial',
	[string]$Skus = 'besdevtrial',
	[string]$version =  'latest',
	[string]$Product = 'bes12devtesttrial',
	[string]$name = 'besdevtrial'
)
Write-Host "Image Creation in Process - Plan Info - blackberry | besdevtrial"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: blackberry Offer:bes12devtesttrial Sku:besdevtrial Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_bl-go-production_gems_vm1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'blackberry',
	[string]$Offer = 'good-enterprise-mobility-server',
	[string]$Skus = 'production_gems_vm1',
	[string]$version =  'latest',
	[string]$Product = 'good-enterprise-mobility-server',
	[string]$name = 'production_gems_vm1'
)
Write-Host "Image Creation in Process - Plan Info - blackberry | production_gems_vm1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: blackberry Offer:good-enterprise-mobility-server Sku:production_gems_vm1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_bl-go-production_gc_vm1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'blackberry',
	[string]$Offer = 'goodcontrolbase',
	[string]$Skus = 'production_gc_vm1',
	[string]$version =  'latest',
	[string]$Product = 'goodcontrolbase',
	[string]$name = 'production_gc_vm1'
)
Write-Host "Image Creation in Process - Plan Info - blackberry | production_gc_vm1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: blackberry Offer:goodcontrolbase Sku:production_gc_vm1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_bl-go-production_gp_vm1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'blackberry',
	[string]$Offer = 'goodproxybase',
	[string]$Skus = 'production_gp_vm1',
	[string]$version =  'latest',
	[string]$Product = 'goodproxybase',
	[string]$name = 'production_gp_vm1'
)
Write-Host "Image Creation in Process - Plan Info - blackberry | production_gp_vm1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: blackberry Offer:goodproxybase Sku:production_gp_vm1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_bl-pr-production_1_vm
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'blackberry',
	[string]$Offer = 'production_1_vm',
	[string]$Skus = 'production_1_vm',
	[string]$version =  'latest',
	[string]$Product = 'production_1_vm',
	[string]$name = 'production_1_vm'
)
Write-Host "Image Creation in Process - Plan Info - blackberry | production_1_vm"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: blackberry Offer:production_1_vm Sku:production_1_vm Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_bl-st-single-node
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'blockapps',
	[string]$Offer = 'strato-blockchain-lts-vm',
	[string]$Skus = 'single-node',
	[string]$version =  'latest',
	[string]$Product = 'strato-blockchain-lts-vm',
	[string]$name = 'single-node'
)
Write-Host "Image Creation in Process - Plan Info - blockapps | single-node"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: blockapps Offer:strato-blockchain-lts-vm Sku:single-node Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_bl-bl-bluetalon
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'bluetalon',
	[string]$Offer = 'bluetalon',
	[string]$Skus = 'bluetalon',
	[string]$version =  'latest',
	[string]$Product = 'bluetalon',
	[string]$name = 'bluetalon'
)
Write-Host "Image Creation in Process - Plan Info - bluetalon | bluetalon"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: bluetalon Offer:bluetalon Sku:bluetalon Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_bo-op-opengeosuite_postgis_tomcat
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'boundlessgeo',
	[string]$Offer = 'opengeosuite',
	[string]$Skus = 'opengeosuite_postgis_tomcat',
	[string]$version =  'latest',
	[string]$Product = 'opengeosuite',
	[string]$name = 'opengeosuite_postgis_tomcat'
)
Write-Host "Image Creation in Process - Plan Info - boundlessgeo | opengeosuite_postgis_tomcat"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: boundlessgeo Offer:opengeosuite Sku:opengeosuite_postgis_tomcat Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_bo-bo-boxless
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'boxless',
	[string]$Offer = 'boxless',
	[string]$Skus = 'boxless',
	[string]$version =  'latest',
	[string]$Product = 'boxless',
	[string]$name = 'boxless'
)
Write-Host "Image Creation in Process - Plan Info - boxless | boxless"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: boxless Offer:boxless Sku:boxless Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_br-br-stm_csp_500_l
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'brocade_communications',
	[string]$Offer = 'brocade-virtual-traffic-manager',
	[string]$Skus = 'stm_csp_500_l',
	[string]$version =  'latest',
	[string]$Product = 'brocade-virtual-traffic-manager',
	[string]$name = 'stm_csp_500_l'
)
Write-Host "Image Creation in Process - Plan Info - brocade_communications | stm_csp_500_l"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: brocade_communications Offer:brocade-virtual-traffic-manager Sku:stm_csp_500_l Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_br-br-stm_csp_500_l2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'brocade_communications',
	[string]$Offer = 'brocade-virtual-traffic-manager',
	[string]$Skus = 'stm_csp_500_l2',
	[string]$version =  'latest',
	[string]$Product = 'brocade-virtual-traffic-manager',
	[string]$name = 'stm_csp_500_l2'
)
Write-Host "Image Creation in Process - Plan Info - brocade_communications | stm_csp_500_l2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: brocade_communications Offer:brocade-virtual-traffic-manager Sku:stm_csp_500_l2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_br-br-stm_csp_500_m1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'brocade_communications',
	[string]$Offer = 'brocade-virtual-traffic-manager',
	[string]$Skus = 'stm_csp_500_m1',
	[string]$version =  'latest',
	[string]$Product = 'brocade-virtual-traffic-manager',
	[string]$name = 'stm_csp_500_m1'
)
Write-Host "Image Creation in Process - Plan Info - brocade_communications | stm_csp_500_m1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: brocade_communications Offer:brocade-virtual-traffic-manager Sku:stm_csp_500_m1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_br-br-stm_csub_1000_h_64
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'brocade_communications',
	[string]$Offer = 'brocade-virtual-traffic-manager',
	[string]$Skus = 'stm_csub_1000_h_64',
	[string]$version =  'latest',
	[string]$Product = 'brocade-virtual-traffic-manager',
	[string]$name = 'stm_csub_1000_h_64'
)
Write-Host "Image Creation in Process - Plan Info - brocade_communications | stm_csub_1000_h_64"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: brocade_communications Offer:brocade-virtual-traffic-manager Sku:stm_csub_1000_h_64 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_br-br-stm_csub_1000_l_64
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'brocade_communications',
	[string]$Offer = 'brocade-virtual-traffic-manager',
	[string]$Skus = 'stm_csub_1000_l_64',
	[string]$version =  'latest',
	[string]$Product = 'brocade-virtual-traffic-manager',
	[string]$name = 'stm_csub_1000_l_64'
)
Write-Host "Image Creation in Process - Plan Info - brocade_communications | stm_csub_1000_l_64"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: brocade_communications Offer:brocade-virtual-traffic-manager Sku:stm_csub_1000_l_64 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_br-br-stm_csub_1000_m_64
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'brocade_communications',
	[string]$Offer = 'brocade-virtual-traffic-manager',
	[string]$Skus = 'stm_csub_1000_m_64',
	[string]$version =  'latest',
	[string]$Product = 'brocade-virtual-traffic-manager',
	[string]$name = 'stm_csub_1000_m_64'
)
Write-Host "Image Creation in Process - Plan Info - brocade_communications | stm_csub_1000_m_64"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: brocade_communications Offer:brocade-virtual-traffic-manager Sku:stm_csub_1000_m_64 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_br-br-stm_csub_2000_l_64
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'brocade_communications',
	[string]$Offer = 'brocade-virtual-traffic-manager',
	[string]$Skus = 'stm_csub_2000_l_64',
	[string]$version =  'latest',
	[string]$Product = 'brocade-virtual-traffic-manager',
	[string]$name = 'stm_csub_2000_l_64'
)
Write-Host "Image Creation in Process - Plan Info - brocade_communications | stm_csub_2000_l_64"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: brocade_communications Offer:brocade-virtual-traffic-manager Sku:stm_csub_2000_l_64 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_br-br-stm_dev_byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'brocade_communications',
	[string]$Offer = 'brocade-virtual-traffic-manager',
	[string]$Skus = 'stm_dev_byol',
	[string]$version =  'latest',
	[string]$Product = 'brocade-virtual-traffic-manager',
	[string]$name = 'stm_dev_byol'
)
Write-Host "Image Creation in Process - Plan Info - brocade_communications | stm_dev_byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: brocade_communications Offer:brocade-virtual-traffic-manager Sku:stm_dev_byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_br-br-stm_csub_1000_h_saf_64
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'brocade_communications',
	[string]$Offer = 'brocade-virtual-traffic-manager-with-waf-module',
	[string]$Skus = 'stm_csub_1000_h_saf_64',
	[string]$version =  'latest',
	[string]$Product = 'brocade-virtual-traffic-manager-with-waf-module',
	[string]$name = 'stm_csub_1000_h_saf_64'
)
Write-Host "Image Creation in Process - Plan Info - brocade_communications | stm_csub_1000_h_saf_64"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: brocade_communications Offer:brocade-virtual-traffic-manager-with-waf-module Sku:stm_csub_1000_h_saf_64 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_br-br-stm_csub_1000_l_saf_64
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'brocade_communications',
	[string]$Offer = 'brocade-virtual-traffic-manager-with-waf-module',
	[string]$Skus = 'stm_csub_1000_l_saf_64',
	[string]$version =  'latest',
	[string]$Product = 'brocade-virtual-traffic-manager-with-waf-module',
	[string]$name = 'stm_csub_1000_l_saf_64'
)
Write-Host "Image Creation in Process - Plan Info - brocade_communications | stm_csub_1000_l_saf_64"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: brocade_communications Offer:brocade-virtual-traffic-manager-with-waf-module Sku:stm_csub_1000_l_saf_64 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_br-br-stm_csub_1000_m_saf_64
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'brocade_communications',
	[string]$Offer = 'brocade-virtual-traffic-manager-with-waf-module',
	[string]$Skus = 'stm_csub_1000_m_saf_64',
	[string]$version =  'latest',
	[string]$Product = 'brocade-virtual-traffic-manager-with-waf-module',
	[string]$name = 'stm_csub_1000_m_saf_64'
)
Write-Host "Image Creation in Process - Plan Info - brocade_communications | stm_csub_1000_m_saf_64"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: brocade_communications Offer:brocade-virtual-traffic-manager-with-waf-module Sku:stm_csub_1000_m_saf_64 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_br-br-stm_csub_2000_l_saf_64
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'brocade_communications',
	[string]$Offer = 'brocade-virtual-traffic-manager-with-waf-module',
	[string]$Skus = 'stm_csub_2000_l_saf_64',
	[string]$version =  'latest',
	[string]$Product = 'brocade-virtual-traffic-manager-with-waf-module',
	[string]$name = 'stm_csub_2000_l_saf_64'
)
Write-Host "Image Creation in Process - Plan Info - brocade_communications | stm_csub_2000_l_saf_64"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: brocade_communications Offer:brocade-virtual-traffic-manager-with-waf-module Sku:stm_csub_2000_l_saf_64 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_br-br-safpx_csub_1000_64
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'brocade_communications',
	[string]$Offer = 'brocade-virtual-web-application-firewall',
	[string]$Skus = 'safpx_csub_1000_64',
	[string]$version =  'latest',
	[string]$Product = 'brocade-virtual-web-application-firewall',
	[string]$name = 'safpx_csub_1000_64'
)
Write-Host "Image Creation in Process - Plan Info - brocade_communications | safpx_csub_1000_64"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: brocade_communications Offer:brocade-virtual-web-application-firewall Sku:safpx_csub_1000_64 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_br-br-bryteflowcdc
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'bryte',
	[string]$Offer = 'bryteflow-cdc-free-trial',
	[string]$Skus = 'bryteflowcdc',
	[string]$version =  'latest',
	[string]$Product = 'bryteflow-cdc-free-trial',
	[string]$name = 'bryteflowcdc'
)
Write-Host "Image Creation in Process - Plan Info - bryte | bryteflowcdc"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: bryte Offer:bryteflow-cdc-free-trial Sku:bryteflowcdc Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_bs-bl-factfinder-win-ms-4-azure
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'bssw',
	[string]$Offer = 'bluestripe-factfinder',
	[string]$Skus = 'factfinder-win-ms-4-azure',
	[string]$version =  'latest',
	[string]$Product = 'bluestripe-factfinder',
	[string]$name = 'factfinder-win-ms-4-azure'
)
Write-Host "Image Creation in Process - Plan Info - bssw | factfinder-win-ms-4-azure"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: bssw Offer:bluestripe-factfinder Sku:factfinder-win-ms-4-azure Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_bu-sl-sles12-pci
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'buddhalabs',
	[string]$Offer = 'sles_12_pci',
	[string]$Skus = 'sles12-pci',
	[string]$version =  'latest',
	[string]$Product = 'sles_12_pci',
	[string]$name = 'sles12-pci'
)
Write-Host "Image Creation in Process - Plan Info - buddhalabs | sles12-pci"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: buddhalabs Offer:sles_12_pci Sku:sles12-pci Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_bu-bu-bugrius
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'bugrius',
	[string]$Offer = 'bugrius',
	[string]$Skus = 'bugrius',
	[string]$version =  'latest',
	[string]$Product = 'bugrius',
	[string]$name = 'bugrius'
)
Write-Host "Image Creation in Process - Plan Info - bugrius | bugrius"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: bugrius Offer:bugrius Sku:bugrius Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_bw-bo-boardwalk
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'bwappengine',
	[string]$Offer = 'boardwalk',
	[string]$Skus = 'boardwalk',
	[string]$version =  'latest',
	[string]$Product = 'boardwalk',
	[string]$name = 'boardwalk'
)
Write-Host "Image Creation in Process - Plan Info - bwappengine | boardwalk"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: bwappengine Offer:boardwalk Sku:boardwalk Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ca-Ub-15.04-Snappy
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Canonical',
	[string]$Offer = 'Ubuntu15.04Snappy',
	[string]$Skus = '15.04-Snappy',
	[string]$version =  'latest',
	[string]$Product = 'Ubuntu15.04Snappy',
	[string]$name = '15.04-Snappy'
)
Write-Host "Image Creation in Process - Plan Info - Canonical | 15.04-Snappy"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Canonical Offer:Ubuntu15.04Snappy Sku:15.04-Snappy Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ca-Ub-15.04-SnappyDocker
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Canonical',
	[string]$Offer = 'Ubuntu15.04SnappyDocker',
	[string]$Skus = '15.04-SnappyDocker',
	[string]$version =  'latest',
	[string]$Product = 'Ubuntu15.04SnappyDocker',
	[string]$name = '15.04-SnappyDocker'
)
Write-Host "Image Creation in Process - Plan Info - Canonical | 15.04-SnappyDocker"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Canonical Offer:Ubuntu15.04SnappyDocker Sku:15.04-SnappyDocker Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ca-Ub-99.99-Snappy
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Canonical',
	[string]$Offer = 'UbunturollingSnappy',
	[string]$Skus = '99.99-Snappy',
	[string]$version =  'latest',
	[string]$Product = 'UbunturollingSnappy',
	[string]$name = '99.99-Snappy'
)
Write-Host "Image Creation in Process - Plan Info - Canonical | 99.99-Snappy"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Canonical Offer:UbunturollingSnappy Sku:99.99-Snappy Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ca-Ub-12.04.2-LTS
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Canonical',
	[string]$Offer = 'UbuntuServer',
	[string]$Skus = '12.04.2-LTS',
	[string]$version =  'latest',
	[string]$Product = 'UbuntuServer',
	[string]$name = '12.04.2-LTS'
)
Write-Host "Image Creation in Process - Plan Info - Canonical | 12.04.2-LTS"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Canonical Offer:UbuntuServer Sku:12.04.2-LTS Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ca-Ub-12.04.3-LTS
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Canonical',
	[string]$Offer = 'UbuntuServer',
	[string]$Skus = '12.04.3-LTS',
	[string]$version =  'latest',
	[string]$Product = 'UbuntuServer',
	[string]$name = '12.04.3-LTS'
)
Write-Host "Image Creation in Process - Plan Info - Canonical | 12.04.3-LTS"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Canonical Offer:UbuntuServer Sku:12.04.3-LTS Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ca-Ub-12.04.4-LTS
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Canonical',
	[string]$Offer = 'UbuntuServer',
	[string]$Skus = '12.04.4-LTS',
	[string]$version =  'latest',
	[string]$Product = 'UbuntuServer',
	[string]$name = '12.04.4-LTS'
)
Write-Host "Image Creation in Process - Plan Info - Canonical | 12.04.4-LTS"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Canonical Offer:UbuntuServer Sku:12.04.4-LTS Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ca-Ub-12.04.5-DAILY-LTS
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Canonical',
	[string]$Offer = 'UbuntuServer',
	[string]$Skus = '12.04.5-DAILY-LTS',
	[string]$version =  'latest',
	[string]$Product = 'UbuntuServer',
	[string]$name = '12.04.5-DAILY-LTS'
)
Write-Host "Image Creation in Process - Plan Info - Canonical | 12.04.5-DAILY-LTS"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Canonical Offer:UbuntuServer Sku:12.04.5-DAILY-LTS Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ca-Ub-12.04.5-LTS
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Canonical',
	[string]$Offer = 'UbuntuServer',
	[string]$Skus = '12.04.5-LTS',
	[string]$version =  'latest',
	[string]$Product = 'UbuntuServer',
	[string]$name = '12.04.5-LTS'
)
Write-Host "Image Creation in Process - Plan Info - Canonical | 12.04.5-LTS"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Canonical Offer:UbuntuServer Sku:12.04.5-LTS Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ca-Ub-12.10
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Canonical',
	[string]$Offer = 'UbuntuServer',
	[string]$Skus = '12.10',
	[string]$version =  'latest',
	[string]$Product = 'UbuntuServer',
	[string]$name = '12.10'
)
Write-Host "Image Creation in Process - Plan Info - Canonical | 12.10"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Canonical Offer:UbuntuServer Sku:12.10 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ca-Ub-14.04-beta
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Canonical',
	[string]$Offer = 'UbuntuServer',
	[string]$Skus = '14.04-beta',
	[string]$version =  'latest',
	[string]$Product = 'UbuntuServer',
	[string]$name = '14.04-beta'
)
Write-Host "Image Creation in Process - Plan Info - Canonical | 14.04-beta"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Canonical Offer:UbuntuServer Sku:14.04-beta Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ca-Ub-14.04.0-LTS
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Canonical',
	[string]$Offer = 'UbuntuServer',
	[string]$Skus = '14.04.0-LTS',
	[string]$version =  'latest',
	[string]$Product = 'UbuntuServer',
	[string]$name = '14.04.0-LTS'
)
Write-Host "Image Creation in Process - Plan Info - Canonical | 14.04.0-LTS"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Canonical Offer:UbuntuServer Sku:14.04.0-LTS Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ca-Ub-14.04.1-LTS
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Canonical',
	[string]$Offer = 'UbuntuServer',
	[string]$Skus = '14.04.1-LTS',
	[string]$version =  'latest',
	[string]$Product = 'UbuntuServer',
	[string]$name = '14.04.1-LTS'
)
Write-Host "Image Creation in Process - Plan Info - Canonical | 14.04.1-LTS"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Canonical Offer:UbuntuServer Sku:14.04.1-LTS Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ca-Ub-14.04.2-LTS
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Canonical',
	[string]$Offer = 'UbuntuServer',
	[string]$Skus = '14.04.2-LTS',
	[string]$version =  'latest',
	[string]$Product = 'UbuntuServer',
	[string]$name = '14.04.2-LTS'
)
Write-Host "Image Creation in Process - Plan Info - Canonical | 14.04.2-LTS"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Canonical Offer:UbuntuServer Sku:14.04.2-LTS Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ca-Ub-14.04.3-LTS
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Canonical',
	[string]$Offer = 'UbuntuServer',
	[string]$Skus = '14.04.3-LTS',
	[string]$version =  'latest',
	[string]$Product = 'UbuntuServer',
	[string]$name = '14.04.3-LTS'
)
Write-Host "Image Creation in Process - Plan Info - Canonical | 14.04.3-LTS"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Canonical Offer:UbuntuServer Sku:14.04.3-LTS Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ca-Ub-14.04.4-LTS
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Canonical',
	[string]$Offer = 'UbuntuServer',
	[string]$Skus = '14.04.4-LTS',
	[string]$version =  'latest',
	[string]$Product = 'UbuntuServer',
	[string]$name = '14.04.4-LTS'
)
Write-Host "Image Creation in Process - Plan Info - Canonical | 14.04.4-LTS"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Canonical Offer:UbuntuServer Sku:14.04.4-LTS Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ca-Ub-14.04.5-DAILY-LTS
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Canonical',
	[string]$Offer = 'UbuntuServer',
	[string]$Skus = '14.04.5-DAILY-LTS',
	[string]$version =  'latest',
	[string]$Product = 'UbuntuServer',
	[string]$name = '14.04.5-DAILY-LTS'
)
Write-Host "Image Creation in Process - Plan Info - Canonical | 14.04.5-DAILY-LTS"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Canonical Offer:UbuntuServer Sku:14.04.5-DAILY-LTS Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ca-Ub-14.04.5-LTS
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Canonical',
	[string]$Offer = 'UbuntuServer',
	[string]$Skus = '14.04.5-LTS',
	[string]$version =  'latest',
	[string]$Product = 'UbuntuServer',
	[string]$name = '14.04.5-LTS'
)
Write-Host "Image Creation in Process - Plan Info - Canonical | 14.04.5-LTS"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Canonical Offer:UbuntuServer Sku:14.04.5-LTS Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ca-Ub-14.10
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Canonical',
	[string]$Offer = 'UbuntuServer',
	[string]$Skus = '14.10',
	[string]$version =  'latest',
	[string]$Product = 'UbuntuServer',
	[string]$name = '14.10'
)
Write-Host "Image Creation in Process - Plan Info - Canonical | 14.10"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Canonical Offer:UbuntuServer Sku:14.10 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ca-Ub-14.10-beta
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Canonical',
	[string]$Offer = 'UbuntuServer',
	[string]$Skus = '14.10-beta',
	[string]$version =  'latest',
	[string]$Product = 'UbuntuServer',
	[string]$name = '14.10-beta'
)
Write-Host "Image Creation in Process - Plan Info - Canonical | 14.10-beta"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Canonical Offer:UbuntuServer Sku:14.10-beta Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ca-Ub-14.10-DAILY
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Canonical',
	[string]$Offer = 'UbuntuServer',
	[string]$Skus = '14.10-DAILY',
	[string]$version =  'latest',
	[string]$Product = 'UbuntuServer',
	[string]$name = '14.10-DAILY'
)
Write-Host "Image Creation in Process - Plan Info - Canonical | 14.10-DAILY"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Canonical Offer:UbuntuServer Sku:14.10-DAILY Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ca-Ub-15.04
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Canonical',
	[string]$Offer = 'UbuntuServer',
	[string]$Skus = '15.04',
	[string]$version =  'latest',
	[string]$Product = 'UbuntuServer',
	[string]$name = '15.04'
)
Write-Host "Image Creation in Process - Plan Info - Canonical | 15.04"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Canonical Offer:UbuntuServer Sku:15.04 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ca-Ub-15.04-beta
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Canonical',
	[string]$Offer = 'UbuntuServer',
	[string]$Skus = '15.04-beta',
	[string]$version =  'latest',
	[string]$Product = 'UbuntuServer',
	[string]$name = '15.04-beta'
)
Write-Host "Image Creation in Process - Plan Info - Canonical | 15.04-beta"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Canonical Offer:UbuntuServer Sku:15.04-beta Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ca-Ub-15.04-DAILY
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Canonical',
	[string]$Offer = 'UbuntuServer',
	[string]$Skus = '15.04-DAILY',
	[string]$version =  'latest',
	[string]$Product = 'UbuntuServer',
	[string]$name = '15.04-DAILY'
)
Write-Host "Image Creation in Process - Plan Info - Canonical | 15.04-DAILY"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Canonical Offer:UbuntuServer Sku:15.04-DAILY Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ca-Ub-15.10
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Canonical',
	[string]$Offer = 'UbuntuServer',
	[string]$Skus = '15.10',
	[string]$version =  'latest',
	[string]$Product = 'UbuntuServer',
	[string]$name = '15.10'
)
Write-Host "Image Creation in Process - Plan Info - Canonical | 15.10"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Canonical Offer:UbuntuServer Sku:15.10 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ca-Ub-15.10-alpha
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Canonical',
	[string]$Offer = 'UbuntuServer',
	[string]$Skus = '15.10-alpha',
	[string]$version =  'latest',
	[string]$Product = 'UbuntuServer',
	[string]$name = '15.10-alpha'
)
Write-Host "Image Creation in Process - Plan Info - Canonical | 15.10-alpha"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Canonical Offer:UbuntuServer Sku:15.10-alpha Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ca-Ub-15.10-beta
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Canonical',
	[string]$Offer = 'UbuntuServer',
	[string]$Skus = '15.10-beta',
	[string]$version =  'latest',
	[string]$Product = 'UbuntuServer',
	[string]$name = '15.10-beta'
)
Write-Host "Image Creation in Process - Plan Info - Canonical | 15.10-beta"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Canonical Offer:UbuntuServer Sku:15.10-beta Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ca-Ub-15.10-DAILY
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Canonical',
	[string]$Offer = 'UbuntuServer',
	[string]$Skus = '15.10-DAILY',
	[string]$version =  'latest',
	[string]$Product = 'UbuntuServer',
	[string]$name = '15.10-DAILY'
)
Write-Host "Image Creation in Process - Plan Info - Canonical | 15.10-DAILY"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Canonical Offer:UbuntuServer Sku:15.10-DAILY Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ca-Ub-16.04-alpha
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Canonical',
	[string]$Offer = 'UbuntuServer',
	[string]$Skus = '16.04-alpha',
	[string]$version =  'latest',
	[string]$Product = 'UbuntuServer',
	[string]$name = '16.04-alpha'
)
Write-Host "Image Creation in Process - Plan Info - Canonical | 16.04-alpha"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Canonical Offer:UbuntuServer Sku:16.04-alpha Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ca-Ub-16.04-beta
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Canonical',
	[string]$Offer = 'UbuntuServer',
	[string]$Skus = '16.04-beta',
	[string]$version =  'latest',
	[string]$Product = 'UbuntuServer',
	[string]$name = '16.04-beta'
)
Write-Host "Image Creation in Process - Plan Info - Canonical | 16.04-beta"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Canonical Offer:UbuntuServer Sku:16.04-beta Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ca-Ub-16.04.0-DAILY-LTS
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Canonical',
	[string]$Offer = 'UbuntuServer',
	[string]$Skus = '16.04.0-DAILY-LTS',
	[string]$version =  'latest',
	[string]$Product = 'UbuntuServer',
	[string]$name = '16.04.0-DAILY-LTS'
)
Write-Host "Image Creation in Process - Plan Info - Canonical | 16.04.0-DAILY-LTS"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Canonical Offer:UbuntuServer Sku:16.04.0-DAILY-LTS Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ca-Ub-16.04.0-LTS
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Canonical',
	[string]$Offer = 'UbuntuServer',
	[string]$Skus = '16.04.0-LTS',
	[string]$version =  'latest',
	[string]$Product = 'UbuntuServer',
	[string]$name = '16.04.0-LTS'
)
Write-Host "Image Creation in Process - Plan Info - Canonical | 16.04.0-LTS"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Canonical Offer:UbuntuServer Sku:16.04.0-LTS Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ca-Ub-16.10-DAILY
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Canonical',
	[string]$Offer = 'UbuntuServer',
	[string]$Skus = '16.10-DAILY',
	[string]$version =  'latest',
	[string]$Product = 'UbuntuServer',
	[string]$name = '16.10-DAILY'
)
Write-Host "Image Creation in Process - Plan Info - Canonical | 16.10-DAILY"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Canonical Offer:UbuntuServer Sku:16.10-DAILY Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ca-Ub-15.04
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Canonical',
	[string]$Offer = 'Ubuntu_Snappy_Core',
	[string]$Skus = '15.04',
	[string]$version =  'latest',
	[string]$Product = 'Ubuntu_Snappy_Core',
	[string]$name = '15.04'
)
Write-Host "Image Creation in Process - Plan Info - Canonical | 15.04"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Canonical Offer:Ubuntu_Snappy_Core Sku:15.04 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ca-Ub-Rolling
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Canonical',
	[string]$Offer = 'Ubuntu_Snappy_Core',
	[string]$Skus = 'Rolling',
	[string]$version =  'latest',
	[string]$Product = 'Ubuntu_Snappy_Core',
	[string]$name = 'Rolling'
)
Write-Host "Image Creation in Process - Plan Info - Canonical | Rolling"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Canonical Offer:Ubuntu_Snappy_Core Sku:Rolling Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ca-Ub-15.04
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Canonical',
	[string]$Offer = 'Ubuntu_Snappy_Core_Docker',
	[string]$Skus = '15.04',
	[string]$version =  'latest',
	[string]$Product = 'Ubuntu_Snappy_Core_Docker',
	[string]$name = '15.04'
)
Write-Host "Image Creation in Process - Plan Info - Canonical | 15.04"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Canonical Offer:Ubuntu_Snappy_Core_Docker Sku:15.04 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ca-ca-casvbyol90
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'catechnologies',
	[string]$Offer = 'ca-service-virtualization-8-1',
	[string]$Skus = 'casvbyol90',
	[string]$version =  'latest',
	[string]$Product = 'ca-service-virtualization-8-1',
	[string]$name = 'casvbyol90'
)
Write-Host "Image Creation in Process - Plan Info - catechnologies | casvbyol90"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: catechnologies Offer:ca-service-virtualization-8-1 Sku:casvbyol90 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ca-ca-casvondemand90
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'catechnologies',
	[string]$Offer = 'ca-service-virtualization-8-1',
	[string]$Skus = 'casvondemand90',
	[string]$version =  'latest',
	[string]$Product = 'ca-service-virtualization-8-1',
	[string]$name = 'casvondemand90'
)
Write-Host "Image Creation in Process - Plan Info - catechnologies | casvondemand90"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: catechnologies Offer:ca-service-virtualization-8-1 Sku:casvondemand90 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ca-lo-cautela_labs_log_management_and_soc
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cautelalabs',
	[string]$Offer = 'log_management',
	[string]$Skus = 'cautela_labs_log_management_and_soc',
	[string]$version =  'latest',
	[string]$Product = 'log_management',
	[string]$name = 'cautela_labs_log_management_and_soc'
)
Write-Host "Image Creation in Process - Plan Info - cautelalabs | cautela_labs_log_management_and_soc"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cautelalabs Offer:log_management Sku:cautela_labs_log_management_and_soc Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_cd-cd-dms-9000msaz
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cds',
	[string]$Offer = 'cds-data-migration-solution-for-legacy-to-cloud',
	[string]$Skus = 'dms-9000msaz',
	[string]$version =  'latest',
	[string]$Product = 'cds-data-migration-solution-for-legacy-to-cloud',
	[string]$name = 'dms-9000msaz'
)
Write-Host "Image Creation in Process - Plan Info - cds | dms-9000msaz"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cds Offer:cds-data-migration-solution-for-legacy-to-cloud Sku:dms-9000msaz Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ce-ss-sso
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'certivox',
	[string]$Offer = 'sso-test',
	[string]$Skus = 'sso',
	[string]$version =  'latest',
	[string]$Product = 'sso-test',
	[string]$name = 'sso'
)
Write-Host "Image Creation in Process - Plan Info - certivox | sso"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: certivox Offer:sso-test Sku:sso Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ch-ch-sg-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'checkpoint',
	[string]$Offer = 'check-point-r77-10',
	[string]$Skus = 'sg-byol',
	[string]$version =  'latest',
	[string]$Product = 'check-point-r77-10',
	[string]$name = 'sg-byol'
)
Write-Host "Image Creation in Process - Plan Info - checkpoint | sg-byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: checkpoint Offer:check-point-r77-10 Sku:sg-byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ch-ch-sg-ngtp
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'checkpoint',
	[string]$Offer = 'check-point-r77-10',
	[string]$Skus = 'sg-ngtp',
	[string]$version =  'latest',
	[string]$Product = 'check-point-r77-10',
	[string]$name = 'sg-ngtp'
)
Write-Host "Image Creation in Process - Plan Info - checkpoint | sg-ngtp"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: checkpoint Offer:check-point-r77-10 Sku:sg-ngtp Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ch-sg-sg-byol2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'checkpoint',
	[string]$Offer = 'sg2',
	[string]$Skus = 'sg-byol2',
	[string]$version =  'latest',
	[string]$Product = 'sg2',
	[string]$name = 'sg-byol2'
)
Write-Host "Image Creation in Process - Plan Info - checkpoint | sg-byol2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: checkpoint Offer:sg2 Sku:sg-byol2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ch-oa-oatsystems-oatxpress-82-sku
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'checkpointsystems',
	[string]$Offer = 'oatsystems-oatxpress-82-base',
	[string]$Skus = 'oatsystems-oatxpress-82-sku',
	[string]$version =  'latest',
	[string]$Product = 'oatsystems-oatxpress-82-base',
	[string]$name = 'oatsystems-oatxpress-82-sku'
)
Write-Host "Image Creation in Process - Plan Info - checkpointsystems | oatsystems-oatxpress-82-sku"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: checkpointsystems Offer:oatsystems-oatxpress-82-base Sku:oatsystems-oatxpress-82-sku Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ch-ch-azure_marketplace_100
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'chef-software',
	[string]$Offer = 'chef-compliance',
	[string]$Skus = 'azure_marketplace_100',
	[string]$version =  'latest',
	[string]$Product = 'chef-compliance',
	[string]$name = 'azure_marketplace_100'
)
Write-Host "Image Creation in Process - Plan Info - chef-software | azure_marketplace_100"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: chef-software Offer:chef-compliance Sku:azure_marketplace_100 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ch-ch-azure_marketplace_150
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'chef-software',
	[string]$Offer = 'chef-compliance',
	[string]$Skus = 'azure_marketplace_150',
	[string]$version =  'latest',
	[string]$Product = 'chef-compliance',
	[string]$name = 'azure_marketplace_150'
)
Write-Host "Image Creation in Process - Plan Info - chef-software | azure_marketplace_150"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: chef-software Offer:chef-compliance Sku:azure_marketplace_150 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ch-ch-azure_marketplace_200
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'chef-software',
	[string]$Offer = 'chef-compliance',
	[string]$Skus = 'azure_marketplace_200',
	[string]$version =  'latest',
	[string]$Product = 'chef-compliance',
	[string]$name = 'azure_marketplace_200'
)
Write-Host "Image Creation in Process - Plan Info - chef-software | azure_marketplace_200"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: chef-software Offer:chef-compliance Sku:azure_marketplace_200 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ch-ch-azure_marketplace_25
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'chef-software',
	[string]$Offer = 'chef-compliance',
	[string]$Skus = 'azure_marketplace_25',
	[string]$version =  'latest',
	[string]$Product = 'chef-compliance',
	[string]$name = 'azure_marketplace_25'
)
Write-Host "Image Creation in Process - Plan Info - chef-software | azure_marketplace_25"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: chef-software Offer:chef-compliance Sku:azure_marketplace_25 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ch-ch-azure_marketplace_250
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'chef-software',
	[string]$Offer = 'chef-compliance',
	[string]$Skus = 'azure_marketplace_250',
	[string]$version =  'latest',
	[string]$Product = 'chef-compliance',
	[string]$name = 'azure_marketplace_250'
)
Write-Host "Image Creation in Process - Plan Info - chef-software | azure_marketplace_250"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: chef-software Offer:chef-compliance Sku:azure_marketplace_250 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ch-ch-azure_marketplace_5
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'chef-software',
	[string]$Offer = 'chef-compliance',
	[string]$Skus = 'azure_marketplace_5',
	[string]$version =  'latest',
	[string]$Product = 'chef-compliance',
	[string]$name = 'azure_marketplace_5'
)
Write-Host "Image Creation in Process - Plan Info - chef-software | azure_marketplace_5"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: chef-software Offer:chef-compliance Sku:azure_marketplace_5 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ch-ch-azure_marketplace_50
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'chef-software',
	[string]$Offer = 'chef-compliance',
	[string]$Skus = 'azure_marketplace_50',
	[string]$version =  'latest',
	[string]$Product = 'chef-compliance',
	[string]$name = 'azure_marketplace_50'
)
Write-Host "Image Creation in Process - Plan Info - chef-software | azure_marketplace_50"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: chef-software Offer:chef-compliance Sku:azure_marketplace_50 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ch-ch-azure_marketplace_100
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'chef-software',
	[string]$Offer = 'chef-server',
	[string]$Skus = 'azure_marketplace_100',
	[string]$version =  'latest',
	[string]$Product = 'chef-server',
	[string]$name = 'azure_marketplace_100'
)
Write-Host "Image Creation in Process - Plan Info - chef-software | azure_marketplace_100"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: chef-software Offer:chef-server Sku:azure_marketplace_100 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ch-ch-azure_marketplace_150
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'chef-software',
	[string]$Offer = 'chef-server',
	[string]$Skus = 'azure_marketplace_150',
	[string]$version =  'latest',
	[string]$Product = 'chef-server',
	[string]$name = 'azure_marketplace_150'
)
Write-Host "Image Creation in Process - Plan Info - chef-software | azure_marketplace_150"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: chef-software Offer:chef-server Sku:azure_marketplace_150 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ch-ch-azure_marketplace_200
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'chef-software',
	[string]$Offer = 'chef-server',
	[string]$Skus = 'azure_marketplace_200',
	[string]$version =  'latest',
	[string]$Product = 'chef-server',
	[string]$name = 'azure_marketplace_200'
)
Write-Host "Image Creation in Process - Plan Info - chef-software | azure_marketplace_200"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: chef-software Offer:chef-server Sku:azure_marketplace_200 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ch-ch-azure_marketplace_25
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'chef-software',
	[string]$Offer = 'chef-server',
	[string]$Skus = 'azure_marketplace_25',
	[string]$version =  'latest',
	[string]$Product = 'chef-server',
	[string]$name = 'azure_marketplace_25'
)
Write-Host "Image Creation in Process - Plan Info - chef-software | azure_marketplace_25"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: chef-software Offer:chef-server Sku:azure_marketplace_25 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ch-ch-azure_marketplace_250
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'chef-software',
	[string]$Offer = 'chef-server',
	[string]$Skus = 'azure_marketplace_250',
	[string]$version =  'latest',
	[string]$Product = 'chef-server',
	[string]$name = 'azure_marketplace_250'
)
Write-Host "Image Creation in Process - Plan Info - chef-software | azure_marketplace_250"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: chef-software Offer:chef-server Sku:azure_marketplace_250 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ch-ch-azure_marketplace_50
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'chef-software',
	[string]$Offer = 'chef-server',
	[string]$Skus = 'azure_marketplace_50',
	[string]$version =  'latest',
	[string]$Product = 'chef-server',
	[string]$name = 'azure_marketplace_50'
)
Write-Host "Image Creation in Process - Plan Info - chef-software | azure_marketplace_50"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: chef-software Offer:chef-server Sku:azure_marketplace_50 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ch-ch-chefbyol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'chef-software',
	[string]$Offer = 'chef-server',
	[string]$Skus = 'chefbyol',
	[string]$version =  'latest',
	[string]$Product = 'chef-server',
	[string]$name = 'chefbyol'
)
Write-Host "Image Creation in Process - Plan Info - chef-software | chefbyol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: chef-software Offer:chef-server Sku:chefbyol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ch-ch-cherwell_service_management
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cherwell',
	[string]$Offer = 'cherwell-service-management',
	[string]$Skus = 'cherwell_service_management',
	[string]$version =  'latest',
	[string]$Product = 'cherwell-service-management',
	[string]$name = 'cherwell_service_management'
)
Write-Host "Image Creation in Process - Plan Info - cherwell | cherwell_service_management"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cherwell Offer:cherwell-service-management Sku:cherwell_service_management Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ch-ex-express_software_manager
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cherwell',
	[string]$Offer = 'express-software-manager',
	[string]$Skus = 'express_software_manager',
	[string]$version =  'latest',
	[string]$Product = 'express-software-manager',
	[string]$name = 'express_software_manager'
)
Write-Host "Image Creation in Process - Plan Info - cherwell | express_software_manager"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cherwell Offer:express-software-manager Sku:express_software_manager Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ci-ci-cps-019eapi-az
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cipherpoint',
	[string]$Offer = 'cipherpoint-eclipse-data-security-api',
	[string]$Skus = 'cps-019eapi-az',
	[string]$version =  'latest',
	[string]$Product = 'cipherpoint-eclipse-data-security-api',
	[string]$name = 'cps-019eapi-az'
)
Write-Host "Image Creation in Process - Plan Info - cipherpoint | cps-019eapi-az"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cipherpoint Offer:cipherpoint-eclipse-data-security-api Sku:cps-019eapi-az Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ci-ci-circleci-builder-base
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'circleci',
	[string]$Offer = 'circleci-enterprise',
	[string]$Skus = 'circleci-builder-base',
	[string]$version =  'latest',
	[string]$Product = 'circleci-enterprise',
	[string]$name = 'circleci-builder-base'
)
Write-Host "Image Creation in Process - Plan Info - circleci | circleci-builder-base"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: circleci Offer:circleci-enterprise Sku:circleci-builder-base Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ci-ci-circleci-enterprise-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'circleci',
	[string]$Offer = 'circleci-enterprise',
	[string]$Skus = 'circleci-enterprise-byol',
	[string]$version =  'latest',
	[string]$Product = 'circleci-enterprise',
	[string]$name = 'circleci-enterprise-byol'
)
Write-Host "Image Creation in Process - Plan Info - circleci | circleci-enterprise-byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: circleci Offer:circleci-enterprise Sku:circleci-enterprise-byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ci-c2-c21l-enc-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cires21',
	[string]$Offer = 'c21l-enc',
	[string]$Skus = 'c21l-enc-byol',
	[string]$version =  'latest',
	[string]$Product = 'c21l-enc',
	[string]$name = 'c21l-enc-byol'
)
Write-Host "Image Creation in Process - Plan Info - cires21 | c21l-enc-byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cires21 Offer:c21l-enc Sku:c21l-enc-byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ci-c2-c21l-mos-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cires21',
	[string]$Offer = 'c21l-mos',
	[string]$Skus = 'c21l-mos-byol',
	[string]$version =  'latest',
	[string]$Product = 'c21l-mos',
	[string]$name = 'c21l-mos-byol'
)
Write-Host "Image Creation in Process - Plan Info - cires21 | c21l-mos-byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cires21 Offer:c21l-mos Sku:c21l-mos-byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ci-ci-asav-azure-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cisco',
	[string]$Offer = 'cisco-asav',
	[string]$Skus = 'asav-azure-byol',
	[string]$version =  'latest',
	[string]$Product = 'cisco-asav',
	[string]$name = 'asav-azure-byol'
)
Write-Host "Image Creation in Process - Plan Info - cisco | asav-azure-byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cisco Offer:cisco-asav Sku:asav-azure-byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ci-ci-asav-asc-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cisco',
	[string]$Offer = 'cisco-asav-asc',
	[string]$Skus = 'asav-asc-byol',
	[string]$version =  'latest',
	[string]$Product = 'cisco-asav-asc',
	[string]$name = 'asav-asc-byol'
)
Write-Host "Image Creation in Process - Plan Info - cisco | asav-asc-byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cisco Offer:cisco-asav-asc Sku:asav-asc-byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ci-ci-csr-azure-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cisco',
	[string]$Offer = 'cisco-csr-1000v',
	[string]$Skus = 'csr-azure-byol',
	[string]$version =  'latest',
	[string]$Product = 'cisco-csr-1000v',
	[string]$name = 'csr-azure-byol'
)
Write-Host "Image Creation in Process - Plan Info - cisco | csr-azure-byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cisco Offer:cisco-csr-1000v Sku:csr-azure-byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ci-ci-ftdv-azure-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cisco',
	[string]$Offer = 'cisco-ftdv',
	[string]$Skus = 'ftdv-azure-byol',
	[string]$version =  'latest',
	[string]$Product = 'cisco-ftdv',
	[string]$name = 'ftdv-azure-byol'
)
Write-Host "Image Creation in Process - Plan Info - cisco | ftdv-azure-byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cisco Offer:cisco-ftdv Sku:ftdv-azure-byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ci-vw-vwaas-azure-12k
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cisco',
	[string]$Offer = 'vwaas-azure',
	[string]$Skus = 'vwaas-azure-12k',
	[string]$version =  'latest',
	[string]$Product = 'vwaas-azure',
	[string]$name = 'vwaas-azure-12k'
)
Write-Host "Image Creation in Process - Plan Info - cisco | vwaas-azure-12k"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cisco Offer:vwaas-azure Sku:vwaas-azure-12k Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ci-vw-vwaas-azure-1300
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cisco',
	[string]$Offer = 'vwaas-azure',
	[string]$Skus = 'vwaas-azure-1300',
	[string]$version =  'latest',
	[string]$Product = 'vwaas-azure',
	[string]$name = 'vwaas-azure-1300'
)
Write-Host "Image Creation in Process - Plan Info - cisco | vwaas-azure-1300"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cisco Offer:vwaas-azure Sku:vwaas-azure-1300 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ci-vw-vwaas-azure-200
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cisco',
	[string]$Offer = 'vwaas-azure',
	[string]$Skus = 'vwaas-azure-200',
	[string]$version =  'latest',
	[string]$Product = 'vwaas-azure',
	[string]$name = 'vwaas-azure-200'
)
Write-Host "Image Creation in Process - Plan Info - cisco | vwaas-azure-200"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cisco Offer:vwaas-azure Sku:vwaas-azure-200 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ci-vw-vwaas-azure-2500
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cisco',
	[string]$Offer = 'vwaas-azure',
	[string]$Skus = 'vwaas-azure-2500',
	[string]$version =  'latest',
	[string]$Product = 'vwaas-azure',
	[string]$name = 'vwaas-azure-2500'
)
Write-Host "Image Creation in Process - Plan Info - cisco | vwaas-azure-2500"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cisco Offer:vwaas-azure Sku:vwaas-azure-2500 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ci-vw-vwaas-azure-6k
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cisco',
	[string]$Offer = 'vwaas-azure',
	[string]$Skus = 'vwaas-azure-6k',
	[string]$version =  'latest',
	[string]$Product = 'vwaas-azure',
	[string]$name = 'vwaas-azure-6k'
)
Write-Host "Image Creation in Process - Plan Info - cisco | vwaas-azure-6k"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cisco Offer:vwaas-azure Sku:vwaas-azure-6k Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ci-vw-vwaas-azure-750
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cisco',
	[string]$Offer = 'vwaas-azure',
	[string]$Skus = 'vwaas-azure-750',
	[string]$version =  'latest',
	[string]$Product = 'vwaas-azure',
	[string]$name = 'vwaas-azure-750'
)
Write-Host "Image Creation in Process - Plan Info - cisco | vwaas-azure-750"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cisco Offer:vwaas-azure Sku:vwaas-azure-750 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ci-ne-netscalervpx
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'citrix',
	[string]$Offer = 'netscaler-vpx',
	[string]$Skus = 'netscalervpx',
	[string]$version =  'latest',
	[string]$Product = 'netscaler-vpx',
	[string]$name = 'netscalervpx'
)
Write-Host "Image Creation in Process - Plan Info - citrix | netscalervpx"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: citrix Offer:netscaler-vpx Sku:netscalervpx Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ci-ne-netscalerbyol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'citrix',
	[string]$Offer = 'netscalervpx110-6531',
	[string]$Skus = 'netscalerbyol',
	[string]$version =  'latest',
	[string]$Product = 'netscalervpx110-6531',
	[string]$name = 'netscalerbyol'
)
Write-Host "Image Creation in Process - Plan Info - citrix | netscalerbyol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: citrix Offer:netscalervpx110-6531 Sku:netscalerbyol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ci-xe-coldfireserver
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'citrix',
	[string]$Offer = 'xenapp-server',
	[string]$Skus = 'coldfireserver',
	[string]$version =  'latest',
	[string]$Product = 'xenapp-server',
	[string]$name = 'coldfireserver'
)
Write-Host "Image Creation in Process - Plan Info - citrix | coldfireserver"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: citrix Offer:xenapp-server Sku:coldfireserver Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ci-xe-coldfirerdsh
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'citrix',
	[string]$Offer = 'xenapp-vda-rdsh',
	[string]$Skus = 'coldfirerdsh',
	[string]$version =  'latest',
	[string]$Product = 'xenapp-vda-rdsh',
	[string]$name = 'coldfirerdsh'
)
Write-Host "Image Creation in Process - Plan Info - citrix | coldfirerdsh"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: citrix Offer:xenapp-vda-rdsh Sku:coldfirerdsh Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ci-xe-server2016rdsh
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'citrix',
	[string]$Offer = 'xenapp-vda-rdsh',
	[string]$Skus = 'server2016rdsh',
	[string]$version =  'latest',
	[string]$Product = 'xenapp-vda-rdsh',
	[string]$name = 'server2016rdsh'
)
Write-Host "Image Creation in Process - Plan Info - citrix | server2016rdsh"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: citrix Offer:xenapp-vda-rdsh Sku:server2016rdsh Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ci-xe-coldfirevdi
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'citrix',
	[string]$Offer = 'xenapp-vda-vdi',
	[string]$Skus = 'coldfirevdi',
	[string]$version =  'latest',
	[string]$Product = 'xenapp-vda-vdi',
	[string]$name = 'coldfirevdi'
)
Write-Host "Image Creation in Process - Plan Info - citrix | coldfirevdi"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: citrix Offer:xenapp-vda-vdi Sku:coldfirevdi Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ci-xe-server2016vdi
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'citrix',
	[string]$Offer = 'xenapp-vda-vdi',
	[string]$Skus = 'server2016vdi',
	[string]$version =  'latest',
	[string]$Product = 'xenapp-vda-vdi',
	[string]$name = 'server2016vdi'
)
Write-Host "Image Creation in Process - Plan Info - citrix | server2016vdi"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: citrix Offer:xenapp-vda-vdi Sku:server2016vdi Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_cl-cl-clickberry-encoder-core
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'clickberry',
	[string]$Offer = 'clickberry-encoder',
	[string]$Skus = 'clickberry-encoder-core',
	[string]$version =  'latest',
	[string]$Product = 'clickberry-encoder',
	[string]$name = 'clickberry-encoder-core'
)
Write-Host "Image Creation in Process - Plan Info - clickberry | clickberry-encoder-core"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: clickberry Offer:clickberry-encoder Sku:clickberry-encoder-core Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_cl-cl-cc16-1-0-5
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cloud-cruiser',
	[string]$Offer = 'cloud-cruiser-16',
	[string]$Skus = 'cc16-1-0-5',
	[string]$version =  'latest',
	[string]$Product = 'cloud-cruiser-16',
	[string]$name = 'cc16-1-0-5'
)
Write-Host "Image Creation in Process - Plan Info - cloud-cruiser | cc16-1-0-5"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cloud-cruiser Offer:cloud-cruiser-16 Sku:cc16-1-0-5 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_cl-cl-cloud-cruiser-for-azure
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cloud-cruiser',
	[string]$Offer = 'cloud-cruiser-for-public-cloud',
	[string]$Skus = 'cloud-cruiser-for-azure',
	[string]$version =  'latest',
	[string]$Product = 'cloud-cruiser-for-public-cloud',
	[string]$name = 'cloud-cruiser-for-azure'
)
Write-Host "Image Creation in Process - Plan Info - cloud-cruiser | cloud-cruiser-for-azure"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cloud-cruiser Offer:cloud-cruiser-for-public-cloud Sku:cloud-cruiser-for-azure Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_cl-je-jenkins-enterprise
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cloudbees',
	[string]$Offer = 'jenkins-enterprise',
	[string]$Skus = 'jenkins-enterprise',
	[string]$version =  'latest',
	[string]$Product = 'jenkins-enterprise',
	[string]$name = 'jenkins-enterprise'
)
Write-Host "Image Creation in Process - Plan Info - cloudbees | jenkins-enterprise"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cloudbees Offer:jenkins-enterprise Sku:jenkins-enterprise Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_cl-je-jenkins-operations-center
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cloudbees',
	[string]$Offer = 'jenkins-operations-center',
	[string]$Skus = 'jenkins-operations-center',
	[string]$version =  'latest',
	[string]$Product = 'jenkins-operations-center',
	[string]$name = 'jenkins-operations-center'
)
Write-Host "Image Creation in Process - Plan Info - cloudbees | jenkins-operations-center"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cloudbees Offer:jenkins-operations-center Sku:jenkins-operations-center Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_cl-je-jenkins-operations-center-pro
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cloudbees',
	[string]$Offer = 'jenkins-operations-center',
	[string]$Skus = 'jenkins-operations-center-pro',
	[string]$version =  'latest',
	[string]$Product = 'jenkins-operations-center',
	[string]$name = 'jenkins-operations-center-pro'
)
Write-Host "Image Creation in Process - Plan Info - cloudbees | jenkins-operations-center-pro"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cloudbees Offer:jenkins-operations-center Sku:jenkins-operations-center-pro Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_cl-je-jenkins-operations-center-project
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cloudbees',
	[string]$Offer = 'jenkins-operations-center',
	[string]$Skus = 'jenkins-operations-center-project',
	[string]$version =  'latest',
	[string]$Product = 'jenkins-operations-center',
	[string]$name = 'jenkins-operations-center-project'
)
Write-Host "Image Creation in Process - Plan Info - cloudbees | jenkins-operations-center-project"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cloudbees Offer:jenkins-operations-center Sku:jenkins-operations-center-project Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_cl-je-jenkins-operations-center-solo
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cloudbees',
	[string]$Offer = 'jenkins-operations-center',
	[string]$Skus = 'jenkins-operations-center-solo',
	[string]$version =  'latest',
	[string]$Product = 'jenkins-operations-center',
	[string]$name = 'jenkins-operations-center-solo'
)
Write-Host "Image Creation in Process - Plan Info - cloudbees | jenkins-operations-center-solo"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cloudbees Offer:jenkins-operations-center Sku:jenkins-operations-center-solo Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_cl-je-jenkins-operations-center-team
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cloudbees',
	[string]$Offer = 'jenkins-operations-center',
	[string]$Skus = 'jenkins-operations-center-team',
	[string]$version =  'latest',
	[string]$Product = 'jenkins-operations-center',
	[string]$name = 'jenkins-operations-center-team'
)
Write-Host "Image Creation in Process - Plan Info - cloudbees | jenkins-operations-center-team"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cloudbees Offer:jenkins-operations-center Sku:jenkins-operations-center-team Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_cl-je-jenkins-operations-center-workgroup
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cloudbees',
	[string]$Offer = 'jenkins-operations-center',
	[string]$Skus = 'jenkins-operations-center-workgroup',
	[string]$version =  'latest',
	[string]$Product = 'jenkins-operations-center',
	[string]$name = 'jenkins-operations-center-workgroup'
)
Write-Host "Image Creation in Process - Plan Info - cloudbees | jenkins-operations-center-workgroup"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cloudbees Offer:jenkins-operations-center Sku:jenkins-operations-center-workgroup Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_cl-cl-cloudbees-jenkins-enterprise-14-11
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cloudbees-enterprise-jenkins',
	[string]$Offer = 'cloudbees-jenkins-enterprise',
	[string]$Skus = 'cloudbees-jenkins-enterprise-14-11',
	[string]$version =  'latest',
	[string]$Product = 'cloudbees-jenkins-enterprise',
	[string]$name = 'cloudbees-jenkins-enterprise-14-11'
)
Write-Host "Image Creation in Process - Plan Info - cloudbees-enterprise-jenkins | cloudbees-jenkins-enterprise-14-11"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cloudbees-enterprise-jenkins Offer:cloudbees-jenkins-enterprise Sku:cloudbees-jenkins-enterprise-14-11 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_cl-cl-cloudbees-jenkins-operations-center-14-11
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cloudbees-enterprise-jenkins',
	[string]$Offer = 'cloudbees-jenkins-operations-center',
	[string]$Skus = 'cloudbees-jenkins-operations-center-14-11',
	[string]$version =  'latest',
	[string]$Product = 'cloudbees-jenkins-operations-center',
	[string]$name = 'cloudbees-jenkins-operations-center-14-11'
)
Write-Host "Image Creation in Process - Plan Info - cloudbees-enterprise-jenkins | cloudbees-jenkins-operations-center-14-11"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cloudbees-enterprise-jenkins Offer:cloudbees-jenkins-operations-center Sku:cloudbees-jenkins-operations-center-14-11 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_cl-cl-cb-125pack-1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cloudbolt-software',
	[string]$Offer = 'cloudbolt',
	[string]$Skus = 'cb-125pack-1',
	[string]$version =  'latest',
	[string]$Product = 'cloudbolt',
	[string]$name = 'cb-125pack-1'
)
Write-Host "Image Creation in Process - Plan Info - cloudbolt-software | cb-125pack-1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cloudbolt-software Offer:cloudbolt Sku:cb-125pack-1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_cl-cl-cb-lab25-1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cloudbolt-software',
	[string]$Offer = 'cloudbolt',
	[string]$Skus = 'cb-lab25-1',
	[string]$version =  'latest',
	[string]$Product = 'cloudbolt',
	[string]$name = 'cb-lab25-1'
)
Write-Host "Image Creation in Process - Plan Info - cloudbolt-software | cb-lab25-1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cloudbolt-software Offer:cloudbolt Sku:cb-lab25-1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_cl-cl-cloudboost-enterprise
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cloudboost',
	[string]$Offer = 'cloudboost',
	[string]$Skus = 'cloudboost-enterprise',
	[string]$version =  'latest',
	[string]$Product = 'cloudboost',
	[string]$name = 'cloudboost-enterprise'
)
Write-Host "Image Creation in Process - Plan Info - cloudboost | cloudboost-enterprise"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cloudboost Offer:cloudboost Sku:cloudboost-enterprise Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_cl-cl-cloudera-centos-6
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cloudera',
	[string]$Offer = 'cloudera-centos-6',
	[string]$Skus = 'cloudera-centos-6',
	[string]$version =  'latest',
	[string]$Product = 'cloudera-centos-6',
	[string]$name = 'cloudera-centos-6'
)
Write-Host "Image Creation in Process - Plan Info - cloudera | cloudera-centos-6"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cloudera Offer:cloudera-centos-6 Sku:cloudera-centos-6 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_cl-cl-6_7
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cloudera',
	[string]$Offer = 'cloudera-centos-os',
	[string]$Skus = '6_7',
	[string]$version =  'latest',
	[string]$Product = 'cloudera-centos-os',
	[string]$name = '6_7'
)
Write-Host "Image Creation in Process - Plan Info - cloudera | 6_7"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cloudera Offer:cloudera-centos-os Sku:6_7 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_cl-cl-7_2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cloudera',
	[string]$Offer = 'cloudera-centos-os',
	[string]$Skus = '7_2',
	[string]$version =  'latest',
	[string]$Product = 'cloudera-centos-os',
	[string]$name = '7_2'
)
Write-Host "Image Creation in Process - Plan Info - cloudera | 7_2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cloudera Offer:cloudera-centos-os Sku:7_2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_cl-ap-applications-anywhere-1000
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cloudhouse',
	[string]$Offer = 'applicationanywhere',
	[string]$Skus = 'applications-anywhere-1000',
	[string]$version =  'latest',
	[string]$Product = 'applicationanywhere',
	[string]$name = 'applications-anywhere-1000'
)
Write-Host "Image Creation in Process - Plan Info - cloudhouse | applications-anywhere-1000"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cloudhouse Offer:applicationanywhere Sku:applications-anywhere-1000 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_cl-ap-applications-anywhere-125
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cloudhouse',
	[string]$Offer = 'applicationanywhere',
	[string]$Skus = 'applications-anywhere-125',
	[string]$version =  'latest',
	[string]$Product = 'applicationanywhere',
	[string]$name = 'applications-anywhere-125'
)
Write-Host "Image Creation in Process - Plan Info - cloudhouse | applications-anywhere-125"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cloudhouse Offer:applicationanywhere Sku:applications-anywhere-125 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_cl-ap-applications-anywhere-25
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cloudhouse',
	[string]$Offer = 'applicationanywhere',
	[string]$Skus = 'applications-anywhere-25',
	[string]$version =  'latest',
	[string]$Product = 'applicationanywhere',
	[string]$name = 'applications-anywhere-25'
)
Write-Host "Image Creation in Process - Plan Info - cloudhouse | applications-anywhere-25"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cloudhouse Offer:applicationanywhere Sku:applications-anywhere-25 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_cl-ap-applications-anywhere-250
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cloudhouse',
	[string]$Offer = 'applicationanywhere',
	[string]$Skus = 'applications-anywhere-250',
	[string]$version =  'latest',
	[string]$Product = 'applicationanywhere',
	[string]$name = 'applications-anywhere-250'
)
Write-Host "Image Creation in Process - Plan Info - cloudhouse | applications-anywhere-250"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cloudhouse Offer:applicationanywhere Sku:applications-anywhere-250 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_cl-ap-applications-anywhere-500
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cloudhouse',
	[string]$Offer = 'applicationanywhere',
	[string]$Skus = 'applications-anywhere-500',
	[string]$version =  'latest',
	[string]$Product = 'applicationanywhere',
	[string]$name = 'applications-anywhere-500'
)
Write-Host "Image Creation in Process - Plan Info - cloudhouse | applications-anywhere-500"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cloudhouse Offer:applicationanywhere Sku:applications-anywhere-500 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_cl-ap-applications-anywhere-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cloudhouse',
	[string]$Offer = 'applicationanywhere',
	[string]$Skus = 'applications-anywhere-byol',
	[string]$version =  'latest',
	[string]$Product = 'applicationanywhere',
	[string]$name = 'applications-anywhere-byol'
)
Write-Host "Image Creation in Process - Plan Info - cloudhouse | applications-anywhere-byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cloudhouse Offer:applicationanywhere Sku:applications-anywhere-byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_cl-cl-cloudlink-securevm-50-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cloudlink',
	[string]$Offer = 'cloudlink-securevm',
	[string]$Skus = 'cloudlink-securevm-50-byol',
	[string]$version =  'latest',
	[string]$Product = 'cloudlink-securevm',
	[string]$name = 'cloudlink-securevm-50-byol'
)
Write-Host "Image Creation in Process - Plan Info - cloudlink | cloudlink-securevm-50-byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cloudlink Offer:cloudlink-securevm Sku:cloudlink-securevm-50-byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_cl-cl-cloudlink-securevm-55-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cloudlink',
	[string]$Offer = 'cloudlink-securevm',
	[string]$Skus = 'cloudlink-securevm-55-byol',
	[string]$version =  'latest',
	[string]$Product = 'cloudlink-securevm',
	[string]$name = 'cloudlink-securevm-55-byol'
)
Write-Host "Image Creation in Process - Plan Info - cloudlink | cloudlink-securevm-55-byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cloudlink Offer:cloudlink-securevm Sku:cloudlink-securevm-55-byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_cl-cl-cloudlink-securevm-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cloudlink',
	[string]$Offer = 'cloudlink-securevm',
	[string]$Skus = 'cloudlink-securevm-byol',
	[string]$version =  'latest',
	[string]$Product = 'cloudlink-securevm',
	[string]$name = 'cloudlink-securevm-byol'
)
Write-Host "Image Creation in Process - Plan Info - cloudlink | cloudlink-securevm-byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cloudlink Offer:cloudlink-securevm Sku:cloudlink-securevm-byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_cl-cl-amp-in-azure
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cloudsoft',
	[string]$Offer = 'cloudsoft-amp',
	[string]$Skus = 'amp-in-azure',
	[string]$version =  'latest',
	[string]$Product = 'cloudsoft-amp',
	[string]$name = 'amp-in-azure'
)
Write-Host "Image Creation in Process - Plan Info - cloudsoft | amp-in-azure"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cloudsoft Offer:cloudsoft-amp Sku:amp-in-azure Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_cl-cl-cloudsoft-amp
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cloudsoft',
	[string]$Offer = 'cloudsoft-amp',
	[string]$Skus = 'cloudsoft-amp',
	[string]$version =  'latest',
	[string]$Product = 'cloudsoft-amp',
	[string]$name = 'cloudsoft-amp'
)
Write-Host "Image Creation in Process - Plan Info - cloudsoft | cloudsoft-amp"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cloudsoft Offer:cloudsoft-amp Sku:cloudsoft-amp Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_cl-cl-clxnode_byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'clustrix',
	[string]$Offer = 'clustrixdb',
	[string]$Skus = 'clxnode_byol',
	[string]$version =  'latest',
	[string]$Product = 'clustrixdb',
	[string]$name = 'clxnode_byol'
)
Write-Host "Image Creation in Process - Plan Info - clustrix | clxnode_byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: clustrix Offer:clustrixdb Sku:clxnode_byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-co-filecloud_byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'codelathe',
	[string]$Offer = 'codelathe-filecloud-win2012r2',
	[string]$Skus = 'filecloud_byol',
	[string]$version =  'latest',
	[string]$Product = 'codelathe-filecloud-win2012r2',
	[string]$name = 'filecloud_byol'
)
Write-Host "Image Creation in Process - Plan Info - codelathe | filecloud_byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: codelathe Offer:codelathe-filecloud-win2012r2 Sku:filecloud_byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-co-code-enterprise-op-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'codenvy',
	[string]$Offer = 'codenvy-on-prem',
	[string]$Skus = 'code-enterprise-op-byol',
	[string]$version =  'latest',
	[string]$Product = 'codenvy-on-prem',
	[string]$name = 'code-enterprise-op-byol'
)
Write-Host "Image Creation in Process - Plan Info - codenvy | code-enterprise-op-byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: codenvy Offer:codenvy-on-prem Sku:code-enterprise-op-byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-co-code-team-op-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'codenvy',
	[string]$Offer = 'codenvy-on-prem',
	[string]$Skus = 'code-team-op-byol',
	[string]$version =  'latest',
	[string]$Product = 'codenvy-on-prem',
	[string]$name = 'code-team-op-byol'
)
Write-Host "Image Creation in Process - Plan Info - codenvy | code-team-op-byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: codenvy Offer:codenvy-on-prem Sku:code-team-op-byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-ac-acquiadrupal7-iis8-0-mysql-win2012r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'acquiadrupal7-iis8-0-mysql-win2012r2',
	[string]$Skus = 'acquiadrupal7-iis8-0-mysql-win2012r2',
	[string]$version =  'latest',
	[string]$Product = 'acquiadrupal7-iis8-0-mysql-win2012r2',
	[string]$name = 'acquiadrupal7-iis8-0-mysql-win2012r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | acquiadrupal7-iis8-0-mysql-win2012r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:acquiadrupal7-iis8-0-mysql-win2012r2 Sku:acquiadrupal7-iis8-0-mysql-win2012r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-as-aspxcommerce_iis8_0_sqlserver_2008_win2012_r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'aspxcommerce_iis8_0_sqlserver_2008_win2012_r2',
	[string]$Skus = 'aspxcommerce_iis8_0_sqlserver_2008_win2012_r2',
	[string]$version =  'latest',
	[string]$Product = 'aspxcommerce_iis8_0_sqlserver_2008_win2012_r2',
	[string]$name = 'aspxcommerce_iis8_0_sqlserver_2008_win2012_r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | aspxcommerce_iis8_0_sqlserver_2008_win2012_r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:aspxcommerce_iis8_0_sqlserver_2008_win2012_r2 Sku:aspxcommerce_iis8_0_sqlserver_2008_win2012_r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-be-beyourmarket_iis8_0_sqlserver2008_win2012_r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'beyourmarket_iis8_0_sqlserver2008_win2012_r2',
	[string]$Skus = 'beyourmarket_iis8_0_sqlserver2008_win2012_r2',
	[string]$version =  'latest',
	[string]$Product = 'beyourmarket_iis8_0_sqlserver2008_win2012_r2',
	[string]$name = 'beyourmarket_iis8_0_sqlserver2008_win2012_r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | beyourmarket_iis8_0_sqlserver2008_win2012_r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:beyourmarket_iis8_0_sqlserver2008_win2012_r2 Sku:beyourmarket_iis8_0_sqlserver2008_win2012_r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-bl-blogengine-iis8-0-mysql-win2012-r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'blogengine-iis8-0-mysql-win2012-r2',
	[string]$Skus = 'blogengine-iis8-0-mysql-win2012-r2',
	[string]$version =  'latest',
	[string]$Product = 'blogengine-iis8-0-mysql-win2012-r2',
	[string]$name = 'blogengine-iis8-0-mysql-win2012-r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | blogengine-iis8-0-mysql-win2012-r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:blogengine-iis8-0-mysql-win2012-r2 Sku:blogengine-iis8-0-mysql-win2012-r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-bl-blogengine-win2012-r2-enterprise_lic
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'blogengine-iis8-0-mysql-win2012-r2',
	[string]$Skus = 'blogengine-win2012-r2-enterprise_lic',
	[string]$version =  'latest',
	[string]$Product = 'blogengine-iis8-0-mysql-win2012-r2',
	[string]$name = 'blogengine-win2012-r2-enterprise_lic'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | blogengine-win2012-r2-enterprise_lic"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:blogengine-iis8-0-mysql-win2012-r2 Sku:blogengine-win2012-r2-enterprise_lic Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-bl-blogengine-win2012-r2-professional_lic
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'blogengine-iis8-0-mysql-win2012-r2',
	[string]$Skus = 'blogengine-win2012-r2-professional_lic',
	[string]$version =  'latest',
	[string]$Product = 'blogengine-iis8-0-mysql-win2012-r2',
	[string]$name = 'blogengine-win2012-r2-professional_lic'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | blogengine-win2012-r2-professional_lic"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:blogengine-iis8-0-mysql-win2012-r2 Sku:blogengine-win2012-r2-professional_lic Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-bu-bugnet_iis8_0_mysql_win2012_r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'bugnet_iis8_0_mysql_win2012_r2',
	[string]$Skus = 'bugnet_iis8_0_mysql_win2012_r2',
	[string]$version =  'latest',
	[string]$Product = 'bugnet_iis8_0_mysql_win2012_r2',
	[string]$name = 'bugnet_iis8_0_mysql_win2012_r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | bugnet_iis8_0_mysql_win2012_r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:bugnet_iis8_0_mysql_win2012_r2 Sku:bugnet_iis8_0_mysql_win2012_r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-ca-cakephp_on_iis8_0_win2012_r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'cakephp_on_iis8_0_win2012_r2',
	[string]$Skus = 'cakephp_on_iis8_0_win2012_r2',
	[string]$version =  'latest',
	[string]$Product = 'cakephp_on_iis8_0_win2012_r2',
	[string]$name = 'cakephp_on_iis8_0_win2012_r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | cakephp_on_iis8_0_win2012_r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:cakephp_on_iis8_0_win2012_r2 Sku:cakephp_on_iis8_0_win2012_r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-cm-cmsgallery-iis-8-win2012-r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'cmsgallery-iis-8-win2012-r2',
	[string]$Skus = 'cmsgallery-iis-8-win2012-r2',
	[string]$version =  'latest',
	[string]$Product = 'cmsgallery-iis-8-win2012-r2',
	[string]$name = 'cmsgallery-iis-8-win2012-r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | cmsgallery-iis-8-win2012-r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:cmsgallery-iis-8-win2012-r2 Sku:cmsgallery-iis-8-win2012-r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-cm-cmsgallery-iis-8-win2012-r2-sac-ent-lic
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'cmsgallery-iis-8-win2012-r2',
	[string]$Skus = 'cmsgallery-iis-8-win2012-r2-sac-ent-lic',
	[string]$version =  'latest',
	[string]$Product = 'cmsgallery-iis-8-win2012-r2',
	[string]$name = 'cmsgallery-iis-8-win2012-r2-sac-ent-lic'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | cmsgallery-iis-8-win2012-r2-sac-ent-lic"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:cmsgallery-iis-8-win2012-r2 Sku:cmsgallery-iis-8-win2012-r2-sac-ent-lic Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-cm-cmsgallery-iis-8-win2012-r2-sac-pro-lic
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'cmsgallery-iis-8-win2012-r2',
	[string]$Skus = 'cmsgallery-iis-8-win2012-r2-sac-pro-lic',
	[string]$version =  'latest',
	[string]$Product = 'cmsgallery-iis-8-win2012-r2',
	[string]$name = 'cmsgallery-iis-8-win2012-r2-sac-pro-lic'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | cmsgallery-iis-8-win2012-r2-sac-pro-lic"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:cmsgallery-iis-8-win2012-r2 Sku:cmsgallery-iis-8-win2012-r2-sac-pro-lic Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-co-compositec1-iis8-win2012-r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'compositec1-iis8-win2012-r2',
	[string]$Skus = 'compositec1-iis8-win2012-r2',
	[string]$version =  'latest',
	[string]$Product = 'compositec1-iis8-win2012-r2',
	[string]$name = 'compositec1-iis8-win2012-r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | compositec1-iis8-win2012-r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:compositec1-iis8-win2012-r2 Sku:compositec1-iis8-win2012-r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-da-dasblog-iis-8-win2012-r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'dasblog-iis-8-win2012-r2',
	[string]$Skus = 'dasblog-iis-8-win2012-r2',
	[string]$version =  'latest',
	[string]$Product = 'dasblog-iis-8-win2012-r2',
	[string]$name = 'dasblog-iis-8-win2012-r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | dasblog-iis-8-win2012-r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:dasblog-iis-8-win2012-r2 Sku:dasblog-iis-8-win2012-r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-da-dashcommerce-iis-8-sqlserver2008-win2012-r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'dashcommerce-iis-8-sqlserver2008-win2012-r2',
	[string]$Skus = 'dashcommerce-iis-8-sqlserver2008-win2012-r2',
	[string]$version =  'latest',
	[string]$Product = 'dashcommerce-iis-8-sqlserver2008-win2012-r2',
	[string]$name = 'dashcommerce-iis-8-sqlserver2008-win2012-r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | dashcommerce-iis-8-sqlserver2008-win2012-r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:dashcommerce-iis-8-sqlserver2008-win2012-r2 Sku:dashcommerce-iis-8-sqlserver2008-win2012-r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-de-deploy-a-secured-modx-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'deploy-a-secured-modx-on-ubuntu-14-04-lts',
	[string]$Skus = 'deploy-a-secured-modx-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'deploy-a-secured-modx-on-ubuntu-14-04-lts',
	[string]$name = 'deploy-a-secured-modx-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | deploy-a-secured-modx-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:deploy-a-secured-modx-on-ubuntu-14-04-lts Sku:deploy-a-secured-modx-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-de-secured-silverstripe-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'deploy-a-secured-silverstripe-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-silverstripe-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'deploy-a-secured-silverstripe-on-ubuntu-14-04-lts',
	[string]$name = 'secured-silverstripe-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-silverstripe-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:deploy-a-secured-silverstripe-on-ubuntu-14-04-lts Sku:secured-silverstripe-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-de-developer-ninja-swiss-knife-for-dev-ent-lic
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'developer-ninja-100-stack-swiss-knife-for-devops',
	[string]$Skus = 'developer-ninja-swiss-knife-for-dev-ent-lic',
	[string]$version =  'latest',
	[string]$Product = 'developer-ninja-100-stack-swiss-knife-for-devops',
	[string]$name = 'developer-ninja-swiss-knife-for-dev-ent-lic'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | developer-ninja-swiss-knife-for-dev-ent-lic"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:developer-ninja-100-stack-swiss-knife-for-devops Sku:developer-ninja-swiss-knife-for-dev-ent-lic Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-de-developer-ninja-swiss-knife-for-dev-pre-lic
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'developer-ninja-100-stack-swiss-knife-for-devops',
	[string]$Skus = 'developer-ninja-swiss-knife-for-dev-pre-lic',
	[string]$version =  'latest',
	[string]$Product = 'developer-ninja-100-stack-swiss-knife-for-devops',
	[string]$name = 'developer-ninja-swiss-knife-for-dev-pre-lic'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | developer-ninja-swiss-knife-for-dev-pre-lic"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:developer-ninja-100-stack-swiss-knife-for-devops Sku:developer-ninja-swiss-knife-for-dev-pre-lic Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-de-developer-ninja-swiss-knife-for-dev-pro-lic
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'developer-ninja-100-stack-swiss-knife-for-devops',
	[string]$Skus = 'developer-ninja-swiss-knife-for-dev-pro-lic',
	[string]$version =  'latest',
	[string]$Product = 'developer-ninja-100-stack-swiss-knife-for-devops',
	[string]$name = 'developer-ninja-swiss-knife-for-dev-pro-lic'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | developer-ninja-swiss-knife-for-dev-pro-lic"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:developer-ninja-100-stack-swiss-knife-for-devops Sku:developer-ninja-swiss-knife-for-dev-pro-lic Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-dn-dnn-platform-iis8-mysql-win2012-r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'dnn-platform-iis8-mysql-win2012-r2',
	[string]$Skus = 'dnn-platform-iis8-mysql-win2012-r2',
	[string]$version =  'latest',
	[string]$Product = 'dnn-platform-iis8-mysql-win2012-r2',
	[string]$name = 'dnn-platform-iis8-mysql-win2012-r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | dnn-platform-iis8-mysql-win2012-r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:dnn-platform-iis8-mysql-win2012-r2 Sku:dnn-platform-iis8-mysql-win2012-r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-do-dotnetage-iis8-sql-server2008-win2012-r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'dotnetage-iis8-sql-server2008-win2012-r2',
	[string]$Skus = 'dotnetage-iis8-sql-server2008-win2012-r2',
	[string]$version =  'latest',
	[string]$Product = 'dotnetage-iis8-sql-server2008-win2012-r2',
	[string]$name = 'dotnetage-iis8-sql-server2008-win2012-r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | dotnetage-iis8-sql-server2008-win2012-r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:dotnetage-iis8-sql-server2008-win2012-r2 Sku:dotnetage-iis8-sql-server2008-win2012-r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-do-dotnetcms-iis-8-0-win2012-r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'dotnetcms-iis-8-0-win2012-r2',
	[string]$Skus = 'dotnetcms-iis-8-0-win2012-r2',
	[string]$version =  'latest',
	[string]$Product = 'dotnetcms-iis-8-0-win2012-r2',
	[string]$name = 'dotnetcms-iis-8-0-win2012-r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | dotnetcms-iis-8-0-win2012-r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:dotnetcms-iis-8-0-win2012-r2 Sku:dotnetcms-iis-8-0-win2012-r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-dr-drop-things-iis8-sql-server2008-win2012-r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'drop-things-iis8-sql-server2008-win2012-r2',
	[string]$Skus = 'drop-things-iis8-sql-server2008-win2012-r2',
	[string]$version =  'latest',
	[string]$Product = 'drop-things-iis8-sql-server2008-win2012-r2',
	[string]$name = 'drop-things-iis8-sql-server2008-win2012-r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | drop-things-iis8-sql-server2008-win2012-r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:drop-things-iis8-sql-server2008-win2012-r2 Sku:drop-things-iis8-sql-server2008-win2012-r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-ec-ec-cube-global-iis-8-sqlserverwin2012-r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'ec-cube-global-iis-8-sqlserverwin2012-r2',
	[string]$Skus = 'ec-cube-global-iis-8-sqlserverwin2012-r2',
	[string]$version =  'latest',
	[string]$Product = 'ec-cube-global-iis-8-sqlserverwin2012-r2',
	[string]$name = 'ec-cube-global-iis-8-sqlserverwin2012-r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | ec-cube-global-iis-8-sqlserverwin2012-r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:ec-cube-global-iis-8-sqlserverwin2012-r2 Sku:ec-cube-global-iis-8-sqlserverwin2012-r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-ga-galleryserver-iis8-win2012-r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'galleryserver-iis8-win2012-r2',
	[string]$Skus = 'galleryserver-iis8-win2012-r2',
	[string]$version =  'latest',
	[string]$Product = 'galleryserver-iis8-win2012-r2',
	[string]$name = 'galleryserver-iis8-win2012-r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | galleryserver-iis8-win2012-r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:galleryserver-iis8-win2012-r2 Sku:galleryserver-iis8-win2012-r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-ho-hostanysite-iis8-sqlserver2008-win2012-r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'hostanysite-iis8-sqlserver2008-win2012-r2',
	[string]$Skus = 'hostanysite-iis8-sqlserver2008-win2012-r2',
	[string]$version =  'latest',
	[string]$Product = 'hostanysite-iis8-sqlserver2008-win2012-r2',
	[string]$name = 'hostanysite-iis8-sqlserver2008-win2012-r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | hostanysite-iis8-sqlserver2008-win2012-r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:hostanysite-iis8-sqlserver2008-win2012-r2 Sku:hostanysite-iis8-sqlserver2008-win2012-r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-in-sec1012-invoice-ninja-2-5-1-1-on-ubuntu-1404
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'invoice-ninja-2-5-1-1-on-ubuntu-1404',
	[string]$Skus = 'sec1012-invoice-ninja-2-5-1-1-on-ubuntu-1404',
	[string]$version =  'latest',
	[string]$Product = 'invoice-ninja-2-5-1-1-on-ubuntu-1404',
	[string]$name = 'sec1012-invoice-ninja-2-5-1-1-on-ubuntu-1404'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | sec1012-invoice-ninja-2-5-1-1-on-ubuntu-1404"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:invoice-ninja-2-5-1-1-on-ubuntu-1404 Sku:sec1012-invoice-ninja-2-5-1-1-on-ubuntu-1404 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-in-secured-invoice-ninja-on-ubuntu-pro-lic
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'invoice-ninja-2-5-1-1-on-ubuntu-1404',
	[string]$Skus = 'secured-invoice-ninja-on-ubuntu-pro-lic',
	[string]$version =  'latest',
	[string]$Product = 'invoice-ninja-2-5-1-1-on-ubuntu-1404',
	[string]$name = 'secured-invoice-ninja-on-ubuntu-pro-lic'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-invoice-ninja-on-ubuntu-pro-lic"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:invoice-ninja-2-5-1-1-on-ubuntu-1404 Sku:secured-invoice-ninja-on-ubuntu-pro-lic Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-jo-joomla-iis8-mysql-win2012-r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'joomla-iis8-mysql-win2012-r2',
	[string]$Skus = 'joomla-iis8-mysql-win2012-r2',
	[string]$version =  'latest',
	[string]$Product = 'joomla-iis8-mysql-win2012-r2',
	[string]$name = 'joomla-iis8-mysql-win2012-r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | joomla-iis8-mysql-win2012-r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:joomla-iis8-mysql-win2012-r2 Sku:joomla-iis8-mysql-win2012-r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-jr-jruby-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'jruby-on-ubuntu-14-04-lts',
	[string]$Skus = 'jruby-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'jruby-on-ubuntu-14-04-lts',
	[string]$name = 'jruby-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | jruby-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:jruby-on-ubuntu-14-04-lts Sku:jruby-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-ke-kentico-iis8-sqlserver2008-win2012-r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'kentico-iis8-sqlserver2008-win2012-r2',
	[string]$Skus = 'kentico-iis8-sqlserver2008-win2012-r2',
	[string]$version =  'latest',
	[string]$Product = 'kentico-iis8-sqlserver2008-win2012-r2',
	[string]$name = 'kentico-iis8-sqlserver2008-win2012-r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | kentico-iis8-sqlserver2008-win2012-r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:kentico-iis8-sqlserver2008-win2012-r2 Sku:kentico-iis8-sqlserver2008-win2012-r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-ko-kooboo-cms-iis8-win2012-r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'kooboo-cms-iis8-win2012-r2',
	[string]$Skus = 'kooboo-cms-iis8-win2012-r2',
	[string]$version =  'latest',
	[string]$Product = 'kooboo-cms-iis8-win2012-r2',
	[string]$name = 'kooboo-cms-iis8-win2012-r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | kooboo-cms-iis8-win2012-r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:kooboo-cms-iis8-win2012-r2 Sku:kooboo-cms-iis8-win2012-r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-le-lemoon-iis8-sqlserver2008-win2012-r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'lemoon-iis8-sqlserver2008-win2012-r2',
	[string]$Skus = 'lemoon-iis8-sqlserver2008-win2012-r2',
	[string]$version =  'latest',
	[string]$Product = 'lemoon-iis8-sqlserver2008-win2012-r2',
	[string]$name = 'lemoon-iis8-sqlserver2008-win2012-r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | lemoon-iis8-sqlserver2008-win2012-r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:lemoon-iis8-sqlserver2008-win2012-r2 Sku:lemoon-iis8-sqlserver2008-win2012-r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-ma-magelia-webstore-iis8-win2012-r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'magelia-webstore-iis8-win2012-r2',
	[string]$Skus = 'magelia-webstore-iis8-win2012-r2',
	[string]$version =  'latest',
	[string]$Product = 'magelia-webstore-iis8-win2012-r2',
	[string]$name = 'magelia-webstore-iis8-win2012-r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | magelia-webstore-iis8-win2012-r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:magelia-webstore-iis8-win2012-r2 Sku:magelia-webstore-iis8-win2012-r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-ma-magento-iis8-mysql-win2012-r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'magento-iis8-mysql-win2012-r2',
	[string]$Skus = 'magento-iis8-mysql-win2012-r2',
	[string]$version =  'latest',
	[string]$Product = 'magento-iis8-mysql-win2012-r2',
	[string]$name = 'magento-iis8-mysql-win2012-r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | magento-iis8-mysql-win2012-r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:magento-iis8-mysql-win2012-r2 Sku:magento-iis8-mysql-win2012-r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-ma-mayando-iis8-sqlserver2008-win2012-r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'mayando-iis8-sqlserver2008-win2012-r2',
	[string]$Skus = 'mayando-iis8-sqlserver2008-win2012-r2',
	[string]$version =  'latest',
	[string]$Product = 'mayando-iis8-sqlserver2008-win2012-r2',
	[string]$name = 'mayando-iis8-sqlserver2008-win2012-r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | mayando-iis8-sqlserver2008-win2012-r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:mayando-iis8-sqlserver2008-win2012-r2 Sku:mayando-iis8-sqlserver2008-win2012-r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-me-mediawiki-iis8-mysql-win2012-r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'mediawiki-iis8-mysql-win2012-r2',
	[string]$Skus = 'mediawiki-iis8-mysql-win2012-r2',
	[string]$version =  'latest',
	[string]$Product = 'mediawiki-iis8-mysql-win2012-r2',
	[string]$name = 'mediawiki-iis8-mysql-win2012-r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | mediawiki-iis8-mysql-win2012-r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:mediawiki-iis8-mysql-win2012-r2 Sku:mediawiki-iis8-mysql-win2012-r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-mo-modxccmx-iis8-mysql-win2012-r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'modxccmx-iis8-mysql-win2012-r2',
	[string]$Skus = 'modxccmx-iis8-mysql-win2012-r2',
	[string]$version =  'latest',
	[string]$Product = 'modxccmx-iis8-mysql-win2012-r2',
	[string]$name = 'modxccmx-iis8-mysql-win2012-r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | modxccmx-iis8-mysql-win2012-r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:modxccmx-iis8-mysql-win2012-r2 Sku:modxccmx-iis8-mysql-win2012-r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-mo-moodle-iis8-mysql-win2012-r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'moodle-iis8-mysql-win2012-r2',
	[string]$Skus = 'moodle-iis8-mysql-win2012-r2',
	[string]$version =  'latest',
	[string]$Product = 'moodle-iis8-mysql-win2012-r2',
	[string]$name = 'moodle-iis8-mysql-win2012-r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | moodle-iis8-mysql-win2012-r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:moodle-iis8-mysql-win2012-r2 Sku:moodle-iis8-mysql-win2012-r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-mv-mvcforum-iis8-sqlserver2008-win2012-r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'mvcforum-iis8-sqlserver2008-win2012-r2',
	[string]$Skus = 'mvcforum-iis8-sqlserver2008-win2012-r2',
	[string]$version =  'latest',
	[string]$Product = 'mvcforum-iis8-sqlserver2008-win2012-r2',
	[string]$name = 'mvcforum-iis8-sqlserver2008-win2012-r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | mvcforum-iis8-sqlserver2008-win2012-r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:mvcforum-iis8-sqlserver2008-win2012-r2 Sku:mvcforum-iis8-sqlserver2008-win2012-r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-my-mycv-iis8-win2012-r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'mycv-iis8-win2012-r2',
	[string]$Skus = 'mycv-iis8-win2012-r2',
	[string]$version =  'latest',
	[string]$Product = 'mycv-iis8-win2012-r2',
	[string]$name = 'mycv-iis8-win2012-r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | mycv-iis8-win2012-r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:mycv-iis8-win2012-r2 Sku:mycv-iis8-win2012-r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-n2-n2cms-iis8-sqlserver2008-win2012-r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'n2cms-iis8-sqlserver2008-win2012-r2',
	[string]$Skus = 'n2cms-iis8-sqlserver2008-win2012-r2',
	[string]$version =  'latest',
	[string]$Product = 'n2cms-iis8-sqlserver2008-win2012-r2',
	[string]$name = 'n2cms-iis8-sqlserver2008-win2012-r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | n2cms-iis8-sqlserver2008-win2012-r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:n2cms-iis8-sqlserver2008-win2012-r2 Sku:n2cms-iis8-sqlserver2008-win2012-r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-no-nopcommerce-iis8-sqlserver2008-win2012-r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'nopcommerce-iis8-sqlserver2008-win2012-r2',
	[string]$Skus = 'nopcommerce-iis8-sqlserver2008-win2012-r2',
	[string]$version =  'latest',
	[string]$Product = 'nopcommerce-iis8-sqlserver2008-win2012-r2',
	[string]$name = 'nopcommerce-iis8-sqlserver2008-win2012-r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | nopcommerce-iis8-sqlserver2008-win2012-r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:nopcommerce-iis8-sqlserver2008-win2012-r2 Sku:nopcommerce-iis8-sqlserver2008-win2012-r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-ns-nservice-iis8-sqlserver2008-win2012-r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'nservice-iis8-sqlserver2008-win2012-r2',
	[string]$Skus = 'nservice-iis8-sqlserver2008-win2012-r2',
	[string]$version =  'latest',
	[string]$Product = 'nservice-iis8-sqlserver2008-win2012-r2',
	[string]$name = 'nservice-iis8-sqlserver2008-win2012-r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | nservice-iis8-sqlserver2008-win2012-r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:nservice-iis8-sqlserver2008-win2012-r2 Sku:nservice-iis8-sqlserver2008-win2012-r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-oc-ocportal-iis8-mysql-win2012-r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'ocportal-iis8-mysql-win2012-r2',
	[string]$Skus = 'ocportal-iis8-mysql-win2012-r2',
	[string]$version =  'latest',
	[string]$Product = 'ocportal-iis8-mysql-win2012-r2',
	[string]$name = 'ocportal-iis8-mysql-win2012-r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | ocportal-iis8-mysql-win2012-r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:ocportal-iis8-mysql-win2012-r2 Sku:ocportal-iis8-mysql-win2012-r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-of-officeclipbasicedition-iis8-sqlser2008-win2012-r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'officeclipbasicedition-iis8-sqlser2008-win2012-r2',
	[string]$Skus = 'officeclipbasicedition-iis8-sqlser2008-win2012-r2',
	[string]$version =  'latest',
	[string]$Product = 'officeclipbasicedition-iis8-sqlser2008-win2012-r2',
	[string]$name = 'officeclipbasicedition-iis8-sqlser2008-win2012-r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | officeclipbasicedition-iis8-sqlser2008-win2012-r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:officeclipbasicedition-iis8-sqlser2008-win2012-r2 Sku:officeclipbasicedition-iis8-sqlser2008-win2012-r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-op-opencart-iis8-mysql-win2012-r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'opencart-iis8-mysql-win2012-r2',
	[string]$Skus = 'opencart-iis8-mysql-win2012-r2',
	[string]$version =  'latest',
	[string]$Product = 'opencart-iis8-mysql-win2012-r2',
	[string]$name = 'opencart-iis8-mysql-win2012-r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | opencart-iis8-mysql-win2012-r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:opencart-iis8-mysql-win2012-r2 Sku:opencart-iis8-mysql-win2012-r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-or-orchard-iis8-win2012-r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'orchard-iis8-win2012-r2',
	[string]$Skus = 'orchard-iis8-win2012-r2',
	[string]$version =  'latest',
	[string]$Product = 'orchard-iis8-win2012-r2',
	[string]$name = 'orchard-iis8-win2012-r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | orchard-iis8-win2012-r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:orchard-iis8-win2012-r2 Sku:orchard-iis8-win2012-r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-or-orchardcollaboration-iis8-sqlser2008-win2012-r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'orchardcollaboration-iis8-sqlser2008-win2012-r2',
	[string]$Skus = 'orchardcollaboration-iis8-sqlser2008-win2012-r2',
	[string]$version =  'latest',
	[string]$Product = 'orchardcollaboration-iis8-sqlser2008-win2012-r2',
	[string]$name = 'orchardcollaboration-iis8-sqlser2008-win2012-r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | orchardcollaboration-iis8-sqlser2008-win2012-r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:orchardcollaboration-iis8-sqlser2008-win2012-r2 Sku:orchardcollaboration-iis8-sqlser2008-win2012-r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-ow-owa-iis8-mysql-win2012-r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'owa-iis8-mysql-win2012-r2',
	[string]$Skus = 'owa-iis8-mysql-win2012-r2',
	[string]$version =  'latest',
	[string]$Product = 'owa-iis8-mysql-win2012-r2',
	[string]$name = 'owa-iis8-mysql-win2012-r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | owa-iis8-mysql-win2012-r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:owa-iis8-mysql-win2012-r2 Sku:owa-iis8-mysql-win2012-r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-ow-owncloud-9-with-lamp-stack-on-ubuntu-1404
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'owncloud-9-with-lamp-stack-on-ubuntu-1404',
	[string]$Skus = 'owncloud-9-with-lamp-stack-on-ubuntu-1404',
	[string]$version =  'latest',
	[string]$Product = 'owncloud-9-with-lamp-stack-on-ubuntu-1404',
	[string]$name = 'owncloud-9-with-lamp-stack-on-ubuntu-1404'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | owncloud-9-with-lamp-stack-on-ubuntu-1404"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:owncloud-9-with-lamp-stack-on-ubuntu-1404 Sku:owncloud-9-with-lamp-stack-on-ubuntu-1404 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-ph-phpbb-iis8-mysql-win2012-r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'phpbb-iis8-mysql-win2012-r2',
	[string]$Skus = 'phpbb-iis8-mysql-win2012-r2',
	[string]$version =  'latest',
	[string]$Product = 'phpbb-iis8-mysql-win2012-r2',
	[string]$name = 'phpbb-iis8-mysql-win2012-r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | phpbb-iis8-mysql-win2012-r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:phpbb-iis8-mysql-win2012-r2 Sku:phpbb-iis8-mysql-win2012-r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-pi-piwigogallerys-ubuntu_14-04_lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'piwigogallerys-ubuntu_14-04_lts',
	[string]$Skus = 'piwigogallerys-ubuntu_14-04_lts',
	[string]$version =  'latest',
	[string]$Product = 'piwigogallerys-ubuntu_14-04_lts',
	[string]$name = 'piwigogallerys-ubuntu_14-04_lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | piwigogallerys-ubuntu_14-04_lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:piwigogallerys-ubuntu_14-04_lts Sku:piwigogallerys-ubuntu_14-04_lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-pi-piwik-iis8-mysql-win2012-r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'piwik-iis8-mysql-win2012-r2',
	[string]$Skus = 'piwik-iis8-mysql-win2012-r2',
	[string]$version =  'latest',
	[string]$Product = 'piwik-iis8-mysql-win2012-r2',
	[string]$name = 'piwik-iis8-mysql-win2012-r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | piwik-iis8-mysql-win2012-r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:piwik-iis8-mysql-win2012-r2 Sku:piwik-iis8-mysql-win2012-r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-ra-razorc-iis8-win2012-r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'razorc-iis8-win2012-r2',
	[string]$Skus = 'razorc-iis8-win2012-r2',
	[string]$version =  'latest',
	[string]$Product = 'razorc-iis8-win2012-r2',
	[string]$name = 'razorc-iis8-win2012-r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | razorc-iis8-win2012-r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:razorc-iis8-win2012-r2 Sku:razorc-iis8-win2012-r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-sc-schlixcms-iis8-mysql-win2012-r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'schlixcms-iis8-mysql-win2012-r2',
	[string]$Skus = 'schlixcms-iis8-mysql-win2012-r2',
	[string]$version =  'latest',
	[string]$Product = 'schlixcms-iis8-mysql-win2012-r2',
	[string]$name = 'schlixcms-iis8-mysql-win2012-r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | schlixcms-iis8-mysql-win2012-r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:schlixcms-iis8-mysql-win2012-r2 Sku:schlixcms-iis8-mysql-win2012-r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-sec1007-secured-couchbase-server-4-on-ubuntu-1404
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'sec1007-secured-couchbase-server-4-on-ubuntu-1404',
	[string]$Skus = 'sec1007-secured-couchbase-server-4-on-ubuntu-1404',
	[string]$version =  'latest',
	[string]$Product = 'sec1007-secured-couchbase-server-4-on-ubuntu-1404',
	[string]$name = 'sec1007-secured-couchbase-server-4-on-ubuntu-1404'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | sec1007-secured-couchbase-server-4-on-ubuntu-1404"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:sec1007-secured-couchbase-server-4-on-ubuntu-1404 Sku:sec1007-secured-couchbase-server-4-on-ubuntu-1404 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-sec1011-dokuwiki-on-hardened-ubuntu-1404
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'sec1011-dokuwiki-on-ubuntu-1404',
	[string]$Skus = 'sec1011-dokuwiki-on-hardened-ubuntu-1404',
	[string]$version =  'latest',
	[string]$Product = 'sec1011-dokuwiki-on-ubuntu-1404',
	[string]$name = 'sec1011-dokuwiki-on-hardened-ubuntu-1404'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | sec1011-dokuwiki-on-hardened-ubuntu-1404"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:sec1011-dokuwiki-on-ubuntu-1404 Sku:sec1011-dokuwiki-on-hardened-ubuntu-1404 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-sec1013-elasticsearch-on-ubuntu-1404
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'sec1013-elasticsearch-on-ubuntu-1404',
	[string]$Skus = 'sec1013-elasticsearch-on-ubuntu-1404',
	[string]$version =  'latest',
	[string]$Product = 'sec1013-elasticsearch-on-ubuntu-1404',
	[string]$name = 'sec1013-elasticsearch-on-ubuntu-1404'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | sec1013-elasticsearch-on-ubuntu-1404"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:sec1013-elasticsearch-on-ubuntu-1404 Sku:sec1013-elasticsearch-on-ubuntu-1404 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-sec1014-opencart-on-ubuntu-1404
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'sec1014-opencart-on-ubuntu-1404',
	[string]$Skus = 'sec1014-opencart-on-ubuntu-1404',
	[string]$version =  'latest',
	[string]$Product = 'sec1014-opencart-on-ubuntu-1404',
	[string]$name = 'sec1014-opencart-on-ubuntu-1404'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | sec1014-opencart-on-ubuntu-1404"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:sec1014-opencart-on-ubuntu-1404 Sku:sec1014-opencart-on-ubuntu-1404 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-opencart-on-ubuntu-pro-lic
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'sec1014-opencart-on-ubuntu-1404',
	[string]$Skus = 'secured-opencart-on-ubuntu-pro-lic',
	[string]$version =  'latest',
	[string]$Product = 'sec1014-opencart-on-ubuntu-1404',
	[string]$name = 'secured-opencart-on-ubuntu-pro-lic'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-opencart-on-ubuntu-pro-lic"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:sec1014-opencart-on-ubuntu-1404 Sku:secured-opencart-on-ubuntu-pro-lic Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-sec1015-orangehrm-on-ubuntu-1404
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'sec1015-orangehrm-on-ubuntu-1404',
	[string]$Skus = 'sec1015-orangehrm-on-ubuntu-1404',
	[string]$version =  'latest',
	[string]$Product = 'sec1015-orangehrm-on-ubuntu-1404',
	[string]$name = 'sec1015-orangehrm-on-ubuntu-1404'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | sec1015-orangehrm-on-ubuntu-1404"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:sec1015-orangehrm-on-ubuntu-1404 Sku:sec1015-orangehrm-on-ubuntu-1404 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-orangehrm-on-ubuntu-pro-lic
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'sec1015-orangehrm-on-ubuntu-1404',
	[string]$Skus = 'secured-orangehrm-on-ubuntu-pro-lic',
	[string]$version =  'latest',
	[string]$Product = 'sec1015-orangehrm-on-ubuntu-1404',
	[string]$name = 'secured-orangehrm-on-ubuntu-pro-lic'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-orangehrm-on-ubuntu-pro-lic"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:sec1015-orangehrm-on-ubuntu-1404 Sku:secured-orangehrm-on-ubuntu-pro-lic Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-sec1016-nodejs-server-on-ubuntu-1404
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'sec1016-nodejs-server-on-ubuntu-1404',
	[string]$Skus = 'sec1016-nodejs-server-on-ubuntu-1404',
	[string]$version =  'latest',
	[string]$Product = 'sec1016-nodejs-server-on-ubuntu-1404',
	[string]$name = 'sec1016-nodejs-server-on-ubuntu-1404'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | sec1016-nodejs-server-on-ubuntu-1404"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:sec1016-nodejs-server-on-ubuntu-1404 Sku:sec1016-nodejs-server-on-ubuntu-1404 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-sec1018-secured-haproxy-on-ubuntu-1404
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'sec1018-haproxy-on-ubuntu-1404',
	[string]$Skus = 'sec1018-secured-haproxy-on-ubuntu-1404',
	[string]$version =  'latest',
	[string]$Product = 'sec1018-haproxy-on-ubuntu-1404',
	[string]$name = 'sec1018-secured-haproxy-on-ubuntu-1404'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | sec1018-secured-haproxy-on-ubuntu-1404"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:sec1018-haproxy-on-ubuntu-1404 Sku:sec1018-secured-haproxy-on-ubuntu-1404 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-sec1019-secured-tomcat-on-ubuntu-1404
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'sec1019-secured-tomcat-on-ubuntu-1404',
	[string]$Skus = 'sec1019-secured-tomcat-on-ubuntu-1404',
	[string]$version =  'latest',
	[string]$Product = 'sec1019-secured-tomcat-on-ubuntu-1404',
	[string]$name = 'sec1019-secured-tomcat-on-ubuntu-1404'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | sec1019-secured-tomcat-on-ubuntu-1404"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:sec1019-secured-tomcat-on-ubuntu-1404 Sku:sec1019-secured-tomcat-on-ubuntu-1404 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-sec1020-phpbb-on-hardened-ubuntu-1404
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'sec1020-phpbb-on-hardened-ubuntu-1404',
	[string]$Skus = 'sec1020-phpbb-on-hardened-ubuntu-1404',
	[string]$version =  'latest',
	[string]$Product = 'sec1020-phpbb-on-hardened-ubuntu-1404',
	[string]$name = 'sec1020-phpbb-on-hardened-ubuntu-1404'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | sec1020-phpbb-on-hardened-ubuntu-1404"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:sec1020-phpbb-on-hardened-ubuntu-1404 Sku:sec1020-phpbb-on-hardened-ubuntu-1404 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-phpbb-on-ubuntu-pro-lic
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'sec1020-phpbb-on-hardened-ubuntu-1404',
	[string]$Skus = 'secured-phpbb-on-ubuntu-pro-lic',
	[string]$version =  'latest',
	[string]$Product = 'sec1020-phpbb-on-hardened-ubuntu-1404',
	[string]$name = 'secured-phpbb-on-ubuntu-pro-lic'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-phpbb-on-ubuntu-pro-lic"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:sec1020-phpbb-on-hardened-ubuntu-1404 Sku:secured-phpbb-on-ubuntu-pro-lic Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-sec1021-mybb-on-hardened-ubuntu-1404
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'sec1021-mybb-on-hardened-ubuntu-1404',
	[string]$Skus = 'sec1021-mybb-on-hardened-ubuntu-1404',
	[string]$version =  'latest',
	[string]$Product = 'sec1021-mybb-on-hardened-ubuntu-1404',
	[string]$name = 'sec1021-mybb-on-hardened-ubuntu-1404'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | sec1021-mybb-on-hardened-ubuntu-1404"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:sec1021-mybb-on-hardened-ubuntu-1404 Sku:sec1021-mybb-on-hardened-ubuntu-1404 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-sec01022-sugarcrm-on-ubuntu-1404
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'sec1022-sugarcrm-on-ubuntu-1404',
	[string]$Skus = 'sec01022-sugarcrm-on-ubuntu-1404',
	[string]$version =  'latest',
	[string]$Product = 'sec1022-sugarcrm-on-ubuntu-1404',
	[string]$name = 'sec01022-sugarcrm-on-ubuntu-1404'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | sec01022-sugarcrm-on-ubuntu-1404"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:sec1022-sugarcrm-on-ubuntu-1404 Sku:sec01022-sugarcrm-on-ubuntu-1404 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-sec1022-sugarcrm-on-ubuntu-1404
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'sec1022-sugarcrm-on-ubuntu-1404',
	[string]$Skus = 'sec1022-sugarcrm-on-ubuntu-1404',
	[string]$version =  'latest',
	[string]$Product = 'sec1022-sugarcrm-on-ubuntu-1404',
	[string]$name = 'sec1022-sugarcrm-on-ubuntu-1404'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | sec1022-sugarcrm-on-ubuntu-1404"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:sec1022-sugarcrm-on-ubuntu-1404 Sku:sec1022-sugarcrm-on-ubuntu-1404 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-sugarcrm-on-ubuntu-pro-lic
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'sec1022-sugarcrm-on-ubuntu-1404',
	[string]$Skus = 'secured-sugarcrm-on-ubuntu-pro-lic',
	[string]$version =  'latest',
	[string]$Product = 'sec1022-sugarcrm-on-ubuntu-1404',
	[string]$name = 'secured-sugarcrm-on-ubuntu-pro-lic'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-sugarcrm-on-ubuntu-pro-lic"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:sec1022-sugarcrm-on-ubuntu-1404 Sku:secured-sugarcrm-on-ubuntu-pro-lic Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-sec1023-moodle-on-ubuntu-1404
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'sec1023-moodle-on-ubuntu-1404',
	[string]$Skus = 'sec1023-moodle-on-ubuntu-1404',
	[string]$version =  'latest',
	[string]$Product = 'sec1023-moodle-on-ubuntu-1404',
	[string]$name = 'sec1023-moodle-on-ubuntu-1404'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | sec1023-moodle-on-ubuntu-1404"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:sec1023-moodle-on-ubuntu-1404 Sku:sec1023-moodle-on-ubuntu-1404 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-sugarcrm-on-ubuntu-pro-lic
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'sec1023-moodle-on-ubuntu-1404',
	[string]$Skus = 'secured-sugarcrm-on-ubuntu-pro-lic',
	[string]$version =  'latest',
	[string]$Product = 'sec1023-moodle-on-ubuntu-1404',
	[string]$name = 'secured-sugarcrm-on-ubuntu-pro-lic'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-sugarcrm-on-ubuntu-pro-lic"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:sec1023-moodle-on-ubuntu-1404 Sku:secured-sugarcrm-on-ubuntu-pro-lic Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-sec1024_magento-on-hardened-ubuntu-1404
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'sec1024_magento-on-ubuntu-1404',
	[string]$Skus = 'sec1024_magento-on-hardened-ubuntu-1404',
	[string]$version =  'latest',
	[string]$Product = 'sec1024_magento-on-ubuntu-1404',
	[string]$name = 'sec1024_magento-on-hardened-ubuntu-1404'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | sec1024_magento-on-hardened-ubuntu-1404"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:sec1024_magento-on-ubuntu-1404 Sku:sec1024_magento-on-hardened-ubuntu-1404 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-sec1025-secured-drupal-on-ubuntu-1404
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'sec1025-secured-drupal-on-ubuntu-1404',
	[string]$Skus = 'sec1025-secured-drupal-on-ubuntu-1404',
	[string]$version =  'latest',
	[string]$Product = 'sec1025-secured-drupal-on-ubuntu-1404',
	[string]$name = 'sec1025-secured-drupal-on-ubuntu-1404'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | sec1025-secured-drupal-on-ubuntu-1404"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:sec1025-secured-drupal-on-ubuntu-1404 Sku:sec1025-secured-drupal-on-ubuntu-1404 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-durpal-on-ubuntu-pro-lic
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'sec1025-secured-drupal-on-ubuntu-1404',
	[string]$Skus = 'secured-durpal-on-ubuntu-pro-lic',
	[string]$version =  'latest',
	[string]$Product = 'sec1025-secured-drupal-on-ubuntu-1404',
	[string]$name = 'secured-durpal-on-ubuntu-pro-lic'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-durpal-on-ubuntu-pro-lic"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:sec1025-secured-drupal-on-ubuntu-1404 Sku:secured-durpal-on-ubuntu-pro-lic Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-sec1026-secured-joomla-on-ubuntu-1404
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'sec1026-secured-joomla-on-ubuntu-1404',
	[string]$Skus = 'sec1026-secured-joomla-on-ubuntu-1404',
	[string]$version =  'latest',
	[string]$Product = 'sec1026-secured-joomla-on-ubuntu-1404',
	[string]$name = 'sec1026-secured-joomla-on-ubuntu-1404'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | sec1026-secured-joomla-on-ubuntu-1404"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:sec1026-secured-joomla-on-ubuntu-1404 Sku:sec1026-secured-joomla-on-ubuntu-1404 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-sec1027-secured-wordpress-on-ubuntu-1404
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'sec1027-secured-wordpress-on-ubuntu-1404',
	[string]$Skus = 'sec1027-secured-wordpress-on-ubuntu-1404',
	[string]$version =  'latest',
	[string]$Product = 'sec1027-secured-wordpress-on-ubuntu-1404',
	[string]$name = 'sec1027-secured-wordpress-on-ubuntu-1404'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | sec1027-secured-wordpress-on-ubuntu-1404"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:sec1027-secured-wordpress-on-ubuntu-1404 Sku:sec1027-secured-wordpress-on-ubuntu-1404 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-sec1028-secured-lamp-sever-on-ubuntu-1404
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'sec1028-secured-lamp-sever-on-ubuntu-1404',
	[string]$Skus = 'sec1028-secured-lamp-sever-on-ubuntu-1404',
	[string]$version =  'latest',
	[string]$Product = 'sec1028-secured-lamp-sever-on-ubuntu-1404',
	[string]$name = 'sec1028-secured-lamp-sever-on-ubuntu-1404'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | sec1028-secured-lamp-sever-on-ubuntu-1404"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:sec1028-secured-lamp-sever-on-ubuntu-1404 Sku:sec1028-secured-lamp-sever-on-ubuntu-1404 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-sec1029-secured-mediawiki-on-ubuntu-1404
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'sec1029-secured-mediawiki-on-ubuntu-1404',
	[string]$Skus = 'sec1029-secured-mediawiki-on-ubuntu-1404',
	[string]$version =  'latest',
	[string]$Product = 'sec1029-secured-mediawiki-on-ubuntu-1404',
	[string]$name = 'sec1029-secured-mediawiki-on-ubuntu-1404'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | sec1029-secured-mediawiki-on-ubuntu-1404"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:sec1029-secured-mediawiki-on-ubuntu-1404 Sku:sec1029-secured-mediawiki-on-ubuntu-1404 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-mediawiki-on-ubuntu-pro-lic
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'sec1029-secured-mediawiki-on-ubuntu-1404',
	[string]$Skus = 'secured-mediawiki-on-ubuntu-pro-lic',
	[string]$version =  'latest',
	[string]$Product = 'sec1029-secured-mediawiki-on-ubuntu-1404',
	[string]$name = 'secured-mediawiki-on-ubuntu-pro-lic'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-mediawiki-on-ubuntu-pro-lic"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:sec1029-secured-mediawiki-on-ubuntu-1404 Sku:secured-mediawiki-on-ubuntu-pro-lic Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-sec1030-secured-subversion-on-ubuntu-1404
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'sec1030-secured-subversion-on-ubuntu-1404',
	[string]$Skus = 'sec1030-secured-subversion-on-ubuntu-1404',
	[string]$version =  'latest',
	[string]$Product = 'sec1030-secured-subversion-on-ubuntu-1404',
	[string]$name = 'sec1030-secured-subversion-on-ubuntu-1404'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | sec1030-secured-subversion-on-ubuntu-1404"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:sec1030-secured-subversion-on-ubuntu-1404 Sku:sec1030-secured-subversion-on-ubuntu-1404 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-sec1031-secured-passenger-nginx-on-ubuntu-1404
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'sec1031-secured-passenger-nginx-on-ubuntu-1404',
	[string]$Skus = 'sec1031-secured-passenger-nginx-on-ubuntu-1404',
	[string]$version =  'latest',
	[string]$Product = 'sec1031-secured-passenger-nginx-on-ubuntu-1404',
	[string]$name = 'sec1031-secured-passenger-nginx-on-ubuntu-1404'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | sec1031-secured-passenger-nginx-on-ubuntu-1404"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:sec1031-secured-passenger-nginx-on-ubuntu-1404 Sku:sec1031-secured-passenger-nginx-on-ubuntu-1404 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-sec1032-secured-mongodb-v2-6-12-ubuntu-1404
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'sec1032-secured-mongodb-v2-6-12-ubuntu-1404',
	[string]$Skus = 'sec1032-secured-mongodb-v2-6-12-ubuntu-1404',
	[string]$version =  'latest',
	[string]$Product = 'sec1032-secured-mongodb-v2-6-12-ubuntu-1404',
	[string]$name = 'sec1032-secured-mongodb-v2-6-12-ubuntu-1404'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | sec1032-secured-mongodb-v2-6-12-ubuntu-1404"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:sec1032-secured-mongodb-v2-6-12-ubuntu-1404 Sku:sec1032-secured-mongodb-v2-6-12-ubuntu-1404 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-sec1033-secured-piwik-on-ubuntu-1404
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'sec1033-secured-piwik-on-ubuntu-1404',
	[string]$Skus = 'sec1033-secured-piwik-on-ubuntu-1404',
	[string]$version =  'latest',
	[string]$Product = 'sec1033-secured-piwik-on-ubuntu-1404',
	[string]$name = 'sec1033-secured-piwik-on-ubuntu-1404'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | sec1033-secured-piwik-on-ubuntu-1404"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:sec1033-secured-piwik-on-ubuntu-1404 Sku:sec1033-secured-piwik-on-ubuntu-1404 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-piwik-on-ubuntu-pro-lic
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'sec1033-secured-piwik-on-ubuntu-1404',
	[string]$Skus = 'secured-piwik-on-ubuntu-pro-lic',
	[string]$version =  'latest',
	[string]$Product = 'sec1033-secured-piwik-on-ubuntu-1404',
	[string]$name = 'secured-piwik-on-ubuntu-pro-lic'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-piwik-on-ubuntu-pro-lic"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:sec1033-secured-piwik-on-ubuntu-1404 Sku:secured-piwik-on-ubuntu-pro-lic Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-sec1034-secured-pligg-on-ubuntu-1404
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'sec1034-secured-pligg-on-ubuntu-1404',
	[string]$Skus = 'sec1034-secured-pligg-on-ubuntu-1404',
	[string]$version =  'latest',
	[string]$Product = 'sec1034-secured-pligg-on-ubuntu-1404',
	[string]$name = 'sec1034-secured-pligg-on-ubuntu-1404'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | sec1034-secured-pligg-on-ubuntu-1404"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:sec1034-secured-pligg-on-ubuntu-1404 Sku:sec1034-secured-pligg-on-ubuntu-1404 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-sec1035-secured-jenkins-on-ubuntu-1404
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'sec1035-secured-jenkins-on-ubuntu-1404',
	[string]$Skus = 'sec1035-secured-jenkins-on-ubuntu-1404',
	[string]$version =  'latest',
	[string]$Product = 'sec1035-secured-jenkins-on-ubuntu-1404',
	[string]$name = 'sec1035-secured-jenkins-on-ubuntu-1404'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | sec1035-secured-jenkins-on-ubuntu-1404"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:sec1035-secured-jenkins-on-ubuntu-1404 Sku:sec1035-secured-jenkins-on-ubuntu-1404 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-jenkins-on-ubuntu-pro-lic
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'sec1035-secured-jenkins-on-ubuntu-1404',
	[string]$Skus = 'secured-jenkins-on-ubuntu-pro-lic',
	[string]$version =  'latest',
	[string]$Product = 'sec1035-secured-jenkins-on-ubuntu-1404',
	[string]$name = 'secured-jenkins-on-ubuntu-pro-lic'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-jenkins-on-ubuntu-pro-lic"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:sec1035-secured-jenkins-on-ubuntu-1404 Sku:secured-jenkins-on-ubuntu-pro-lic Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-sec1036-secured-postgresql-on-ubuntu-1404
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'sec1036-secured-postgresql-on-ubuntu-1404',
	[string]$Skus = 'sec1036-secured-postgresql-on-ubuntu-1404',
	[string]$version =  'latest',
	[string]$Product = 'sec1036-secured-postgresql-on-ubuntu-1404',
	[string]$name = 'sec1036-secured-postgresql-on-ubuntu-1404'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | sec1036-secured-postgresql-on-ubuntu-1404"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:sec1036-secured-postgresql-on-ubuntu-1404 Sku:sec1036-secured-postgresql-on-ubuntu-1404 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-cogsecure-lamp-ubu-1404
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secure-cloud-lamp-ubuntu-1404',
	[string]$Skus = 'cogsecure-lamp-ubu-1404',
	[string]$version =  'latest',
	[string]$Product = 'secure-cloud-lamp-ubuntu-1404',
	[string]$name = 'cogsecure-lamp-ubu-1404'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | cogsecure-lamp-ubu-1404"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secure-cloud-lamp-ubuntu-1404 Sku:cogsecure-lamp-ubu-1404 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-lamp-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secure-cloud-lamp-ubuntu-1404',
	[string]$Skus = 'secured-lamp-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secure-cloud-lamp-ubuntu-1404',
	[string]$name = 'secured-lamp-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-lamp-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secure-cloud-lamp-ubuntu-1404 Sku:secured-lamp-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-lamp-on-ubuntu-pro-lic
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secure-cloud-lamp-ubuntu-1404',
	[string]$Skus = 'secured-lamp-on-ubuntu-pro-lic',
	[string]$version =  'latest',
	[string]$Product = 'secure-cloud-lamp-ubuntu-1404',
	[string]$name = 'secured-lamp-on-ubuntu-pro-lic'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-lamp-on-ubuntu-pro-lic"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secure-cloud-lamp-ubuntu-1404 Sku:secured-lamp-on-ubuntu-pro-lic Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-abantecart-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-abantecart-on-centos',
	[string]$Skus = 'secured-abantecart-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-abantecart-on-centos',
	[string]$name = 'secured-abantecart-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-abantecart-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-abantecart-on-centos Sku:secured-abantecart-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-abantecart-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-abantecart-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-abantecart-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-abantecart-on-ubuntu-14-04-lts',
	[string]$name = 'secured-abantecart-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-abantecart-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-abantecart-on-ubuntu-14-04-lts Sku:secured-abantecart-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-acquia-drupal-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-acquia-drupal-on-centos',
	[string]$Skus = 'secured-acquia-drupal-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-acquia-drupal-on-centos',
	[string]$name = 'secured-acquia-drupal-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-acquia-drupal-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-acquia-drupal-on-centos Sku:secured-acquia-drupal-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-acquiadurpal-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-acquiadurpal-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-acquiadurpal-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-acquiadurpal-on-ubuntu-14-04-lts',
	[string]$name = 'secured-acquiadurpal-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-acquiadurpal-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-acquiadurpal-on-ubuntu-14-04-lts Sku:secured-acquiadurpal-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-apachesolr-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-apachesolr-on-centos',
	[string]$Skus = 'secured-apachesolr-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-apachesolr-on-centos',
	[string]$name = 'secured-apachesolr-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-apachesolr-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-apachesolr-on-centos Sku:secured-apachesolr-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-apachesolr-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-apachesolr-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-apachesolr-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-apachesolr-on-ubuntu-14-04-lts',
	[string]$name = 'secured-apachesolr-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-apachesolr-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-apachesolr-on-ubuntu-14-04-lts Sku:secured-apachesolr-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-arartifactory-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-arartifactory-on-centos',
	[string]$Skus = 'secured-arartifactory-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-arartifactory-on-centos',
	[string]$name = 'secured-arartifactory-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-arartifactory-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-arartifactory-on-centos Sku:secured-arartifactory-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-artifactory-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-artifactory-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-artifactory-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-artifactory-on-ubuntu-14-04-lts',
	[string]$name = 'secured-artifactory-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-artifactory-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-artifactory-on-ubuntu-14-04-lts Sku:secured-artifactory-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-cakephp-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-cakephp-on-centos',
	[string]$Skus = 'secured-cakephp-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-cakephp-on-centos',
	[string]$name = 'secured-cakephp-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-cakephp-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-cakephp-on-centos Sku:secured-cakephp-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-cakephp-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-cakephp-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-cakephp-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-cakephp-on-ubuntu-14-04-lts',
	[string]$name = 'secured-cakephp-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-cakephp-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-cakephp-on-ubuntu-14-04-lts Sku:secured-cakephp-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-cloud-neo4j-ubuntu1404lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-cloud-neo4-nosql',
	[string]$Skus = 'secured-cloud-neo4j-ubuntu1404lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-cloud-neo4-nosql',
	[string]$name = 'secured-cloud-neo4j-ubuntu1404lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-cloud-neo4j-ubuntu1404lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-cloud-neo4-nosql Sku:secured-cloud-neo4j-ubuntu1404lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-cms-made-simple-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-cms-made-simple-on-centos',
	[string]$Skus = 'secured-cms-made-simple-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-cms-made-simple-on-centos',
	[string]$name = 'secured-cms-made-simple-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-cms-made-simple-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-cms-made-simple-on-centos Sku:secured-cms-made-simple-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-cms-made-simple-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-cms-made-simple-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-cms-made-simple-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-cms-made-simple-on-ubuntu-14-04-lts',
	[string]$name = 'secured-cms-made-simple-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-cms-made-simple-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-cms-made-simple-on-ubuntu-14-04-lts Sku:secured-cms-made-simple-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-codiad-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-codiad-on-centos',
	[string]$Skus = 'secured-codiad-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-codiad-on-centos',
	[string]$name = 'secured-codiad-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-codiad-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-codiad-on-centos Sku:secured-codiad-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-codiad-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-codiad-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-codiad-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-codiad-on-ubuntu-14-04-lts',
	[string]$name = 'secured-codiad-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-codiad-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-codiad-on-ubuntu-14-04-lts Sku:secured-codiad-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-concrete5-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-concrete5-on-centos',
	[string]$Skus = 'secured-concrete5-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-concrete5-on-centos',
	[string]$name = 'secured-concrete5-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-concrete5-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-concrete5-on-centos Sku:secured-concrete5-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-concrete5-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-concrete5-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-concrete5-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-concrete5-on-ubuntu-14-04-lts',
	[string]$name = 'secured-concrete5-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-concrete5-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-concrete5-on-ubuntu-14-04-lts Sku:secured-concrete5-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-coppermine-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-coppermine-on-centos',
	[string]$Skus = 'secured-coppermine-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-coppermine-on-centos',
	[string]$name = 'secured-coppermine-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-coppermine-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-coppermine-on-centos Sku:secured-coppermine-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-coppermine-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-coppermine-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-coppermine-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-coppermine-on-ubuntu-14-04-lts',
	[string]$name = 'secured-coppermine-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-coppermine-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-coppermine-on-ubuntu-14-04-lts Sku:secured-coppermine-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-sec1006-secured-couch-base-dev-server-ubuntu-1404
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-couchbase-server-development-ubuntu-1404',
	[string]$Skus = 'sec1006-secured-couch-base-dev-server-ubuntu-1404',
	[string]$version =  'latest',
	[string]$Product = 'secured-couchbase-server-development-ubuntu-1404',
	[string]$name = 'sec1006-secured-couch-base-dev-server-ubuntu-1404'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | sec1006-secured-couch-base-dev-server-ubuntu-1404"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-couchbase-server-development-ubuntu-1404 Sku:sec1006-secured-couch-base-dev-server-ubuntu-1404 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-couchbase-server-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-couchbase-server-on-centos',
	[string]$Skus = 'secured-couchbase-server-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-couchbase-server-on-centos',
	[string]$name = 'secured-couchbase-server-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-couchbase-server-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-couchbase-server-on-centos Sku:secured-couchbase-server-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-enterprise-unlimited-e1-crushftp-azure-cognosys
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-crushftp-on-centos',
	[string]$Skus = 'enterprise-unlimited-e1-crushftp-azure-cognosys',
	[string]$version =  'latest',
	[string]$Product = 'secured-crushftp-on-centos',
	[string]$name = 'enterprise-unlimited-e1-crushftp-azure-cognosys'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | enterprise-unlimited-e1-crushftp-azure-cognosys"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-crushftp-on-centos Sku:enterprise-unlimited-e1-crushftp-azure-cognosys Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-home-lic-10-user-crushftp-azure-cognosys
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-crushftp-on-centos',
	[string]$Skus = 'home-lic-10-user-crushftp-azure-cognosys',
	[string]$version =  'latest',
	[string]$Product = 'secured-crushftp-on-centos',
	[string]$name = 'home-lic-10-user-crushftp-azure-cognosys'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | home-lic-10-user-crushftp-azure-cognosys"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-crushftp-on-centos Sku:home-lic-10-user-crushftp-azure-cognosys Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-professional-nolimit-concurent-crushftp-azure
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-crushftp-on-centos',
	[string]$Skus = 'professional-nolimit-concurent-crushftp-azure',
	[string]$version =  'latest',
	[string]$Product = 'secured-crushftp-on-centos',
	[string]$name = 'professional-nolimit-concurent-crushftp-azure'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | professional-nolimit-concurent-crushftp-azure"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-crushftp-on-centos Sku:professional-nolimit-concurent-crushftp-azure Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-crushftp-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-crushftp-on-centos',
	[string]$Skus = 'secured-crushftp-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-crushftp-on-centos',
	[string]$name = 'secured-crushftp-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-crushftp-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-crushftp-on-centos Sku:secured-crushftp-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-enterprise-unlimited-e1-crushftp-azure-cognosys
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-crushftp-on-ubuntu-14-04-lts',
	[string]$Skus = 'enterprise-unlimited-e1-crushftp-azure-cognosys',
	[string]$version =  'latest',
	[string]$Product = 'secured-crushftp-on-ubuntu-14-04-lts',
	[string]$name = 'enterprise-unlimited-e1-crushftp-azure-cognosys'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | enterprise-unlimited-e1-crushftp-azure-cognosys"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-crushftp-on-ubuntu-14-04-lts Sku:enterprise-unlimited-e1-crushftp-azure-cognosys Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-home-lic-10-user-crush-ftp-azure-cognosys
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-crushftp-on-ubuntu-14-04-lts',
	[string]$Skus = 'home-lic-10-user-crush-ftp-azure-cognosys',
	[string]$version =  'latest',
	[string]$Product = 'secured-crushftp-on-ubuntu-14-04-lts',
	[string]$name = 'home-lic-10-user-crush-ftp-azure-cognosys'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | home-lic-10-user-crush-ftp-azure-cognosys"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-crushftp-on-ubuntu-14-04-lts Sku:home-lic-10-user-crush-ftp-azure-cognosys Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-professional-nolimit-concurent-crushftp-azure
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-crushftp-on-ubuntu-14-04-lts',
	[string]$Skus = 'professional-nolimit-concurent-crushftp-azure',
	[string]$version =  'latest',
	[string]$Product = 'secured-crushftp-on-ubuntu-14-04-lts',
	[string]$name = 'professional-nolimit-concurent-crushftp-azure'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | professional-nolimit-concurent-crushftp-azure"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-crushftp-on-ubuntu-14-04-lts Sku:professional-nolimit-concurent-crushftp-azure Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-crushftp-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-crushftp-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-crushftp-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-crushftp-on-ubuntu-14-04-lts',
	[string]$name = 'secured-crushftp-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-crushftp-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-crushftp-on-ubuntu-14-04-lts Sku:secured-crushftp-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-digital-asset-management-on-wind-2012-r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-digital-asset-management-on-wind-2012-r2',
	[string]$Skus = 'secured-digital-asset-management-on-wind-2012-r2',
	[string]$version =  'latest',
	[string]$Product = 'secured-digital-asset-management-on-wind-2012-r2',
	[string]$name = 'secured-digital-asset-management-on-wind-2012-r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-digital-asset-management-on-wind-2012-r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-digital-asset-management-on-wind-2012-r2 Sku:secured-digital-asset-management-on-wind-2012-r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-django-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-django-on-centos',
	[string]$Skus = 'secured-django-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-django-on-centos',
	[string]$name = 'secured-django-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-django-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-django-on-centos Sku:secured-django-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-django-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-django-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-django-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-django-on-ubuntu-14-04-lts',
	[string]$name = 'secured-django-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-django-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-django-on-ubuntu-14-04-lts Sku:secured-django-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-dokuwiki-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-dokuwiki-on-centos',
	[string]$Skus = 'secured-dokuwiki-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-dokuwiki-on-centos',
	[string]$name = 'secured-dokuwiki-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-dokuwiki-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-dokuwiki-on-centos Sku:secured-dokuwiki-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-dolibarr-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-dolibarr-on-centos',
	[string]$Skus = 'secured-dolibarr-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-dolibarr-on-centos',
	[string]$name = 'secured-dolibarr-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-dolibarr-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-dolibarr-on-centos Sku:secured-dolibarr-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-dolivbarr-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-dolivbarr-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-dolivbarr-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-dolivbarr-on-ubuntu-14-04-lts',
	[string]$name = 'secured-dolivbarr-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-dolivbarr-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-dolivbarr-on-ubuntu-14-04-lts Sku:secured-dolivbarr-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-drupal-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-drupal-on-centos',
	[string]$Skus = 'secured-drupal-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-drupal-on-centos',
	[string]$name = 'secured-drupal-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-drupal-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-drupal-on-centos Sku:secured-drupal-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-e-commerce-market-store-on-win-2012-r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-e-commerce-market-store-on-win-2012-r2',
	[string]$Skus = 'secured-e-commerce-market-store-on-win-2012-r2',
	[string]$version =  'latest',
	[string]$Product = 'secured-e-commerce-market-store-on-win-2012-r2',
	[string]$name = 'secured-e-commerce-market-store-on-win-2012-r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-e-commerce-market-store-on-win-2012-r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-e-commerce-market-store-on-win-2012-r2 Sku:secured-e-commerce-market-store-on-win-2012-r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-elasticsearch-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-elasticsearch-on-centos',
	[string]$Skus = 'secured-elasticsearch-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-elasticsearch-on-centos',
	[string]$name = 'secured-elasticsearch-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-elasticsearch-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-elasticsearch-on-centos Sku:secured-elasticsearch-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-enterprise-nginx-varnish-haproxy-php
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-enterprise-nginx-varnish-haproxy-php',
	[string]$Skus = 'secured-enterprise-nginx-varnish-haproxy-php',
	[string]$version =  'latest',
	[string]$Product = 'secured-enterprise-nginx-varnish-haproxy-php',
	[string]$name = 'secured-enterprise-nginx-varnish-haproxy-php'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-enterprise-nginx-varnish-haproxy-php"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-enterprise-nginx-varnish-haproxy-php Sku:secured-enterprise-nginx-varnish-haproxy-php Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-espocrm-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-espocrm-on-centos',
	[string]$Skus = 'secured-espocrm-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-espocrm-on-centos',
	[string]$name = 'secured-espocrm-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-espocrm-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-espocrm-on-centos Sku:secured-espocrm-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-espocrm-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-espocrm-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-espocrm-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-espocrm-on-ubuntu-14-04-lts',
	[string]$name = 'secured-espocrm-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-espocrm-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-espocrm-on-ubuntu-14-04-lts Sku:secured-espocrm-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-exoplatform-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-exoplatform-on-centos',
	[string]$Skus = 'secured-exoplatform-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-exoplatform-on-centos',
	[string]$name = 'secured-exoplatform-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-exoplatform-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-exoplatform-on-centos Sku:secured-exoplatform-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-exoplatform-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-exoplatform-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-exoplatform-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-exoplatform-on-ubuntu-14-04-lts',
	[string]$name = 'secured-exoplatform-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-exoplatform-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-exoplatform-on-ubuntu-14-04-lts Sku:secured-exoplatform-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-ghost-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-ghost-on-centos',
	[string]$Skus = 'secured-ghost-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-ghost-on-centos',
	[string]$name = 'secured-ghost-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-ghost-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-ghost-on-centos Sku:secured-ghost-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-ghost-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-ghost-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-ghost-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-ghost-on-ubuntu-14-04-lts',
	[string]$name = 'secured-ghost-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-ghost-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-ghost-on-ubuntu-14-04-lts Sku:secured-ghost-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-gradle-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-gradle-on-centos',
	[string]$Skus = 'secured-gradle-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-gradle-on-centos',
	[string]$name = 'secured-gradle-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-gradle-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-gradle-on-centos Sku:secured-gradle-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-gradle-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-gradle-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-gradle-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-gradle-on-ubuntu-14-04-lts',
	[string]$name = 'secured-gradle-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-gradle-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-gradle-on-ubuntu-14-04-lts Sku:secured-gradle-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-haproxy-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-haproxy-on-centos',
	[string]$Skus = 'secured-haproxy-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-haproxy-on-centos',
	[string]$name = 'secured-haproxy-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-haproxy-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-haproxy-on-centos Sku:secured-haproxy-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-help-desk-support-system-on-win-2012-r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-help-desk-support-system-on-win-2012-r2',
	[string]$Skus = 'secured-help-desk-support-system-on-win-2012-r2',
	[string]$version =  'latest',
	[string]$Product = 'secured-help-desk-support-system-on-win-2012-r2',
	[string]$name = 'secured-help-desk-support-system-on-win-2012-r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-help-desk-support-system-on-win-2012-r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-help-desk-support-system-on-win-2012-r2 Sku:secured-help-desk-support-system-on-win-2012-r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-invoice-ninja-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-invoice-ninja-on-centos',
	[string]$Skus = 'secured-invoice-ninja-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-invoice-ninja-on-centos',
	[string]$name = 'secured-invoice-ninja-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-invoice-ninja-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-invoice-ninja-on-centos Sku:secured-invoice-ninja-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-jboss-as-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-jboss-as-on-centos',
	[string]$Skus = 'secured-jboss-as-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-jboss-as-on-centos',
	[string]$name = 'secured-jboss-as-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-jboss-as-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-jboss-as-on-centos Sku:secured-jboss-as-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-jbossas-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-jbossas-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-jbossas-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-jbossas-on-ubuntu-14-04-lts',
	[string]$name = 'secured-jbossas-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-jbossas-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-jbossas-on-ubuntu-14-04-lts Sku:secured-jbossas-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-jenkins-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-jenkins-on-centos',
	[string]$Skus = 'secured-jenkins-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-jenkins-on-centos',
	[string]$name = 'secured-jenkins-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-jenkins-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-jenkins-on-centos Sku:secured-jenkins-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-jruby-on-cento
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-jruby-on-cento',
	[string]$Skus = 'secured-jruby-on-cento',
	[string]$version =  'latest',
	[string]$Product = 'secured-jruby-on-cento',
	[string]$name = 'secured-jruby-on-cento'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-jruby-on-cento"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-jruby-on-cento Sku:secured-jruby-on-cento Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-lamp-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-lamp-on-centos',
	[string]$Skus = 'secured-lamp-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-lamp-on-centos',
	[string]$name = 'secured-lamp-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-lamp-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-lamp-on-centos Sku:secured-lamp-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-lapp-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-lapp-on-centos',
	[string]$Skus = 'secured-lapp-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-lapp-on-centos',
	[string]$name = 'secured-lapp-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-lapp-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-lapp-on-centos Sku:secured-lapp-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-lapp-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-lapp-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-lapp-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-lapp-on-ubuntu-14-04-lts',
	[string]$name = 'secured-lapp-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-lapp-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-lapp-on-ubuntu-14-04-lts Sku:secured-lapp-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-learning-management-system-on-windows-2012
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-learning-management-system-on-windows-2012',
	[string]$Skus = 'secured-learning-management-system-on-windows-2012',
	[string]$version =  'latest',
	[string]$Product = 'secured-learning-management-system-on-windows-2012',
	[string]$name = 'secured-learning-management-system-on-windows-2012'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-learning-management-system-on-windows-2012"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-learning-management-system-on-windows-2012 Sku:secured-learning-management-system-on-windows-2012 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-lime-survey-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-lime-survey-on-centos',
	[string]$Skus = 'secured-lime-survey-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-lime-survey-on-centos',
	[string]$name = 'secured-lime-survey-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-lime-survey-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-lime-survey-on-centos Sku:secured-lime-survey-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-sec1017-limesurvey-on-ubuntu-1404
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-limesurvey-on-ubuntu-1404',
	[string]$Skus = 'sec1017-limesurvey-on-ubuntu-1404',
	[string]$version =  'latest',
	[string]$Product = 'secured-limesurvey-on-ubuntu-1404',
	[string]$name = 'sec1017-limesurvey-on-ubuntu-1404'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | sec1017-limesurvey-on-ubuntu-1404"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-limesurvey-on-ubuntu-1404 Sku:sec1017-limesurvey-on-ubuntu-1404 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-sugarcrm-on-ubuntu-pro-lic
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-limesurvey-on-ubuntu-1404',
	[string]$Skus = 'secured-sugarcrm-on-ubuntu-pro-lic',
	[string]$version =  'latest',
	[string]$Product = 'secured-limesurvey-on-ubuntu-1404',
	[string]$name = 'secured-sugarcrm-on-ubuntu-pro-lic'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-sugarcrm-on-ubuntu-pro-lic"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-limesurvey-on-ubuntu-1404 Sku:secured-sugarcrm-on-ubuntu-pro-lic Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-live-helper-chat-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-live-helper-chat-on-centos',
	[string]$Skus = 'secured-live-helper-chat-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-live-helper-chat-on-centos',
	[string]$name = 'secured-live-helper-chat-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-live-helper-chat-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-live-helper-chat-on-centos Sku:secured-live-helper-chat-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-livehelperchat-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-livehelperchat-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-livehelperchat-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-livehelperchat-on-ubuntu-14-04-lts',
	[string]$name = 'secured-livehelperchat-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-livehelperchat-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-livehelperchat-on-ubuntu-14-04-lts Sku:secured-livehelperchat-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-magento-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-magento-on-centos',
	[string]$Skus = 'secured-magento-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-magento-on-centos',
	[string]$name = 'secured-magento-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-magento-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-magento-on-centos Sku:secured-magento-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-mahara-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-mahara-on-centos',
	[string]$Skus = 'secured-mahara-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-mahara-on-centos',
	[string]$name = 'secured-mahara-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-mahara-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-mahara-on-centos Sku:secured-mahara-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-mahara-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-mahara-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-mahara-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-mahara-on-ubuntu-14-04-lts',
	[string]$name = 'secured-mahara-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-mahara-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-mahara-on-ubuntu-14-04-lts Sku:secured-mahara-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-mantis-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-mantis-on-centos',
	[string]$Skus = 'secured-mantis-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-mantis-on-centos',
	[string]$name = 'secured-mantis-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-mantis-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-mantis-on-centos Sku:secured-mantis-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-mantis-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-mantis-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-mantis-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-mantis-on-ubuntu-14-04-lts',
	[string]$name = 'secured-mantis-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-mantis-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-mantis-on-ubuntu-14-04-lts Sku:secured-mantis-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-mautic-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-mautic-on-centos',
	[string]$Skus = 'secured-mautic-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-mautic-on-centos',
	[string]$name = 'secured-mautic-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-mautic-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-mautic-on-centos Sku:secured-mautic-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-mautic-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-mautic-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-mautic-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-mautic-on-ubuntu-14-04-lts',
	[string]$name = 'secured-mautic-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-mautic-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-mautic-on-ubuntu-14-04-lts Sku:secured-mautic-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-media-wiki-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-media-wiki-on-centos',
	[string]$Skus = 'secured-media-wiki-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-media-wiki-on-centos',
	[string]$name = 'secured-media-wiki-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-media-wiki-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-media-wiki-on-centos Sku:secured-media-wiki-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-modx-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-modx-on-centos',
	[string]$Skus = 'secured-modx-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-modx-on-centos',
	[string]$name = 'secured-modx-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-modx-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-modx-on-centos Sku:secured-modx-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-mongodb-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-mongodb-on-centos',
	[string]$Skus = 'secured-mongodb-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-mongodb-on-centos',
	[string]$name = 'secured-mongodb-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-mongodb-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-mongodb-on-centos Sku:secured-mongodb-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-moodle-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-moodle-on-centos',
	[string]$Skus = 'secured-moodle-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-moodle-on-centos',
	[string]$name = 'secured-moodle-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-moodle-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-moodle-on-centos Sku:secured-moodle-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-nginx-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-nginx-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-nginx-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-nginx-on-ubuntu-14-04-lts',
	[string]$name = 'secured-nginx-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-nginx-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-nginx-on-ubuntu-14-04-lts Sku:secured-nginx-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-ngnix-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-ngnix-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-ngnix-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-ngnix-on-ubuntu-14-04-lts',
	[string]$name = 'secured-ngnix-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-ngnix-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-ngnix-on-ubuntu-14-04-lts Sku:secured-ngnix-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-noalyss-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-noalyss-on-centos',
	[string]$Skus = 'secured-noalyss-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-noalyss-on-centos',
	[string]$name = 'secured-noalyss-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-noalyss-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-noalyss-on-centos Sku:secured-noalyss-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-noalyss-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-noalyss-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-noalyss-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-noalyss-on-ubuntu-14-04-lts',
	[string]$name = 'secured-noalyss-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-noalyss-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-noalyss-on-ubuntu-14-04-lts Sku:secured-noalyss-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-nodejs-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-nodejs-on-centos',
	[string]$Skus = 'secured-nodejs-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-nodejs-on-centos',
	[string]$name = 'secured-nodejs-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-nodejs-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-nodejs-on-centos Sku:secured-nodejs-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-occlass-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-occlass-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-occlass-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-occlass-on-ubuntu-14-04-lts',
	[string]$name = 'secured-occlass-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-occlass-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-occlass-on-ubuntu-14-04-lts Sku:secured-occlass-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-ocportal-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-ocportal-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-ocportal-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-ocportal-on-ubuntu-14-04-lts',
	[string]$name = 'secured-ocportal-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-ocportal-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-ocportal-on-ubuntu-14-04-lts Sku:secured-ocportal-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-open-cart-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-open-cart-on-centos',
	[string]$Skus = 'secured-open-cart-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-open-cart-on-centos',
	[string]$name = 'secured-open-cart-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-open-cart-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-open-cart-on-centos Sku:secured-open-cart-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-orangehrm-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-orangehrm-on-centos',
	[string]$Skus = 'secured-orangehrm-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-orangehrm-on-centos',
	[string]$name = 'secured-orangehrm-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-orangehrm-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-orangehrm-on-centos Sku:secured-orangehrm-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-osclass-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-osclass-on-centos',
	[string]$Skus = 'secured-osclass-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-osclass-on-centos',
	[string]$name = 'secured-osclass-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-osclass-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-osclass-on-centos Sku:secured-osclass-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-owncloud-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-owncloud-on-centos',
	[string]$Skus = 'secured-owncloud-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-owncloud-on-centos',
	[string]$name = 'secured-owncloud-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-owncloud-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-owncloud-on-centos Sku:secured-owncloud-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-oxid-eshop-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-oxid-eshop-on-centos',
	[string]$Skus = 'secured-oxid-eshop-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-oxid-eshop-on-centos',
	[string]$name = 'secured-oxid-eshop-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-oxid-eshop-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-oxid-eshop-on-centos Sku:secured-oxid-eshop-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-oxideshop-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-oxideshop-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-oxideshop-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-oxideshop-on-ubuntu-14-04-lts',
	[string]$name = 'secured-oxideshop-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-oxideshop-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-oxideshop-on-ubuntu-14-04-lts Sku:secured-oxideshop-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-passenger-nginx-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-passenger-nginx-on-centos',
	[string]$Skus = 'secured-passenger-nginx-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-passenger-nginx-on-centos',
	[string]$name = 'secured-passenger-nginx-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-passenger-nginx-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-passenger-nginx-on-centos Sku:secured-passenger-nginx-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-piwigo-gallery-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-piwigo-gallery-on-centos',
	[string]$Skus = 'secured-piwigo-gallery-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-piwigo-gallery-on-centos',
	[string]$name = 'secured-piwigo-gallery-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-piwigo-gallery-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-piwigo-gallery-on-centos Sku:secured-piwigo-gallery-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-plone-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-plone-on-centos',
	[string]$Skus = 'secured-plone-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-plone-on-centos',
	[string]$name = 'secured-plone-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-plone-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-plone-on-centos Sku:secured-plone-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-plone-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-plone-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-plone-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-plone-on-ubuntu-14-04-lts',
	[string]$name = 'secured-plone-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-plone-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-plone-on-ubuntu-14-04-lts Sku:secured-plone-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-prestashop-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-prestashop-on-centos',
	[string]$Skus = 'secured-prestashop-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-prestashop-on-centos',
	[string]$name = 'secured-prestashop-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-prestashop-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-prestashop-on-centos Sku:secured-prestashop-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-prestashop-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-prestashop-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-prestashop-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-prestashop-on-ubuntu-14-04-lts',
	[string]$name = 'secured-prestashop-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-prestashop-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-prestashop-on-ubuntu-14-04-lts Sku:secured-prestashop-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-question-and-answer-support-forum-on-win
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-question-and-answe-support-forum-win',
	[string]$Skus = 'secured-question-and-answer-support-forum-on-win',
	[string]$version =  'latest',
	[string]$Product = 'secured-question-and-answe-support-forum-win',
	[string]$name = 'secured-question-and-answer-support-forum-on-win'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-question-and-answer-support-forum-on-win"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-question-and-answe-support-forum-win Sku:secured-question-and-answer-support-forum-on-win Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-railo-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-railo-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-railo-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-railo-on-ubuntu-14-04-lts',
	[string]$name = 'secured-railo-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-railo-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-railo-on-ubuntu-14-04-lts Sku:secured-railo-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-redis-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-redis-on-centos',
	[string]$Skus = 'secured-redis-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-redis-on-centos',
	[string]$name = 'secured-redis-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-redis-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-redis-on-centos Sku:secured-redis-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-sec1008-redis-on-hardened-ubuntu-1404
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-redis-on-ubuntu-1404',
	[string]$Skus = 'sec1008-redis-on-hardened-ubuntu-1404',
	[string]$version =  'latest',
	[string]$Product = 'secured-redis-on-ubuntu-1404',
	[string]$name = 'sec1008-redis-on-hardened-ubuntu-1404'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | sec1008-redis-on-hardened-ubuntu-1404"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-redis-on-ubuntu-1404 Sku:sec1008-redis-on-hardened-ubuntu-1404 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-redmine-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-redmine-on-centos',
	[string]$Skus = 'secured-redmine-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-redmine-on-centos',
	[string]$name = 'secured-redmine-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-redmine-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-redmine-on-centos Sku:secured-redmine-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-redmine-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-redmine-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-redmine-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-redmine-on-ubuntu-14-04-lts',
	[string]$name = 'secured-redmine-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-redmine-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-redmine-on-ubuntu-14-04-lts Sku:secured-redmine-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-redmineagile-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-redmineagile-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-redmineagile-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-redmineagile-on-ubuntu-14-04-lts',
	[string]$name = 'secured-redmineagile-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-redmineagile-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-redmineagile-on-ubuntu-14-04-lts Sku:secured-redmineagile-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-report-server-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-report-server-on-centos',
	[string]$Skus = 'secured-report-server-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-report-server-on-centos',
	[string]$name = 'secured-report-server-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-report-server-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-report-server-on-centos Sku:secured-report-server-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-reportserver-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-reportserver-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-reportserver-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-reportserver-on-ubuntu-14-04-lts',
	[string]$name = 'secured-reportserver-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-reportserver-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-reportserver-on-ubuntu-14-04-lts Sku:secured-reportserver-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-reportserverent-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-reportserverent-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-reportserverent-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-reportserverent-on-ubuntu-14-04-lts',
	[string]$name = 'secured-reportserverent-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-reportserverent-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-reportserverent-on-ubuntu-14-04-lts Sku:secured-reportserverent-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-resource-space-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-resource-space-on-centos',
	[string]$Skus = 'secured-resource-space-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-resource-space-on-centos',
	[string]$name = 'secured-resource-space-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-resource-space-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-resource-space-on-centos Sku:secured-resource-space-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-resourcespace-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-resourcespace-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-resourcespace-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-resourcespace-on-ubuntu-14-04-lts',
	[string]$name = 'secured-resourcespace-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-resourcespace-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-resourcespace-on-ubuntu-14-04-lts Sku:secured-resourcespace-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-round-cube-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-round-cube-on-centos',
	[string]$Skus = 'secured-round-cube-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-round-cube-on-centos',
	[string]$name = 'secured-round-cube-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-round-cube-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-round-cube-on-centos Sku:secured-round-cube-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-roundcube-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-roundcube-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-roundcube-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-roundcube-on-ubuntu-14-04-lts',
	[string]$name = 'secured-roundcube-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-roundcube-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-roundcube-on-ubuntu-14-04-lts Sku:secured-roundcube-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-ruby-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-ruby-on-centos',
	[string]$Skus = 'secured-ruby-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-ruby-on-centos',
	[string]$name = 'secured-ruby-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-ruby-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-ruby-on-centos Sku:secured-ruby-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-ruby-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-ruby-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-ruby-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-ruby-on-ubuntu-14-04-lts',
	[string]$name = 'secured-ruby-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-ruby-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-ruby-on-ubuntu-14-04-lts Sku:secured-ruby-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-seopanel-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-seopanel-on-centos',
	[string]$Skus = 'secured-seopanel-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-seopanel-on-centos',
	[string]$name = 'secured-seopanel-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-seopanel-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-seopanel-on-centos Sku:secured-seopanel-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-seopanel-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-seopanel-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-seopanel-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-seopanel-on-ubuntu-14-04-lts',
	[string]$name = 'secured-seopanel-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-seopanel-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-seopanel-on-ubuntu-14-04-lts Sku:secured-seopanel-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-silverstripe-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-silverstripe-on-centos',
	[string]$Skus = 'secured-silverstripe-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-silverstripe-on-centos',
	[string]$name = 'secured-silverstripe-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-silverstripe-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-silverstripe-on-centos Sku:secured-silverstripe-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-simple-invoice-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-simple-invoice-on-centos',
	[string]$Skus = 'secured-simple-invoice-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-simple-invoice-on-centos',
	[string]$name = 'secured-simple-invoice-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-simple-invoice-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-simple-invoice-on-centos Sku:secured-simple-invoice-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-simple-machines-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-simple-machines-on-centos',
	[string]$Skus = 'secured-simple-machines-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-simple-machines-on-centos',
	[string]$name = 'secured-simple-machines-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-simple-machines-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-simple-machines-on-centos Sku:secured-simple-machines-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-simple-machines-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-simple-machines-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-simple-machines-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-simple-machines-on-ubuntu-14-04-lts',
	[string]$name = 'secured-simple-machines-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-simple-machines-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-simple-machines-on-ubuntu-14-04-lts Sku:secured-simple-machines-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-simpleinvoice-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-simpleinvoice-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-simpleinvoice-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-simpleinvoice-on-ubuntu-14-04-lts',
	[string]$name = 'secured-simpleinvoice-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-simpleinvoice-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-simpleinvoice-on-ubuntu-14-04-lts Sku:secured-simpleinvoice-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-subversion-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-subversion-on-centos',
	[string]$Skus = 'secured-subversion-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-subversion-on-centos',
	[string]$name = 'secured-subversion-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-subversion-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-subversion-on-centos Sku:secured-subversion-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-suitecrm-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-suitecrm-on-centos',
	[string]$Skus = 'secured-suitecrm-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-suitecrm-on-centos',
	[string]$name = 'secured-suitecrm-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-suitecrm-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-suitecrm-on-centos Sku:secured-suitecrm-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-suitecrm-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-suitecrm-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-suitecrm-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-suitecrm-on-ubuntu-14-04-lts',
	[string]$name = 'secured-suitecrm-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-suitecrm-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-suitecrm-on-ubuntu-14-04-lts Sku:secured-suitecrm-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-test-link-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-test-link-on-centos',
	[string]$Skus = 'secured-test-link-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-test-link-on-centos',
	[string]$name = 'secured-test-link-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-test-link-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-test-link-on-centos Sku:secured-test-link-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-testlink-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-testlink-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-testlink-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-testlink-on-ubuntu-14-04-lts',
	[string]$name = 'secured-testlink-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-testlink-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-testlink-on-ubuntu-14-04-lts Sku:secured-testlink-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-thinkup-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-thinkup-on-centos',
	[string]$Skus = 'secured-thinkup-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-thinkup-on-centos',
	[string]$name = 'secured-thinkup-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-thinkup-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-thinkup-on-centos Sku:secured-thinkup-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-thinkup-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-thinkup-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-thinkup-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-thinkup-on-ubuntu-14-04-lts',
	[string]$name = 'secured-thinkup-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-thinkup-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-thinkup-on-ubuntu-14-04-lts Sku:secured-thinkup-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-tikiwikicms-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-tikiwikicms-on-centos',
	[string]$Skus = 'secured-tikiwikicms-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-tikiwikicms-on-centos',
	[string]$name = 'secured-tikiwikicms-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-tikiwikicms-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-tikiwikicms-on-centos Sku:secured-tikiwikicms-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-tikiwikicms-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-tikiwikicms-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-tikiwikicms-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-tikiwikicms-on-ubuntu-14-04-lts',
	[string]$name = 'secured-tikiwikicms-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-tikiwikicms-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-tikiwikicms-on-ubuntu-14-04-lts Sku:secured-tikiwikicms-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-tiny-tiny-rss-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-tiny-tiny-rss-on-centos',
	[string]$Skus = 'secured-tiny-tiny-rss-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-tiny-tiny-rss-on-centos',
	[string]$name = 'secured-tiny-tiny-rss-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-tiny-tiny-rss-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-tiny-tiny-rss-on-centos Sku:secured-tiny-tiny-rss-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-tinytinyrss-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-tinytinyrss-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-tinytinyrss-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-tinytinyrss-on-ubuntu-14-04-lts',
	[string]$name = 'secured-tinytinyrss-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-tinytinyrss-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-tinytinyrss-on-ubuntu-14-04-lts Sku:secured-tinytinyrss-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-tomcat-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-tomcat-on-centos',
	[string]$Skus = 'secured-tomcat-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-tomcat-on-centos',
	[string]$name = 'secured-tomcat-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-tomcat-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-tomcat-on-centos Sku:secured-tomcat-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-trac-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-trac-on-centos',
	[string]$Skus = 'secured-trac-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-trac-on-centos',
	[string]$name = 'secured-trac-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-trac-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-trac-on-centos Sku:secured-trac-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-trac-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-trac-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-trac-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-trac-on-ubuntu-14-04-lts',
	[string]$name = 'secured-trac-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-trac-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-trac-on-ubuntu-14-04-lts Sku:secured-trac-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-typo3-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-typo3-on-centos',
	[string]$Skus = 'secured-typo3-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-typo3-on-centos',
	[string]$name = 'secured-typo3-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-typo3-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-typo3-on-centos Sku:secured-typo3-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-typo3-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-typo3-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-typo3-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-typo3-on-ubuntu-14-04-lts',
	[string]$name = 'secured-typo3-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-typo3-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-typo3-on-ubuntu-14-04-lts Sku:secured-typo3-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-varnish-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-varnish-on-centos',
	[string]$Skus = 'secured-varnish-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-varnish-on-centos',
	[string]$name = 'secured-varnish-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-varnish-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-varnish-on-centos Sku:secured-varnish-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-varnish-on-ubuntu-1404
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-varnish-on-ubuntu-1404',
	[string]$Skus = 'secured-varnish-on-ubuntu-1404',
	[string]$version =  'latest',
	[string]$Product = 'secured-varnish-on-ubuntu-1404',
	[string]$name = 'secured-varnish-on-ubuntu-1404'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-varnish-on-ubuntu-1404"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-varnish-on-ubuntu-1404 Sku:secured-varnish-on-ubuntu-1404 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-wildfly-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-wildfly-on-centos',
	[string]$Skus = 'secured-wildfly-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-wildfly-on-centos',
	[string]$name = 'secured-wildfly-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-wildfly-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-wildfly-on-centos Sku:secured-wildfly-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-wildfly-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-wildfly-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-wildfly-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-wildfly-on-ubuntu-14-04-lts',
	[string]$name = 'secured-wildfly-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-wildfly-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-wildfly-on-ubuntu-14-04-lts Sku:secured-wildfly-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-wordpress-on-ubuntu
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-wordpress-on-centos',
	[string]$Skus = 'secured-wordpress-on-ubuntu',
	[string]$version =  'latest',
	[string]$Product = 'secured-wordpress-on-centos',
	[string]$name = 'secured-wordpress-on-ubuntu'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-wordpress-on-ubuntu"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-wordpress-on-centos Sku:secured-wordpress-on-ubuntu Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-x-cart-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-x-cart-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-x-cart-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-x-cart-on-ubuntu-14-04-lts',
	[string]$name = 'secured-x-cart-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-x-cart-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-x-cart-on-ubuntu-14-04-lts Sku:secured-x-cart-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-xoops-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-xoops-on-centos',
	[string]$Skus = 'secured-xoops-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-xoops-on-centos',
	[string]$name = 'secured-xoops-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-xoops-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-xoops-on-centos Sku:secured-xoops-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-xoops-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-xoops-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-xoops-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-xoops-on-ubuntu-14-04-lts',
	[string]$name = 'secured-xoops-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-xoops-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-xoops-on-ubuntu-14-04-lts Sku:secured-xoops-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-youtrack-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-youtrack-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-youtrack-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-youtrack-on-ubuntu-14-04-lts',
	[string]$name = 'secured-youtrack-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-youtrack-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-youtrack-on-ubuntu-14-04-lts Sku:secured-youtrack-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-zurmo-on-centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-zurmo-on-centos',
	[string]$Skus = 'secured-zurmo-on-centos',
	[string]$version =  'latest',
	[string]$Product = 'secured-zurmo-on-centos',
	[string]$name = 'secured-zurmo-on-centos'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-zurmo-on-centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-zurmo-on-centos Sku:secured-zurmo-on-centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-secured-zurmo-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'secured-zurmo-on-ubuntu-14-04-lts',
	[string]$Skus = 'secured-zurmo-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'secured-zurmo-on-ubuntu-14-04-lts',
	[string]$name = 'secured-zurmo-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | secured-zurmo-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:secured-zurmo-on-ubuntu-14-04-lts Sku:secured-zurmo-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-se-sepportal-iis8-sqlserver2008-win2012-r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'sepportal-iis8-sqlserver2008-win2012-r2',
	[string]$Skus = 'sepportal-iis8-sqlserver2008-win2012-r2',
	[string]$version =  'latest',
	[string]$Product = 'sepportal-iis8-sqlserver2008-win2012-r2',
	[string]$name = 'sepportal-iis8-sqlserver2008-win2012-r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | sepportal-iis8-sqlserver2008-win2012-r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:sepportal-iis8-sqlserver2008-win2012-r2 Sku:sepportal-iis8-sqlserver2008-win2012-r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-sh-shoppingcart-iis8-sqlserver2008-win2012-r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'shoppingcart-iis8-sqlserver2008-win2012-r2',
	[string]$Skus = 'shoppingcart-iis8-sqlserver2008-win2012-r2',
	[string]$version =  'latest',
	[string]$Product = 'shoppingcart-iis8-sqlserver2008-win2012-r2',
	[string]$name = 'shoppingcart-iis8-sqlserver2008-win2012-r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | shoppingcart-iis8-sqlserver2008-win2012-r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:shoppingcart-iis8-sqlserver2008-win2012-r2 Sku:shoppingcart-iis8-sqlserver2008-win2012-r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-si-silverstripecms-iis8-win2012-r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'silverstripecms-iis8-win2012-r2',
	[string]$Skus = 'silverstripecms-iis8-win2012-r2',
	[string]$version =  'latest',
	[string]$Product = 'silverstripecms-iis8-win2012-r2',
	[string]$name = 'silverstripecms-iis8-win2012-r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | silverstripecms-iis8-win2012-r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:silverstripecms-iis8-win2012-r2 Sku:silverstripecms-iis8-win2012-r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-su-sugarcrm-iis8-sql-win2012-r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'sugarcrm-iis8-sql-win2012-r2',
	[string]$Skus = 'sugarcrm-iis8-sql-win2012-r2',
	[string]$version =  'latest',
	[string]$Product = 'sugarcrm-iis8-sql-win2012-r2',
	[string]$name = 'sugarcrm-iis8-sql-win2012-r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | sugarcrm-iis8-sql-win2012-r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:sugarcrm-iis8-sql-win2012-r2 Sku:sugarcrm-iis8-sql-win2012-r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-su-surveyproject-iis8-win2012-r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'surveyproject-iis8-win2012-r2',
	[string]$Skus = 'surveyproject-iis8-win2012-r2',
	[string]$version =  'latest',
	[string]$Product = 'surveyproject-iis8-win2012-r2',
	[string]$name = 'surveyproject-iis8-win2012-r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | surveyproject-iis8-win2012-r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:surveyproject-iis8-win2012-r2 Sku:surveyproject-iis8-win2012-r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-ti-ticket-system-iis8-win2012-r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'ticket-system-iis8-win2012-r2',
	[string]$Skus = 'ticket-system-iis8-win2012-r2',
	[string]$version =  'latest',
	[string]$Product = 'ticket-system-iis8-win2012-r2',
	[string]$name = 'ticket-system-iis8-win2012-r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | ticket-system-iis8-win2012-r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:ticket-system-iis8-win2012-r2 Sku:ticket-system-iis8-win2012-r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-ti-tikiwikicms-iis8-win2012-r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'tikiwikicms-iis8-win2012-r2',
	[string]$Skus = 'tikiwikicms-iis8-win2012-r2',
	[string]$version =  'latest',
	[string]$Product = 'tikiwikicms-iis8-win2012-r2',
	[string]$name = 'tikiwikicms-iis8-win2012-r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | tikiwikicms-iis8-win2012-r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:tikiwikicms-iis8-win2012-r2 Sku:tikiwikicms-iis8-win2012-r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-um-umbracocms-iis8-win2012-r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'umbracocms-iis8-win2012-r2',
	[string]$Skus = 'umbracocms-iis8-win2012-r2',
	[string]$version =  'latest',
	[string]$Product = 'umbracocms-iis8-win2012-r2',
	[string]$name = 'umbracocms-iis8-win2012-r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | umbracocms-iis8-win2012-r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:umbracocms-iis8-win2012-r2 Sku:umbracocms-iis8-win2012-r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-ve-vevocart-iis8-win2012-r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'vevocart-iis8-win2012-r2',
	[string]$Skus = 'vevocart-iis8-win2012-r2',
	[string]$version =  'latest',
	[string]$Product = 'vevocart-iis8-win2012-r2',
	[string]$name = 'vevocart-iis8-win2012-r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | vevocart-iis8-win2012-r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:vevocart-iis8-win2012-r2 Sku:vevocart-iis8-win2012-r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-we-wed-ad-iis8-win2012-r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'wed-ad-iis8-win2012-r2',
	[string]$Skus = 'wed-ad-iis8-win2012-r2',
	[string]$version =  'latest',
	[string]$Product = 'wed-ad-iis8-win2012-r2',
	[string]$name = 'wed-ad-iis8-win2012-r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | wed-ad-iis8-win2012-r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:wed-ad-iis8-win2012-r2 Sku:wed-ad-iis8-win2012-r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-wh-security-ninja-for-white-hat-hacking-for-ent-lic
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'white-hat-hacking-security-ninja-windows2012',
	[string]$Skus = 'security-ninja-for-white-hat-hacking-for-ent-lic',
	[string]$version =  'latest',
	[string]$Product = 'white-hat-hacking-security-ninja-windows2012',
	[string]$name = 'security-ninja-for-white-hat-hacking-for-ent-lic'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | security-ninja-for-white-hat-hacking-for-ent-lic"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:white-hat-hacking-security-ninja-windows2012 Sku:security-ninja-for-white-hat-hacking-for-ent-lic Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-wh-security-ninja-for-white-hat-hacking-for-pre-lic
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'white-hat-hacking-security-ninja-windows2012',
	[string]$Skus = 'security-ninja-for-white-hat-hacking-for-pre-lic',
	[string]$version =  'latest',
	[string]$Product = 'white-hat-hacking-security-ninja-windows2012',
	[string]$name = 'security-ninja-for-white-hat-hacking-for-pre-lic'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | security-ninja-for-white-hat-hacking-for-pre-lic"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:white-hat-hacking-security-ninja-windows2012 Sku:security-ninja-for-white-hat-hacking-for-pre-lic Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-wh-security-ninja-for-white-hat-hacking-for-pro-lic
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'white-hat-hacking-security-ninja-windows2012',
	[string]$Skus = 'security-ninja-for-white-hat-hacking-for-pro-lic',
	[string]$version =  'latest',
	[string]$Product = 'white-hat-hacking-security-ninja-windows2012',
	[string]$name = 'security-ninja-for-white-hat-hacking-for-pro-lic'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | security-ninja-for-white-hat-hacking-for-pro-lic"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:white-hat-hacking-security-ninja-windows2012 Sku:security-ninja-for-white-hat-hacking-for-pro-lic Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-wi-wikiaspnet-iis8-win2012-r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'wikiaspnet-iis8-win2012-r2',
	[string]$Skus = 'wikiaspnet-iis8-win2012-r2',
	[string]$version =  'latest',
	[string]$Product = 'wikiaspnet-iis8-win2012-r2',
	[string]$name = 'wikiaspnet-iis8-win2012-r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | wikiaspnet-iis8-win2012-r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:wikiaspnet-iis8-win2012-r2 Sku:wikiaspnet-iis8-win2012-r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-wy-wysiwygnet_iis8_0_win2012_r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cognosys',
	[string]$Offer = 'wysiwygnet_iis8_0_win2012_r2',
	[string]$Skus = 'wysiwygnet_iis8_0_win2012_r2',
	[string]$version =  'latest',
	[string]$Product = 'wysiwygnet_iis8_0_win2012_r2',
	[string]$name = 'wysiwygnet_iis8_0_win2012_r2'
)
Write-Host "Image Creation in Process - Plan Info - cognosys | wysiwygnet_iis8_0_win2012_r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cognosys Offer:wysiwygnet_iis8_0_win2012_r2 Sku:wysiwygnet_iis8_0_win2012_r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-co-cohesive-vns3-free
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cohesive',
	[string]$Offer = 'cohesiveft-vns3-for-azure',
	[string]$Skus = 'cohesive-vns3-free',
	[string]$version =  'latest',
	[string]$Product = 'cohesiveft-vns3-for-azure',
	[string]$name = 'cohesive-vns3-free'
)
Write-Host "Image Creation in Process - Plan Info - cohesive | cohesive-vns3-free"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cohesive Offer:cohesiveft-vns3-for-azure Sku:cohesive-vns3-free Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-co-cohesive-vns3-lite
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cohesive',
	[string]$Offer = 'cohesiveft-vns3-for-azure',
	[string]$Skus = 'cohesive-vns3-lite',
	[string]$version =  'latest',
	[string]$Product = 'cohesiveft-vns3-for-azure',
	[string]$name = 'cohesive-vns3-lite'
)
Write-Host "Image Creation in Process - Plan Info - cohesive | cohesive-vns3-lite"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cohesive Offer:cohesiveft-vns3-for-azure Sku:cohesive-vns3-lite Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-co-csmav10
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'commvault',
	[string]$Offer = 'commvault',
	[string]$Skus = 'csmav10',
	[string]$version =  'latest',
	[string]$Product = 'commvault',
	[string]$name = 'csmav10'
)
Write-Host "Image Creation in Process - Plan Info - commvault | csmav10"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: commvault Offer:commvault Sku:csmav10 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-co-cepenterpriselicence0001
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'comunity',
	[string]$Offer = 'comunity-citizen-engagement',
	[string]$Skus = 'cepenterpriselicence0001',
	[string]$version =  'latest',
	[string]$Product = 'comunity-citizen-engagement',
	[string]$name = 'cepenterpriselicence0001'
)
Write-Host "Image Creation in Process - Plan Info - comunity | cepenterpriselicence0001"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: comunity Offer:comunity-citizen-engagement Sku:cepenterpriselicence0001 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-co-cepprofessionallicence0001
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'comunity',
	[string]$Offer = 'comunity-citizen-engagement',
	[string]$Skus = 'cepprofessionallicence0001',
	[string]$version =  'latest',
	[string]$Product = 'comunity-citizen-engagement',
	[string]$name = 'cepprofessionallicence0001'
)
Write-Host "Image Creation in Process - Plan Info - comunity | cepprofessionallicence0001"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: comunity Offer:comunity-citizen-engagement Sku:cepprofessionallicence0001 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-co-cepstandardlicence0001
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'comunity',
	[string]$Offer = 'comunity-citizen-engagement',
	[string]$Skus = 'cepstandardlicence0001',
	[string]$version =  'latest',
	[string]$Product = 'comunity-citizen-engagement',
	[string]$name = 'cepstandardlicence0001'
)
Write-Host "Image Creation in Process - Plan Info - comunity | cepstandardlicence0001"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: comunity Offer:comunity-citizen-engagement Sku:cepstandardlicence0001 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-co-cepstarterlicence0001
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'comunity',
	[string]$Offer = 'comunity-citizen-engagement',
	[string]$Skus = 'cepstarterlicence0001',
	[string]$version =  'latest',
	[string]$Product = 'comunity-citizen-engagement',
	[string]$name = 'cepstarterlicence0001'
)
Write-Host "Image Creation in Process - Plan Info - comunity | cepstarterlicence0001"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: comunity Offer:comunity-citizen-engagement Sku:cepstarterlicence0001 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-co-cepstraterlitelicence0001
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'comunity',
	[string]$Offer = 'comunity-citizen-engagement',
	[string]$Skus = 'cepstraterlitelicence0001',
	[string]$version =  'latest',
	[string]$Product = 'comunity-citizen-engagement',
	[string]$name = 'cepstraterlitelicence0001'
)
Write-Host "Image Creation in Process - Plan Info - comunity | cepstraterlitelicence0001"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: comunity Offer:comunity-citizen-engagement Sku:cepstraterlitelicence0001 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-co-300
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'confluentinc',
	[string]$Offer = 'confluentplatform',
	[string]$Skus = '300',
	[string]$version =  'latest',
	[string]$Product = 'confluentplatform',
	[string]$name = '300'
)
Write-Host "Image Creation in Process - Plan Info - confluentinc | 300"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: confluentinc Offer:confluentplatform Sku:300 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-co-cvtgoazr01
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'convertigo',
	[string]$Offer = 'convertigo-for-azure',
	[string]$Skus = 'cvtgoazr01',
	[string]$version =  'latest',
	[string]$Product = 'convertigo-for-azure',
	[string]$name = 'cvtgoazr01'
)
Write-Host "Image Creation in Process - Plan Info - convertigo | cvtgoazr01"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: convertigo Offer:convertigo-for-azure Sku:cvtgoazr01 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-my-myfidoc
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cordis',
	[string]$Offer = 'myfidoc',
	[string]$Skus = 'myfidoc',
	[string]$version =  'latest',
	[string]$Product = 'myfidoc',
	[string]$name = 'myfidoc'
)
Write-Host "Image Creation in Process - Plan Info - cordis | myfidoc"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cordis Offer:myfidoc Sku:myfidoc Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-su-corent_surpaas_analyzer
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'corent-technology-pvt',
	[string]$Offer = 'surpaas-analyzer-marketplace',
	[string]$Skus = 'corent_surpaas_analyzer',
	[string]$version =  'latest',
	[string]$Product = 'surpaas-analyzer-marketplace',
	[string]$name = 'corent_surpaas_analyzer'
)
Write-Host "Image Creation in Process - Plan Info - corent-technology-pvt | corent_surpaas_analyzer"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: corent-technology-pvt Offer:surpaas-analyzer-marketplace Sku:corent_surpaas_analyzer Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Co-Co-Alpha
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'CoreOS',
	[string]$Offer = 'CoreOS',
	[string]$Skus = 'Alpha',
	[string]$version =  'latest',
	[string]$Product = 'CoreOS',
	[string]$name = 'Alpha'
)
Write-Host "Image Creation in Process - Plan Info - CoreOS | Alpha"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: CoreOS Offer:CoreOS Sku:Alpha Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Co-Co-Beta
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'CoreOS',
	[string]$Offer = 'CoreOS',
	[string]$Skus = 'Beta',
	[string]$version =  'latest',
	[string]$Product = 'CoreOS',
	[string]$name = 'Beta'
)
Write-Host "Image Creation in Process - Plan Info - CoreOS | Beta"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: CoreOS Offer:CoreOS Sku:Beta Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Co-Co-Stable
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'CoreOS',
	[string]$Offer = 'CoreOS',
	[string]$Skus = 'Stable',
	[string]$version =  'latest',
	[string]$Product = 'CoreOS',
	[string]$name = 'Stable'
)
Write-Host "Image Creation in Process - Plan Info - CoreOS | Stable"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: CoreOS Offer:CoreOS Sku:Stable Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-co-cortical_io_api_eng_gen
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cortical-io',
	[string]$Offer = 'cortical-io-retinaservice-eng-gen',
	[string]$Skus = 'cortical_io_api_eng_gen',
	[string]$version =  'latest',
	[string]$Product = 'cortical-io-retinaservice-eng-gen',
	[string]$name = 'cortical_io_api_eng_gen'
)
Write-Host "Image Creation in Process - Plan Info - cortical-io | cortical_io_api_eng_gen"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cortical-io Offer:cortical-io-retinaservice-eng-gen Sku:cortical_io_api_eng_gen Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-co-cbs_40_ce
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'couchbase',
	[string]$Offer = 'couchbase-server-40-community',
	[string]$Skus = 'cbs_40_ce',
	[string]$version =  'latest',
	[string]$Product = 'couchbase-server-40-community',
	[string]$name = 'cbs_40_ce'
)
Write-Host "Image Creation in Process - Plan Info - couchbase | cbs_40_ce"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: couchbase Offer:couchbase-server-40-community Sku:cbs_40_ce Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-co-cbs_40_ee_gold
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'couchbase',
	[string]$Offer = 'couchbase-server-40-enterprise',
	[string]$Skus = 'cbs_40_ee_gold',
	[string]$version =  'latest',
	[string]$Product = 'couchbase-server-40-enterprise',
	[string]$name = 'cbs_40_ee_gold'
)
Write-Host "Image Creation in Process - Plan Info - couchbase | cbs_40_ee_gold"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: couchbase Offer:couchbase-server-40-enterprise Sku:cbs_40_ee_gold Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-co-cbs_40_ee_silver
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'couchbase',
	[string]$Offer = 'couchbase-server-40-enterprise',
	[string]$Skus = 'cbs_40_ee_silver',
	[string]$version =  'latest',
	[string]$Product = 'couchbase-server-40-enterprise',
	[string]$name = 'cbs_40_ee_silver'
)
Write-Host "Image Creation in Process - Plan Info - couchbase | cbs_40_ee_silver"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: couchbase Offer:couchbase-server-40-enterprise Sku:cbs_40_ee_silver Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-co-cbsync_12_ee_gold
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'couchbase',
	[string]$Offer = 'couchbase-syncgateway-12-enterprise',
	[string]$Skus = 'cbsync_12_ee_gold',
	[string]$version =  'latest',
	[string]$Product = 'couchbase-syncgateway-12-enterprise',
	[string]$name = 'cbsync_12_ee_gold'
)
Write-Host "Image Creation in Process - Plan Info - couchbase | cbsync_12_ee_gold"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: couchbase Offer:couchbase-syncgateway-12-enterprise Sku:cbsync_12_ee_gold Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_co-co-cbsync_12_ee_silver
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'couchbase',
	[string]$Offer = 'couchbase-syncgateway-12-enterprise',
	[string]$Skus = 'cbsync_12_ee_silver',
	[string]$version =  'latest',
	[string]$Product = 'couchbase-syncgateway-12-enterprise',
	[string]$name = 'cbsync_12_ee_silver'
)
Write-Host "Image Creation in Process - Plan Info - couchbase | cbsync_12_ee_silver"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: couchbase Offer:couchbase-syncgateway-12-enterprise Sku:cbsync_12_ee_silver Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_cr-De-7
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'credativ',
	[string]$Offer = 'Debian',
	[string]$Skus = '7',
	[string]$version =  'latest',
	[string]$Product = 'Debian',
	[string]$name = '7'
)
Write-Host "Image Creation in Process - Plan Info - credativ | 7"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: credativ Offer:Debian Sku:7 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_cr-De-7-DAILY
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'credativ',
	[string]$Offer = 'Debian',
	[string]$Skus = '7-DAILY',
	[string]$version =  'latest',
	[string]$Product = 'Debian',
	[string]$name = '7-DAILY'
)
Write-Host "Image Creation in Process - Plan Info - credativ | 7-DAILY"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: credativ Offer:Debian Sku:7-DAILY Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_cr-De-8
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'credativ',
	[string]$Offer = 'Debian',
	[string]$Skus = '8',
	[string]$version =  'latest',
	[string]$Product = 'Debian',
	[string]$name = '8'
)
Write-Host "Image Creation in Process - Plan Info - credativ | 8"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: credativ Offer:Debian Sku:8 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_cr-De-8-DAILY
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'credativ',
	[string]$Offer = 'Debian',
	[string]$Skus = '8-DAILY',
	[string]$version =  'latest',
	[string]$Product = 'Debian',
	[string]$name = '8-DAILY'
)
Write-Host "Image Creation in Process - Plan Info - credativ | 8-DAILY"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: credativ Offer:Debian Sku:8-DAILY Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_cr-De-9-DAILY
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'credativ',
	[string]$Offer = 'Debian',
	[string]$Skus = '9-DAILY',
	[string]$version =  'latest',
	[string]$Product = 'Debian',
	[string]$name = '9-DAILY'
)
Write-Host "Image Creation in Process - Plan Info - credativ | 9-DAILY"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: credativ Offer:Debian Sku:9-DAILY Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_cr-cr-cmconsole
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'cristie-software-clonemanager',
	[string]$Offer = 'cristie-clonemanager',
	[string]$Skus = 'cmconsole',
	[string]$version =  'latest',
	[string]$Product = 'cristie-clonemanager',
	[string]$name = 'cmconsole'
)
Write-Host "Image Creation in Process - Plan Info - cristie-software-clonemanager | cmconsole"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: cristie-software-clonemanager Offer:cristie-clonemanager Sku:cmconsole Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_da-da-dal-amb-imfmaker-base-azure
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'dalet',
	[string]$Offer = 'dalet-amberfin-imf',
	[string]$Skus = 'dal-amb-imfmaker-base-azure',
	[string]$version =  'latest',
	[string]$Product = 'dalet-amberfin-imf',
	[string]$name = 'dal-amb-imfmaker-base-azure'
)
Write-Host "Image Creation in Process - Plan Info - dalet | dal-amb-imfmaker-base-azure"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: dalet Offer:dalet-amberfin-imf Sku:dal-amb-imfmaker-base-azure Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_da-da-dal-amb-stdsconv-base-azure
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'dalet',
	[string]$Offer = 'dalet-amberfin-standards',
	[string]$Skus = 'dal-amb-stdsconv-base-azure',
	[string]$version =  'latest',
	[string]$Product = 'dalet-amberfin-standards',
	[string]$name = 'dal-amb-stdsconv-base-azure'
)
Write-Host "Image Creation in Process - Plan Info - dalet | dal-amb-stdsconv-base-azure"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: dalet Offer:dalet-amberfin-standards Sku:dal-amb-stdsconv-base-azure Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_da-de-devicehivestandard
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'dataart',
	[string]$Offer = 'devicehive',
	[string]$Skus = 'devicehivestandard',
	[string]$version =  'latest',
	[string]$Product = 'devicehive',
	[string]$name = 'devicehivestandard'
)
Write-Host "Image Creation in Process - Plan Info - dataart | devicehivestandard"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: dataart Offer:devicehive Sku:devicehivestandard Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_da-da-dcredvault01
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'datacastle',
	[string]$Offer = 'datacastle-red',
	[string]$Skus = 'dcredvault01',
	[string]$version =  'latest',
	[string]$Product = 'datacastle-red',
	[string]$name = 'dcredvault01'
)
Write-Host "Image Creation in Process - Plan Info - datacastle | dcredvault01"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: datacastle Offer:datacastle-red Sku:dcredvault01 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_da-ex-expedat-windows-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'dataexpeditioninc',
	[string]$Offer = 'expedat',
	[string]$Skus = 'expedat-windows-byol',
	[string]$version =  'latest',
	[string]$Product = 'expedat',
	[string]$name = 'expedat-windows-byol'
)
Write-Host "Image Creation in Process - Plan Info - dataexpeditioninc | expedat-windows-byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: dataexpeditioninc Offer:expedat Sku:expedat-windows-byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_da-da-dataiku-data-science-studio-linux
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'dataiku',
	[string]$Offer = 'dataiku-data-science-studio',
	[string]$Skus = 'dataiku-data-science-studio-linux',
	[string]$version =  'latest',
	[string]$Product = 'dataiku-data-science-studio',
	[string]$name = 'dataiku-data-science-studio-linux'
)
Write-Host "Image Creation in Process - Plan Info - dataiku | dataiku-data-science-studio-linux"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: dataiku Offer:dataiku-data-science-studio Sku:dataiku-data-science-studio-linux Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_da-da-spark-hadoop-r-python
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'datalayer',
	[string]$Offer = 'datalayer-notebook',
	[string]$Skus = 'spark-hadoop-r-python',
	[string]$version =  'latest',
	[string]$Product = 'datalayer-notebook',
	[string]$name = 'spark-hadoop-r-python'
)
Write-Host "Image Creation in Process - Plan Info - datalayer | spark-hadoop-r-python"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: datalayer Offer:datalayer-notebook Sku:spark-hadoop-r-python Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_da-in-dl_tlr_01
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'dataliberation',
	[string]$Offer = 'instant-intelligence-top-line-reporter',
	[string]$Skus = 'dl_tlr_01',
	[string]$version =  'latest',
	[string]$Product = 'instant-intelligence-top-line-reporter',
	[string]$name = 'dl_tlr_01'
)
Write-Host "Image Creation in Process - Plan Info - dataliberation | dl_tlr_01"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: dataliberation Offer:instant-intelligence-top-line-reporter Sku:dl_tlr_01 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_da-da-datastaxenterprise
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'datastax',
	[string]$Offer = 'datastax-enterprise',
	[string]$Skus = 'datastaxenterprise',
	[string]$version =  'latest',
	[string]$Product = 'datastax-enterprise',
	[string]$name = 'datastaxenterprise'
)
Write-Host "Image Creation in Process - Plan Info - datastax | datastaxenterprise"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: datastax Offer:datastax-enterprise Sku:datastaxenterprise Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_da-da-dse-nonproduction-use-single-datacenter-20core-max
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'datastax',
	[string]$Offer = 'datastax-enterprise-non-production-use-only',
	[string]$Skus = 'dse-nonproduction-use-single-datacenter-20core-max',
	[string]$version =  'latest',
	[string]$Product = 'datastax-enterprise-non-production-use-only',
	[string]$name = 'dse-nonproduction-use-single-datacenter-20core-max'
)
Write-Host "Image Creation in Process - Plan Info - datastax | dse-nonproduction-use-single-datacenter-20core-max"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: datastax Offer:datastax-enterprise-non-production-use-only Sku:dse-nonproduction-use-single-datacenter-20core-max Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_da-da-sandbox_single-node
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'datastax',
	[string]$Offer = 'datastax-enterprise-non-production-use-only',
	[string]$Skus = 'sandbox_single-node',
	[string]$version =  'latest',
	[string]$Product = 'datastax-enterprise-non-production-use-only',
	[string]$name = 'sandbox_single-node'
)
Write-Host "Image Creation in Process - Plan Info - datastax | sandbox_single-node"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: datastax Offer:datastax-enterprise-non-production-use-only Sku:sandbox_single-node Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_da-da-datasunrise
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'datasunrise',
	[string]$Offer = 'datasunrise-database-security-suite',
	[string]$Skus = 'datasunrise',
	[string]$version =  'latest',
	[string]$Product = 'datasunrise-database-security-suite',
	[string]$name = 'datasunrise'
)
Write-Host "Image Creation in Process - Plan Info - datasunrise | datasunrise"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: datasunrise Offer:datasunrise-database-security-suite Sku:datasunrise Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_da-da-datasunrise_database_security_suite
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'datasunrise',
	[string]$Offer = 'datasunrise-database-security-suite',
	[string]$Skus = 'datasunrise_database_security_suite',
	[string]$version =  'latest',
	[string]$Product = 'datasunrise-database-security-suite',
	[string]$name = 'datasunrise_database_security_suite'
)
Write-Host "Image Creation in Process - Plan Info - datasunrise | datasunrise_database_security_suite"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: datasunrise Offer:datasunrise-database-security-suite Sku:datasunrise_database_security_suite Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_de-de-defacto_business_modeler_byol_01
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'defacto_global_',
	[string]$Offer = 'defacto_modeler_w2012_sql2014_ssas2014_sampleapp01',
	[string]$Skus = 'defacto_business_modeler_byol_01',
	[string]$version =  'latest',
	[string]$Product = 'defacto_modeler_w2012_sql2014_ssas2014_sampleapp01',
	[string]$name = 'defacto_business_modeler_byol_01'
)
Write-Host "Image Creation in Process - Plan Info - defacto_global_ | defacto_business_modeler_byol_01"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: defacto_global_ Offer:defacto_modeler_w2012_sql2014_ssas2014_sampleapp01 Sku:defacto_business_modeler_byol_01 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_de-ad-administrator-for-office365
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'dell_software',
	[string]$Offer = 'administrator-for-office365',
	[string]$Skus = 'administrator-for-office365',
	[string]$version =  'latest',
	[string]$Product = 'administrator-for-office365',
	[string]$name = 'administrator-for-office365'
)
Write-Host "Image Creation in Process - Plan Info - dell_software | administrator-for-office365"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: dell_software Offer:administrator-for-office365 Sku:administrator-for-office365 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_de-ch-changebasebyol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'dell_software',
	[string]$Offer = 'changebase-6',
	[string]$Skus = 'changebasebyol',
	[string]$version =  'latest',
	[string]$Product = 'changebase-6',
	[string]$name = 'changebasebyol'
)
Write-Host "Image Creation in Process - Plan Info - dell_software | changebasebyol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: dell_software Offer:changebase-6 Sku:changebasebyol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_de-mi-mmes
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'dell_software',
	[string]$Offer = 'migration-manager-for-enterprise-social',
	[string]$Skus = 'mmes',
	[string]$version =  'latest',
	[string]$Product = 'migration-manager-for-enterprise-social',
	[string]$name = 'mmes'
)
Write-Host "Image Creation in Process - Plan Info - dell_software | mmes"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: dell_software Offer:migration-manager-for-enterprise-social Sku:mmes Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_de-mi-migration_suite_sharepoint_win2008r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'dell_software',
	[string]$Offer = 'migration_suite_sharepoint',
	[string]$Skus = 'migration_suite_sharepoint_win2008r2',
	[string]$version =  'latest',
	[string]$Product = 'migration_suite_sharepoint',
	[string]$name = 'migration_suite_sharepoint_win2008r2'
)
Write-Host "Image Creation in Process - Plan Info - dell_software | migration_suite_sharepoint_win2008r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: dell_software Offer:migration_suite_sharepoint Sku:migration_suite_sharepoint_win2008r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_de-ra-dell_rr_replication_target_vm_for_azure
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'dell_software',
	[string]$Offer = 'rapid-recovery-replication-target-vm-for-azure',
	[string]$Skus = 'dell_rr_replication_target_vm_for_azure',
	[string]$version =  'latest',
	[string]$Product = 'rapid-recovery-replication-target-vm-for-azure',
	[string]$name = 'dell_rr_replication_target_vm_for_azure'
)
Write-Host "Image Creation in Process - Plan Info - dell_software | dell_rr_replication_target_vm_for_azure"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: dell_software Offer:rapid-recovery-replication-target-vm-for-azure Sku:dell_rr_replication_target_vm_for_azure Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_de-re-remotescan_enterprise
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'dell_software',
	[string]$Offer = 'remotescan',
	[string]$Skus = 'remotescan_enterprise',
	[string]$version =  'latest',
	[string]$Product = 'remotescan',
	[string]$name = 'remotescan_enterprise'
)
Write-Host "Image Creation in Process - Plan Info - dell_software | remotescan_enterprise"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: dell_software Offer:remotescan Sku:remotescan_enterprise Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_de-si-site_admin_for_sharepoint_w2k8r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'dell_software',
	[string]$Offer = 'site_admin_for_sharepoint',
	[string]$Skus = 'site_admin_for_sharepoint_w2k8r2',
	[string]$version =  'latest',
	[string]$Product = 'site_admin_for_sharepoint',
	[string]$name = 'site_admin_for_sharepoint_w2k8r2'
)
Write-Host "Image Creation in Process - Plan Info - dell_software | site_admin_for_sharepoint_w2k8r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: dell_software Offer:site_admin_for_sharepoint Sku:site_admin_for_sharepoint_w2k8r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_de-sp-spotlight-on-sqlserver-enterprise-11-6
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'dell_software',
	[string]$Offer = 'spotlight-on-sql-11-6',
	[string]$Skus = 'spotlight-on-sqlserver-enterprise-11-6',
	[string]$version =  'latest',
	[string]$Product = 'spotlight-on-sql-11-6',
	[string]$name = 'spotlight-on-sqlserver-enterprise-11-6'
)
Write-Host "Image Creation in Process - Plan Info - dell_software | spotlight-on-sqlserver-enterprise-11-6"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: dell_software Offer:spotlight-on-sql-11-6 Sku:spotlight-on-sqlserver-enterprise-11-6 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_de-st-dell-statistica-data-miner-rental
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'dell_software',
	[string]$Offer = 'statistica-data-miner',
	[string]$Skus = 'dell-statistica-data-miner-rental',
	[string]$version =  'latest',
	[string]$Product = 'statistica-data-miner',
	[string]$name = 'dell-statistica-data-miner-rental'
)
Write-Host "Image Creation in Process - Plan Info - dell_software | dell-statistica-data-miner-rental"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: dell_software Offer:statistica-data-miner Sku:dell-statistica-data-miner-rental Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_de-to-toad_intelligence_central_24
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'dell_software',
	[string]$Offer = 'toad-intelligence-central',
	[string]$Skus = 'toad_intelligence_central_24',
	[string]$version =  'latest',
	[string]$Product = 'toad-intelligence-central',
	[string]$name = 'toad_intelligence_central_24'
)
Write-Host "Image Creation in Process - Plan Info - dell_software | toad_intelligence_central_24"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: dell_software Offer:toad-intelligence-central Sku:toad_intelligence_central_24 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_de-uc-uccs
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'dell_software',
	[string]$Offer = 'uccs',
	[string]$Skus = 'uccs',
	[string]$version =  'latest',
	[string]$Product = 'uccs',
	[string]$name = 'uccs'
)
Write-Host "Image Creation in Process - Plan Info - dell_software | uccs"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: dell_software Offer:uccs Sku:uccs Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_de-de-denyall-rweb
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'denyall',
	[string]$Offer = 'denyall-rweb',
	[string]$Skus = 'denyall-rweb',
	[string]$version =  'latest',
	[string]$Product = 'denyall-rweb',
	[string]$name = 'denyall-rweb'
)
Write-Host "Image Creation in Process - Plan Info - denyall | denyall-rweb"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: denyall Offer:denyall-rweb Sku:denyall-rweb Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_de-de-denyall-vulnerability-manager
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'denyall',
	[string]$Offer = 'denyall-vulnerability-manager',
	[string]$Skus = 'denyall-vulnerability-manager',
	[string]$version =  'latest',
	[string]$Product = 'denyall-vulnerability-manager',
	[string]$name = 'denyall-vulnerability-manager'
)
Write-Host "Image Creation in Process - Plan Info - denyall | denyall-vulnerability-manager"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: denyall Offer:denyall-vulnerability-manager Sku:denyall-vulnerability-manager Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_de-de-denyall-waf-wsf-wam
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'denyall',
	[string]$Offer = 'denyall-web-application-firewall',
	[string]$Skus = 'denyall-waf-wsf-wam',
	[string]$version =  'latest',
	[string]$Product = 'denyall-web-application-firewall',
	[string]$name = 'denyall-waf-wsf-wam'
)
Write-Host "Image Creation in Process - Plan Info - denyall | denyall-waf-wsf-wam"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: denyall Offer:denyall-web-application-firewall Sku:denyall-waf-wsf-wam Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_de-de-denyall-waf-wsf-wam-fee
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'denyall',
	[string]$Offer = 'denyall-web-application-firewall',
	[string]$Skus = 'denyall-waf-wsf-wam-fee',
	[string]$version =  'latest',
	[string]$Product = 'denyall-web-application-firewall',
	[string]$name = 'denyall-waf-wsf-wam-fee'
)
Write-Host "Image Creation in Process - Plan Info - denyall | denyall-waf-wsf-wam-fee"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: denyall Offer:denyall-web-application-firewall Sku:denyall-waf-wsf-wam-fee Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_de-en-enterprisealert-2015-datacenter-10users
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'derdack',
	[string]$Offer = 'enterprisealert',
	[string]$Skus = 'enterprisealert-2015-datacenter-10users',
	[string]$version =  'latest',
	[string]$Product = 'enterprisealert',
	[string]$name = 'enterprisealert-2015-datacenter-10users'
)
Write-Host "Image Creation in Process - Plan Info - derdack | enterprisealert-2015-datacenter-10users"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: derdack Offer:enterprisealert Sku:enterprisealert-2015-datacenter-10users Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_de-en-enterprisealert-2015-datacenter-15users
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'derdack',
	[string]$Offer = 'enterprisealert',
	[string]$Skus = 'enterprisealert-2015-datacenter-15users',
	[string]$version =  'latest',
	[string]$Product = 'enterprisealert',
	[string]$name = 'enterprisealert-2015-datacenter-15users'
)
Write-Host "Image Creation in Process - Plan Info - derdack | enterprisealert-2015-datacenter-15users"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: derdack Offer:enterprisealert Sku:enterprisealert-2015-datacenter-15users Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_de-en-enterprisealert-2015-datacenter-20users
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'derdack',
	[string]$Offer = 'enterprisealert',
	[string]$Skus = 'enterprisealert-2015-datacenter-20users',
	[string]$version =  'latest',
	[string]$Product = 'enterprisealert',
	[string]$name = 'enterprisealert-2015-datacenter-20users'
)
Write-Host "Image Creation in Process - Plan Info - derdack | enterprisealert-2015-datacenter-20users"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: derdack Offer:enterprisealert Sku:enterprisealert-2015-datacenter-20users Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_de-en-enterprisealert-2015-datacenter-25users
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'derdack',
	[string]$Offer = 'enterprisealert',
	[string]$Skus = 'enterprisealert-2015-datacenter-25users',
	[string]$version =  'latest',
	[string]$Product = 'enterprisealert',
	[string]$name = 'enterprisealert-2015-datacenter-25users'
)
Write-Host "Image Creation in Process - Plan Info - derdack | enterprisealert-2015-datacenter-25users"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: derdack Offer:enterprisealert Sku:enterprisealert-2015-datacenter-25users Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_de-en-enterprisealert-2015-datacenter-50users
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'derdack',
	[string]$Offer = 'enterprisealert',
	[string]$Skus = 'enterprisealert-2015-datacenter-50users',
	[string]$version =  'latest',
	[string]$Product = 'enterprisealert',
	[string]$name = 'enterprisealert-2015-datacenter-50users'
)
Write-Host "Image Creation in Process - Plan Info - derdack | enterprisealert-2015-datacenter-50users"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: derdack Offer:enterprisealert Sku:enterprisealert-2015-datacenter-50users Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_de-en-enterprisealert-2016-datacenter-10users
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'derdack',
	[string]$Offer = 'enterprisealert',
	[string]$Skus = 'enterprisealert-2016-datacenter-10users',
	[string]$version =  'latest',
	[string]$Product = 'enterprisealert',
	[string]$name = 'enterprisealert-2016-datacenter-10users'
)
Write-Host "Image Creation in Process - Plan Info - derdack | enterprisealert-2016-datacenter-10users"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: derdack Offer:enterprisealert Sku:enterprisealert-2016-datacenter-10users Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_de-en-enterprisealert-2016-datacenter-15users
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'derdack',
	[string]$Offer = 'enterprisealert',
	[string]$Skus = 'enterprisealert-2016-datacenter-15users',
	[string]$version =  'latest',
	[string]$Product = 'enterprisealert',
	[string]$name = 'enterprisealert-2016-datacenter-15users'
)
Write-Host "Image Creation in Process - Plan Info - derdack | enterprisealert-2016-datacenter-15users"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: derdack Offer:enterprisealert Sku:enterprisealert-2016-datacenter-15users Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_de-en-enterprisealert-2016-datacenter-20users
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'derdack',
	[string]$Offer = 'enterprisealert',
	[string]$Skus = 'enterprisealert-2016-datacenter-20users',
	[string]$version =  'latest',
	[string]$Product = 'enterprisealert',
	[string]$name = 'enterprisealert-2016-datacenter-20users'
)
Write-Host "Image Creation in Process - Plan Info - derdack | enterprisealert-2016-datacenter-20users"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: derdack Offer:enterprisealert Sku:enterprisealert-2016-datacenter-20users Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_de-en-enterprisealert-2016-datacenter-25users
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'derdack',
	[string]$Offer = 'enterprisealert',
	[string]$Skus = 'enterprisealert-2016-datacenter-25users',
	[string]$version =  'latest',
	[string]$Product = 'enterprisealert',
	[string]$name = 'enterprisealert-2016-datacenter-25users'
)
Write-Host "Image Creation in Process - Plan Info - derdack | enterprisealert-2016-datacenter-25users"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: derdack Offer:enterprisealert Sku:enterprisealert-2016-datacenter-25users Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_de-en-enterprisealert-2016-datacenter-50users
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'derdack',
	[string]$Offer = 'enterprisealert',
	[string]$Skus = 'enterprisealert-2016-datacenter-50users',
	[string]$version =  'latest',
	[string]$Product = 'enterprisealert',
	[string]$name = 'enterprisealert-2016-datacenter-50users'
)
Write-Host "Image Creation in Process - Plan Info - derdack | enterprisealert-2016-datacenter-50users"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: derdack Offer:enterprisealert Sku:enterprisealert-2016-datacenter-50users Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_dg-dg-dgsecure_byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'dgsecure',
	[string]$Offer = 'dgsecure',
	[string]$Skus = 'dgsecure_byol',
	[string]$version =  'latest',
	[string]$Product = 'dgsecure',
	[string]$name = 'dgsecure_byol'
)
Write-Host "Image Creation in Process - Plan Info - dgsecure | dgsecure_byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: dgsecure Offer:dgsecure Sku:dgsecure_byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_dg-dg-dgsecure_byol_v2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'dgsecure',
	[string]$Offer = 'dgsecure',
	[string]$Skus = 'dgsecure_byol_v2',
	[string]$version =  'latest',
	[string]$Product = 'dgsecure',
	[string]$name = 'dgsecure_byol_v2'
)
Write-Host "Image Creation in Process - Plan Info - dgsecure | dgsecure_byol_v2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: dgsecure Offer:dgsecure Sku:dgsecure_byol_v2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_do-do-docker_datacenter
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'docker',
	[string]$Offer = 'docker-datacenter-custom',
	[string]$Skus = 'docker_datacenter',
	[string]$version =  'latest',
	[string]$Product = 'docker-datacenter-custom',
	[string]$name = 'docker_datacenter'
)
Write-Host "Image Creation in Process - Plan Info - docker | docker_datacenter"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: docker Offer:docker-datacenter-custom Sku:docker_datacenter Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_do-co-contentcrawler_byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'docscorp-us',
	[string]$Offer = 'contentcrawler-for-netdocuments',
	[string]$Skus = 'contentcrawler_byol',
	[string]$version =  'latest',
	[string]$Product = 'contentcrawler-for-netdocuments',
	[string]$name = 'contentcrawler_byol'
)
Write-Host "Image Creation in Process - Plan Info - docscorp-us | contentcrawler_byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: docscorp-us Offer:contentcrawler-for-netdocuments Sku:contentcrawler_byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_do-co-contentcrawler_byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'docscorp-us',
	[string]$Offer = 'contentcrawler-for-sharepoint',
	[string]$Skus = 'contentcrawler_byol',
	[string]$version =  'latest',
	[string]$Product = 'contentcrawler-for-sharepoint',
	[string]$name = 'contentcrawler_byol'
)
Write-Host "Image Creation in Process - Plan Info - docscorp-us | contentcrawler_byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: docscorp-us Offer:contentcrawler-for-sharepoint Sku:contentcrawler_byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_do-do-dolby_encoder_free
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'dolbydeveloper',
	[string]$Offer = 'dolby-encoding-azure-freetool',
	[string]$Skus = 'dolby_encoder_free',
	[string]$version =  'latest',
	[string]$Product = 'dolby-encoding-azure-freetool',
	[string]$name = 'dolby_encoder_free'
)
Write-Host "Image Creation in Process - Plan Info - dolbydeveloper | dolby_encoder_free"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: dolbydeveloper Offer:dolby-encoding-azure-freetool Sku:dolby_encoder_free Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_do-do-dome9ubuntu
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'dome9',
	[string]$Offer = 'dome9ubuntu',
	[string]$Skus = 'dome9ubuntu',
	[string]$version =  'latest',
	[string]$Product = 'dome9ubuntu',
	[string]$name = 'dome9ubuntu'
)
Write-Host "Image Creation in Process - Plan Info - dome9 | dome9ubuntu"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: dome9 Offer:dome9ubuntu Sku:dome9ubuntu Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_do-do-dome9windows
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'dome9',
	[string]$Offer = 'dome9winserver',
	[string]$Skus = 'dome9windows',
	[string]$version =  'latest',
	[string]$Product = 'dome9winserver',
	[string]$name = 'dome9windows'
)
Write-Host "Image Creation in Process - Plan Info - dome9 | dome9windows"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: dome9 Offer:dome9winserver Sku:dome9windows Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_do-do-dome9windows2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'dome9',
	[string]$Offer = 'dome9winserver',
	[string]$Skus = 'dome9windows2',
	[string]$version =  'latest',
	[string]$Product = 'dome9winserver',
	[string]$name = 'dome9windows2'
)
Write-Host "Image Creation in Process - Plan Info - dome9 | dome9windows2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: dome9 Offer:dome9winserver Sku:dome9windows2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_do-do-domino2go1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'donovapub',
	[string]$Offer = 'domino2go',
	[string]$Skus = 'domino2go1',
	[string]$version =  'latest',
	[string]$Product = 'domino2go',
	[string]$name = 'domino2go1'
)
Write-Host "Image Creation in Process - Plan Info - donovapub | domino2go1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: donovapub Offer:domino2go Sku:domino2go1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_do-do-domino2go-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'donovapub',
	[string]$Offer = 'domino2go-byol',
	[string]$Skus = 'domino2go-byol',
	[string]$version =  'latest',
	[string]$Product = 'domino2go-byol',
	[string]$name = 'domino2go-byol'
)
Write-Host "Image Creation in Process - Plan Info - donovapub | domino2go-byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: donovapub Offer:domino2go-byol Sku:domino2go-byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_dr-dr-free
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'drone',
	[string]$Offer = 'drone',
	[string]$Skus = 'free',
	[string]$version =  'latest',
	[string]$Product = 'drone',
	[string]$name = 'free'
)
Write-Host "Image Creation in Process - Plan Info - drone | free"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: drone Offer:drone Sku:free Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_du-du-dbi-current
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'dundas',
	[string]$Offer = 'dundas-bi',
	[string]$Skus = 'dbi-current',
	[string]$version =  'latest',
	[string]$Product = 'dundas-bi',
	[string]$name = 'dbi-current'
)
Write-Host "Image Creation in Process - Plan Info - dundas | dbi-current"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: dundas Offer:dundas-bi Sku:dbi-current Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_dy-ru-byol-managed
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'dynatrace',
	[string]$Offer = 'ruxit-managed-vm',
	[string]$Skus = 'byol-managed',
	[string]$version =  'latest',
	[string]$Product = 'ruxit-managed-vm',
	[string]$name = 'byol-managed'
)
Write-Host "Image Creation in Process - Plan Info - dynatrace | byol-managed"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: dynatrace Offer:ruxit-managed-vm Sku:byol-managed Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ea-ea-easyterritory_enterprise_en
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'easyterritory',
	[string]$Offer = 'easyterritory',
	[string]$Skus = 'easyterritory_enterprise_en',
	[string]$version =  'latest',
	[string]$Product = 'easyterritory',
	[string]$name = 'easyterritory_enterprise_en'
)
Write-Host "Image Creation in Process - Plan Info - easyterritory | easyterritory_enterprise_en"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: easyterritory Offer:easyterritory Sku:easyterritory_enterprise_en Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ed-in-integreat4tfs2015u3
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'edevtech',
	[string]$Offer = 'integreat4tfs2015-',
	[string]$Skus = 'integreat4tfs2015u3',
	[string]$version =  'latest',
	[string]$Product = 'integreat4tfs2015-',
	[string]$name = 'integreat4tfs2015u3'
)
Write-Host "Image Creation in Process - Plan Info - edevtech | integreat4tfs2015u3"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: edevtech Offer:integreat4tfs2015- Sku:integreat4tfs2015u3 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_eg-eg-egnyte-connect
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'egnyte',
	[string]$Offer = 'egnyte-connect',
	[string]$Skus = 'egnyte-connect',
	[string]$version =  'latest',
	[string]$Product = 'egnyte-connect',
	[string]$name = 'egnyte-connect'
)
Write-Host "Image Creation in Process - Plan Info - egnyte | egnyte-connect"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: egnyte Offer:egnyte-connect Sku:egnyte-connect Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_eg-eg-shsg-azu-0001
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'egress',
	[string]$Offer = 'egress-switch-gateway',
	[string]$Skus = 'shsg-azu-0001',
	[string]$version =  'latest',
	[string]$Product = 'egress-switch-gateway',
	[string]$name = 'shsg-azu-0001'
)
Write-Host "Image Creation in Process - Plan Info - egress | shsg-azu-0001"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: egress Offer:egress-switch-gateway Sku:shsg-azu-0001 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ei-ei-eipower-cloud-services-1000-consumption
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'eip',
	[string]$Offer = 'eipower-cloud-services',
	[string]$Skus = 'eipower-cloud-services-1000-consumption',
	[string]$version =  'latest',
	[string]$Product = 'eipower-cloud-services',
	[string]$name = 'eipower-cloud-services-1000-consumption'
)
Write-Host "Image Creation in Process - Plan Info - eip | eipower-cloud-services-1000-consumption"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: eip Offer:eipower-cloud-services Sku:eipower-cloud-services-1000-consumption Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ei-ei-eipower-cloud-services-1000-consumption-edu
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'eip',
	[string]$Offer = 'eipower-cloud-services',
	[string]$Skus = 'eipower-cloud-services-1000-consumption-edu',
	[string]$version =  'latest',
	[string]$Product = 'eipower-cloud-services',
	[string]$name = 'eipower-cloud-services-1000-consumption-edu'
)
Write-Host "Image Creation in Process - Plan Info - eip | eipower-cloud-services-1000-consumption-edu"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: eip Offer:eipower-cloud-services Sku:eipower-cloud-services-1000-consumption-edu Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ei-ei-eipower-cloud-services-10000-consumption
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'eip',
	[string]$Offer = 'eipower-cloud-services',
	[string]$Skus = 'eipower-cloud-services-10000-consumption',
	[string]$version =  'latest',
	[string]$Product = 'eipower-cloud-services',
	[string]$name = 'eipower-cloud-services-10000-consumption'
)
Write-Host "Image Creation in Process - Plan Info - eip | eipower-cloud-services-10000-consumption"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: eip Offer:eipower-cloud-services Sku:eipower-cloud-services-10000-consumption Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ei-ei-eipower-cloud-services-10000-consumption-edu
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'eip',
	[string]$Offer = 'eipower-cloud-services',
	[string]$Skus = 'eipower-cloud-services-10000-consumption-edu',
	[string]$version =  'latest',
	[string]$Product = 'eipower-cloud-services',
	[string]$name = 'eipower-cloud-services-10000-consumption-edu'
)
Write-Host "Image Creation in Process - Plan Info - eip | eipower-cloud-services-10000-consumption-edu"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: eip Offer:eipower-cloud-services Sku:eipower-cloud-services-10000-consumption-edu Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ei-ei-eipower-cloud-services-100000-consumption-edu
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'eip',
	[string]$Offer = 'eipower-cloud-services',
	[string]$Skus = 'eipower-cloud-services-100000-consumption-edu',
	[string]$version =  'latest',
	[string]$Product = 'eipower-cloud-services',
	[string]$name = 'eipower-cloud-services-100000-consumption-edu'
)
Write-Host "Image Creation in Process - Plan Info - eip | eipower-cloud-services-100000-consumption-edu"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: eip Offer:eipower-cloud-services Sku:eipower-cloud-services-100000-consumption-edu Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ei-ei-eipower-cloud-services-2000-consumption
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'eip',
	[string]$Offer = 'eipower-cloud-services',
	[string]$Skus = 'eipower-cloud-services-2000-consumption',
	[string]$version =  'latest',
	[string]$Product = 'eipower-cloud-services',
	[string]$name = 'eipower-cloud-services-2000-consumption'
)
Write-Host "Image Creation in Process - Plan Info - eip | eipower-cloud-services-2000-consumption"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: eip Offer:eipower-cloud-services Sku:eipower-cloud-services-2000-consumption Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ei-ei-eipower-cloud-services-2000-consumption-edu
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'eip',
	[string]$Offer = 'eipower-cloud-services',
	[string]$Skus = 'eipower-cloud-services-2000-consumption-edu',
	[string]$version =  'latest',
	[string]$Product = 'eipower-cloud-services',
	[string]$name = 'eipower-cloud-services-2000-consumption-edu'
)
Write-Host "Image Creation in Process - Plan Info - eip | eipower-cloud-services-2000-consumption-edu"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: eip Offer:eipower-cloud-services Sku:eipower-cloud-services-2000-consumption-edu Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ei-ei-eipower-cloud-services-20000-consumption
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'eip',
	[string]$Offer = 'eipower-cloud-services',
	[string]$Skus = 'eipower-cloud-services-20000-consumption',
	[string]$version =  'latest',
	[string]$Product = 'eipower-cloud-services',
	[string]$name = 'eipower-cloud-services-20000-consumption'
)
Write-Host "Image Creation in Process - Plan Info - eip | eipower-cloud-services-20000-consumption"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: eip Offer:eipower-cloud-services Sku:eipower-cloud-services-20000-consumption Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ei-ei-eipower-cloud-services-20000-consumption-edu
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'eip',
	[string]$Offer = 'eipower-cloud-services',
	[string]$Skus = 'eipower-cloud-services-20000-consumption-edu',
	[string]$version =  'latest',
	[string]$Product = 'eipower-cloud-services',
	[string]$name = 'eipower-cloud-services-20000-consumption-edu'
)
Write-Host "Image Creation in Process - Plan Info - eip | eipower-cloud-services-20000-consumption-edu"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: eip Offer:eipower-cloud-services Sku:eipower-cloud-services-20000-consumption-edu Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ei-ei-eipower-cloud-services-3000-consumption
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'eip',
	[string]$Offer = 'eipower-cloud-services',
	[string]$Skus = 'eipower-cloud-services-3000-consumption',
	[string]$version =  'latest',
	[string]$Product = 'eipower-cloud-services',
	[string]$name = 'eipower-cloud-services-3000-consumption'
)
Write-Host "Image Creation in Process - Plan Info - eip | eipower-cloud-services-3000-consumption"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: eip Offer:eipower-cloud-services Sku:eipower-cloud-services-3000-consumption Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ei-ei-eipower-cloud-services-3000-consumption-edu
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'eip',
	[string]$Offer = 'eipower-cloud-services',
	[string]$Skus = 'eipower-cloud-services-3000-consumption-edu',
	[string]$version =  'latest',
	[string]$Product = 'eipower-cloud-services',
	[string]$name = 'eipower-cloud-services-3000-consumption-edu'
)
Write-Host "Image Creation in Process - Plan Info - eip | eipower-cloud-services-3000-consumption-edu"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: eip Offer:eipower-cloud-services Sku:eipower-cloud-services-3000-consumption-edu Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ei-ei-eipower-cloud-services-500-consumption
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'eip',
	[string]$Offer = 'eipower-cloud-services',
	[string]$Skus = 'eipower-cloud-services-500-consumption',
	[string]$version =  'latest',
	[string]$Product = 'eipower-cloud-services',
	[string]$name = 'eipower-cloud-services-500-consumption'
)
Write-Host "Image Creation in Process - Plan Info - eip | eipower-cloud-services-500-consumption"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: eip Offer:eipower-cloud-services Sku:eipower-cloud-services-500-consumption Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ei-ei-eipower-cloud-services-500-consumption-edu
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'eip',
	[string]$Offer = 'eipower-cloud-services',
	[string]$Skus = 'eipower-cloud-services-500-consumption-edu',
	[string]$version =  'latest',
	[string]$Product = 'eipower-cloud-services',
	[string]$name = 'eipower-cloud-services-500-consumption-edu'
)
Write-Host "Image Creation in Process - Plan Info - eip | eipower-cloud-services-500-consumption-edu"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: eip Offer:eipower-cloud-services Sku:eipower-cloud-services-500-consumption-edu Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ei-ei-eipower-cloud-services-5000-consumption
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'eip',
	[string]$Offer = 'eipower-cloud-services',
	[string]$Skus = 'eipower-cloud-services-5000-consumption',
	[string]$version =  'latest',
	[string]$Product = 'eipower-cloud-services',
	[string]$name = 'eipower-cloud-services-5000-consumption'
)
Write-Host "Image Creation in Process - Plan Info - eip | eipower-cloud-services-5000-consumption"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: eip Offer:eipower-cloud-services Sku:eipower-cloud-services-5000-consumption Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ei-ei-eipower-cloud-services-5000-consumption-edu
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'eip',
	[string]$Offer = 'eipower-cloud-services',
	[string]$Skus = 'eipower-cloud-services-5000-consumption-edu',
	[string]$version =  'latest',
	[string]$Product = 'eipower-cloud-services',
	[string]$name = 'eipower-cloud-services-5000-consumption-edu'
)
Write-Host "Image Creation in Process - Plan Info - eip | eipower-cloud-services-5000-consumption-edu"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: eip Offer:eipower-cloud-services Sku:eipower-cloud-services-5000-consumption-edu Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ei-ei-eipower-cloud-services-50000-consumption
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'eip',
	[string]$Offer = 'eipower-cloud-services',
	[string]$Skus = 'eipower-cloud-services-50000-consumption',
	[string]$version =  'latest',
	[string]$Product = 'eipower-cloud-services',
	[string]$name = 'eipower-cloud-services-50000-consumption'
)
Write-Host "Image Creation in Process - Plan Info - eip | eipower-cloud-services-50000-consumption"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: eip Offer:eipower-cloud-services Sku:eipower-cloud-services-50000-consumption Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ei-ei-eipower-cloud-services-50000-consumption-edu
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'eip',
	[string]$Offer = 'eipower-cloud-services',
	[string]$Skus = 'eipower-cloud-services-50000-consumption-edu',
	[string]$version =  'latest',
	[string]$Product = 'eipower-cloud-services',
	[string]$name = 'eipower-cloud-services-50000-consumption-edu'
)
Write-Host "Image Creation in Process - Plan Info - eip | eipower-cloud-services-50000-consumption-edu"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: eip Offer:eipower-cloud-services Sku:eipower-cloud-services-50000-consumption-edu Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ei-ei-eipower-clousd-services-100000-consumption
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'eip',
	[string]$Offer = 'eipower-cloud-services',
	[string]$Skus = 'eipower-clousd-services-100000-consumption',
	[string]$version =  'latest',
	[string]$Product = 'eipower-cloud-services',
	[string]$name = 'eipower-clousd-services-100000-consumption'
)
Write-Host "Image Creation in Process - Plan Info - eip | eipower-clousd-services-100000-consumption"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: eip Offer:eipower-cloud-services Sku:eipower-clousd-services-100000-consumption Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_el-br-briskengine
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'elastacloud',
	[string]$Offer = 'brisk',
	[string]$Skus = 'briskengine',
	[string]$version =  'latest',
	[string]$Product = 'brisk',
	[string]$name = 'briskengine'
)
Write-Host "Image Creation in Process - Plan Info - elastacloud | briskengine"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: elastacloud Offer:brisk Sku:briskengine Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_el-el-byol-single-instance
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'elasticbox',
	[string]$Offer = 'elasticbox-enterprise',
	[string]$Skus = 'byol-single-instance',
	[string]$version =  'latest',
	[string]$Product = 'elasticbox-enterprise',
	[string]$name = 'byol-single-instance'
)
Write-Host "Image Creation in Process - Plan Info - elasticbox | byol-single-instance"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: elasticbox Offer:elasticbox-enterprise Sku:byol-single-instance Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_el-cl-cloud-connector-azure
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'elfiqnetworks',
	[string]$Offer = 'cloud-connector',
	[string]$Skus = 'cloud-connector-azure',
	[string]$version =  'latest',
	[string]$Product = 'cloud-connector',
	[string]$name = 'cloud-connector-azure'
)
Write-Host "Image Creation in Process - Plan Info - elfiqnetworks | cloud-connector-azure"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: elfiqnetworks Offer:cloud-connector Sku:cloud-connector-azure Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_el-el-eloqueradb
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'eloquera',
	[string]$Offer = 'eloqueradb',
	[string]$Skus = 'eloqueradb',
	[string]$version =  'latest',
	[string]$Product = 'eloqueradb',
	[string]$name = 'eloqueradb'
)
Write-Host "Image Creation in Process - Plan Info - eloquera | eloqueradb"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: eloquera Offer:eloqueradb Sku:eloqueradb Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_em-em-standard
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'emercoin',
	[string]$Offer = 'emercoin',
	[string]$Skus = 'standard',
	[string]$version =  'latest',
	[string]$Product = 'emercoin',
	[string]$name = 'standard'
)
Write-Host "Image Creation in Process - Plan Info - emercoin | standard"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: emercoin Offer:emercoin Sku:standard Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_en-ex-execution_manager
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'enforongo',
	[string]$Offer = 'execution_manager',
	[string]$Skus = 'execution_manager',
	[string]$version =  'latest',
	[string]$Product = 'execution_manager',
	[string]$name = 'execution_manager'
)
Write-Host "Image Creation in Process - Plan Info - enforongo | execution_manager"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: enforongo Offer:execution_manager Sku:execution_manager Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_en-ex-execution_manager_for_development_and_test
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'enforongo',
	[string]$Offer = 'execution_manager',
	[string]$Skus = 'execution_manager_for_development_and_test',
	[string]$version =  'latest',
	[string]$Product = 'execution_manager',
	[string]$name = 'execution_manager_for_development_and_test'
)
Write-Host "Image Creation in Process - Plan Info - enforongo | execution_manager_for_development_and_test"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: enforongo Offer:execution_manager Sku:execution_manager_for_development_and_test Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ep-ep-egfca
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'eperi',
	[string]$Offer = 'eperi-gateway-for-cloud-apps',
	[string]$Skus = 'egfca',
	[string]$version =  'latest',
	[string]$Product = 'eperi-gateway-for-cloud-apps',
	[string]$name = 'egfca'
)
Write-Host "Image Creation in Process - Plan Info - eperi | egfca"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: eperi Offer:eperi-gateway-for-cloud-apps Sku:egfca Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_eq-me-404115az
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'equilibrium',
	[string]$Offer = 'mediarich-all-media-server',
	[string]$Skus = '404115az',
	[string]$version =  'latest',
	[string]$Product = 'mediarich-all-media-server',
	[string]$name = '404115az'
)
Write-Host "Image Creation in Process - Plan Info - equilibrium | 404115az"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: equilibrium Offer:mediarich-all-media-server Sku:404115az Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_eq-me-402000az
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'equilibrium',
	[string]$Offer = 'mediarich-hot-folder',
	[string]$Skus = '402000az',
	[string]$version =  'latest',
	[string]$Product = 'mediarich-hot-folder',
	[string]$name = '402000az'
)
Write-Host "Image Creation in Process - Plan Info - equilibrium | 402000az"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: equilibrium Offer:mediarich-hot-folder Sku:402000az Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ES-es-eset-remote-administrator
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'ESET',
	[string]$Offer = 'eset-remote-administrator',
	[string]$Skus = 'eset-remote-administrator',
	[string]$version =  'latest',
	[string]$Product = 'eset-remote-administrator',
	[string]$name = 'eset-remote-administrator'
)
Write-Host "Image Creation in Process - Plan Info - ESET | eset-remote-administrator"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: ESET Offer:eset-remote-administrator Sku:eset-remote-administrator Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_es-ar-cloud
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'esri',
	[string]$Offer = 'arcgis-10-4-for-server',
	[string]$Skus = 'cloud',
	[string]$version =  'latest',
	[string]$Product = 'arcgis-10-4-for-server',
	[string]$name = 'cloud'
)
Write-Host "Image Creation in Process - Plan Info - esri | cloud"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: esri Offer:arcgis-10-4-for-server Sku:cloud Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_es-ar-cloud
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'esri',
	[string]$Offer = 'arcgis-for-server',
	[string]$Skus = 'cloud',
	[string]$version =  'latest',
	[string]$Product = 'arcgis-for-server',
	[string]$name = 'cloud'
)
Write-Host "Image Creation in Process - Plan Info - esri | cloud"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: esri Offer:arcgis-for-server Sku:cloud Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_eu-ec-everyware_cloud_lite
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'eurotech',
	[string]$Offer = 'ec-smallbiz-2015',
	[string]$Skus = 'everyware_cloud_lite',
	[string]$version =  'latest',
	[string]$Product = 'ec-smallbiz-2015',
	[string]$name = 'everyware_cloud_lite'
)
Write-Host "Image Creation in Process - Plan Info - eurotech | everyware_cloud_lite"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: eurotech Offer:ec-smallbiz-2015 Sku:everyware_cloud_lite Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ev-em-ems-1_7_1-ubuntu-16_04
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'evostream-inc',
	[string]$Offer = 'ems-test',
	[string]$Skus = 'ems-1_7_1-ubuntu-16_04',
	[string]$version =  'latest',
	[string]$Product = 'ems-test',
	[string]$name = 'ems-1_7_1-ubuntu-16_04'
)
Write-Host "Image Creation in Process - Plan Info - evostream-inc | ems-1_7_1-ubuntu-16_04"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: evostream-inc Offer:ems-test Sku:ems-1_7_1-ubuntu-16_04 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ev-ev-ems-1_7_0-ubuntu
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'evostream-inc',
	[string]$Offer = 'evostream-media-server',
	[string]$Skus = 'ems-1_7_0-ubuntu',
	[string]$version =  'latest',
	[string]$Product = 'evostream-media-server',
	[string]$name = 'ems-1_7_0-ubuntu'
)
Write-Host "Image Creation in Process - Plan Info - evostream-inc | ems-1_7_0-ubuntu"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: evostream-inc Offer:evostream-media-server Sku:ems-1_7_0-ubuntu Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ev-ev-ems-1_7_0-windows
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'evostream-inc',
	[string]$Offer = 'evostream-media-server',
	[string]$Skus = 'ems-1_7_0-windows',
	[string]$version =  'latest',
	[string]$Product = 'evostream-media-server',
	[string]$name = 'ems-1_7_0-windows'
)
Write-Host "Image Creation in Process - Plan Info - evostream-inc | ems-1_7_0-windows"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: evostream-inc Offer:evostream-media-server Sku:ems-1_7_0-windows Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ev-ev-ems-1_7_1-ubuntu-14_04
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'evostream-inc',
	[string]$Offer = 'evostream-media-server',
	[string]$Skus = 'ems-1_7_1-ubuntu-14_04',
	[string]$version =  'latest',
	[string]$Product = 'evostream-media-server',
	[string]$name = 'ems-1_7_1-ubuntu-14_04'
)
Write-Host "Image Creation in Process - Plan Info - evostream-inc | ems-1_7_1-ubuntu-14_04"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: evostream-inc Offer:evostream-media-server Sku:ems-1_7_1-ubuntu-14_04 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ev-ev-ems-1_7_1-windows
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'evostream-inc',
	[string]$Offer = 'evostream-media-server',
	[string]$Skus = 'ems-1_7_1-windows',
	[string]$version =  'latest',
	[string]$Product = 'evostream-media-server',
	[string]$name = 'ems-1_7_1-windows'
)
Write-Host "Image Creation in Process - Plan Info - evostream-inc | ems-1_7_1-windows"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: evostream-inc Offer:evostream-media-server Sku:ems-1_7_1-windows Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ex-ex-exasolution_database
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'exasol',
	[string]$Offer = 'exasolution-analytic-database',
	[string]$Skus = 'exasolution_database',
	[string]$version =  'latest',
	[string]$Product = 'exasolution-analytic-database',
	[string]$name = 'exasolution_database'
)
Write-Host "Image Creation in Process - Plan Info - exasol | exasolution_database"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: exasol Offer:exasolution-analytic-database Sku:exasolution_database Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ex-ph-photon-vm
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'exit-games',
	[string]$Offer = 'photon-server-vm',
	[string]$Skus = 'photon-vm',
	[string]$version =  'latest',
	[string]$Product = 'photon-server-vm',
	[string]$name = 'photon-vm'
)
Write-Host "Image Creation in Process - Plan Info - exit-games | photon-vm"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: exit-games Offer:photon-server-vm Sku:photon-vm Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ex-ma-vm_magento_pimcore_v0
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'expertime',
	[string]$Offer = 'magento-pimcore-as',
	[string]$Skus = 'vm_magento_pimcore_v0',
	[string]$version =  'latest',
	[string]$Product = 'magento-pimcore-as',
	[string]$name = 'vm_magento_pimcore_v0'
)
Write-Host "Image Creation in Process - Plan Info - expertime | vm_magento_pimcore_v0"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: expertime Offer:magento-pimcore-as Sku:vm_magento_pimcore_v0 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_f5-f5-f5-bigip-virtual-edition-best-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'f5-networks',
	[string]$Offer = 'f5-big-ip',
	[string]$Skus = 'f5-bigip-virtual-edition-best-byol',
	[string]$version =  'latest',
	[string]$Product = 'f5-big-ip',
	[string]$name = 'f5-bigip-virtual-edition-best-byol'
)
Write-Host "Image Creation in Process - Plan Info - f5-networks | f5-bigip-virtual-edition-best-byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: f5-networks Offer:f5-big-ip Sku:f5-bigip-virtual-edition-best-byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_f5-f5-f5-bigip-virtual-edition-better-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'f5-networks',
	[string]$Offer = 'f5-big-ip',
	[string]$Skus = 'f5-bigip-virtual-edition-better-byol',
	[string]$version =  'latest',
	[string]$Product = 'f5-big-ip',
	[string]$name = 'f5-bigip-virtual-edition-better-byol'
)
Write-Host "Image Creation in Process - Plan Info - f5-networks | f5-bigip-virtual-edition-better-byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: f5-networks Offer:f5-big-ip Sku:f5-bigip-virtual-edition-better-byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_f5-f5-f5-bigip-virtual-edition-good-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'f5-networks',
	[string]$Offer = 'f5-big-ip',
	[string]$Skus = 'f5-bigip-virtual-edition-good-byol',
	[string]$version =  'latest',
	[string]$Product = 'f5-big-ip',
	[string]$name = 'f5-bigip-virtual-edition-good-byol'
)
Write-Host "Image Creation in Process - Plan Info - f5-networks | f5-bigip-virtual-edition-good-byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: f5-networks Offer:f5-big-ip Sku:f5-bigip-virtual-edition-good-byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_f5-f5-f5-waf-solution-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'f5-networks',
	[string]$Offer = 'f5-web-application-firewall',
	[string]$Skus = 'f5-waf-solution-byol',
	[string]$version =  'latest',
	[string]$Product = 'f5-web-application-firewall',
	[string]$name = 'f5-waf-solution-byol'
)
Write-Host "Image Creation in Process - Plan Info - f5-networks | f5-waf-solution-byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: f5-networks Offer:f5-web-application-firewall Sku:f5-waf-solution-byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_fi-fi-fidesys-7g
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'fidesys',
	[string]$Offer = 'fidesys',
	[string]$Skus = 'fidesys-7g',
	[string]$version =  'latest',
	[string]$Product = 'fidesys',
	[string]$name = 'fidesys-7g'
)
Write-Host "Image Creation in Process - Plan Info - fidesys | fidesys-7g"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: fidesys Offer:fidesys Sku:fidesys-7g Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_fi-az-10tb
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'filebridge',
	[string]$Offer = 'azure',
	[string]$Skus = '10tb',
	[string]$version =  'latest',
	[string]$Product = 'azure',
	[string]$name = '10tb'
)
Write-Host "Image Creation in Process - Plan Info - filebridge | 10tb"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: filebridge Offer:azure Sku:10tb Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_fi-az-20tb
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'filebridge',
	[string]$Offer = 'azure',
	[string]$Skus = '20tb',
	[string]$version =  'latest',
	[string]$Product = 'azure',
	[string]$name = '20tb'
)
Write-Host "Image Creation in Process - Plan Info - filebridge | 20tb"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: filebridge Offer:azure Sku:20tb Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_fi-az-50tb
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'filebridge',
	[string]$Offer = 'azure',
	[string]$Skus = '50tb',
	[string]$version =  'latest',
	[string]$Product = 'azure',
	[string]$name = '50tb'
)
Write-Host "Image Creation in Process - Plan Info - filebridge | 50tb"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: filebridge Offer:azure Sku:50tb Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_fi-fi-byol_centos6
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'firehost',
	[string]$Offer = 'firehost_armor',
	[string]$Skus = 'byol_centos6',
	[string]$version =  'latest',
	[string]$Product = 'firehost_armor',
	[string]$name = 'byol_centos6'
)
Write-Host "Image Creation in Process - Plan Info - firehost | byol_centos6"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: firehost Offer:firehost_armor Sku:byol_centos6 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_fi-fi-byol_ubuntu
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'firehost',
	[string]$Offer = 'firehost_armor_ubuntu',
	[string]$Skus = 'byol_ubuntu',
	[string]$version =  'latest',
	[string]$Product = 'firehost_armor_ubuntu',
	[string]$name = 'byol_ubuntu'
)
Write-Host "Image Creation in Process - Plan Info - firehost | byol_ubuntu"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: firehost Offer:firehost_armor_ubuntu Sku:byol_ubuntu Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_fi-fi-byol_windows2012r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'firehost',
	[string]$Offer = 'firehost_armor_windows',
	[string]$Skus = 'byol_windows2012r2',
	[string]$version =  'latest',
	[string]$Product = 'firehost_armor_windows',
	[string]$name = 'byol_windows2012r2'
)
Write-Host "Image Creation in Process - Plan Info - firehost | byol_windows2012r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: firehost Offer:firehost_armor_windows Sku:byol_windows2012r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_fl-fl-software-monetization
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'flexerasoftware',
	[string]$Offer = 'flexera-software-licensing',
	[string]$Skus = 'software-monetization',
	[string]$version =  'latest',
	[string]$Product = 'flexera-software-licensing',
	[string]$name = 'software-monetization'
)
Write-Host "Image Creation in Process - Plan Info - flexerasoftware | software-monetization"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: flexerasoftware Offer:flexera-software-licensing Sku:software-monetization Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_fl-fl-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'flowforma',
	[string]$Offer = 'flowformatrial',
	[string]$Skus = 'byol',
	[string]$version =  'latest',
	[string]$Product = 'flowformatrial',
	[string]$name = 'byol'
)
Write-Host "Image Creation in Process - Plan Info - flowforma | byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: flowforma Offer:flowformatrial Sku:byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_fo-fo-foghorn-edm
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'foghorn-systems',
	[string]$Offer = 'foghorn-edge-device-manager',
	[string]$Skus = 'foghorn-edm',
	[string]$version =  'latest',
	[string]$Product = 'foghorn-edge-device-manager',
	[string]$name = 'foghorn-edm'
)
Write-Host "Image Creation in Process - Plan Info - foghorn-systems | foghorn-edm"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: foghorn-systems Offer:foghorn-edge-device-manager Sku:foghorn-edm Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_fo-dy-dynax-dynamics-ax-crm-ios-android-windows-app
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'folio3-dynamics-services',
	[string]$Offer = 'dynax-dynamics-ax-mobile-crm-app',
	[string]$Skus = 'dynax-dynamics-ax-crm-ios-android-windows-app',
	[string]$version =  'latest',
	[string]$Product = 'dynax-dynamics-ax-mobile-crm-app',
	[string]$name = 'dynax-dynamics-ax-crm-ios-android-windows-app'
)
Write-Host "Image Creation in Process - Plan Info - folio3-dynamics-services | dynax-dynamics-ax-crm-ios-android-windows-app"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: folio3-dynamics-services Offer:dynax-dynamics-ax-mobile-crm-app Sku:dynax-dynamics-ax-crm-ios-android-windows-app Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_fo-fo-forscene-edgeserver-20151203
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'forscene',
	[string]$Offer = 'forscene-edgeserver-20151203',
	[string]$Skus = 'forscene-edgeserver-20151203',
	[string]$version =  'latest',
	[string]$Product = 'forscene-edgeserver-20151203',
	[string]$name = 'forscene-edgeserver-20151203'
)
Write-Host "Image Creation in Process - Plan Info - forscene | forscene-edgeserver-20151203"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: forscene Offer:forscene-edgeserver-20151203 Sku:forscene-edgeserver-20151203 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_fo-fo-fortinet-fortianalyzer
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'fortinet',
	[string]$Offer = 'fortinet-fortianalyzer',
	[string]$Skus = 'fortinet-fortianalyzer',
	[string]$version =  'latest',
	[string]$Product = 'fortinet-fortianalyzer',
	[string]$name = 'fortinet-fortianalyzer'
)
Write-Host "Image Creation in Process - Plan Info - fortinet | fortinet-fortianalyzer"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: fortinet Offer:fortinet-fortianalyzer Sku:fortinet-fortianalyzer Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_fo-fo-fortinet-fortimanager
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'fortinet',
	[string]$Offer = 'fortinet-fortimanager',
	[string]$Skus = 'fortinet-fortimanager',
	[string]$version =  'latest',
	[string]$Product = 'fortinet-fortimanager',
	[string]$name = 'fortinet-fortimanager'
)
Write-Host "Image Creation in Process - Plan Info - fortinet | fortinet-fortimanager"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: fortinet Offer:fortinet-fortimanager Sku:fortinet-fortimanager Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_fo-fo-fortinet_fg-vm
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'fortinet',
	[string]$Offer = 'fortinet_fortigate-vm_v5',
	[string]$Skus = 'fortinet_fg-vm',
	[string]$version =  'latest',
	[string]$Product = 'fortinet_fortigate-vm_v5',
	[string]$name = 'fortinet_fg-vm'
)
Write-Host "Image Creation in Process - Plan Info - fortinet | fortinet_fg-vm"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: fortinet Offer:fortinet_fortigate-vm_v5 Sku:fortinet_fg-vm Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_fo-fo-fortinet_fortimail
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'fortinet',
	[string]$Offer = 'fortinet_fortimail',
	[string]$Skus = 'fortinet_fortimail',
	[string]$version =  'latest',
	[string]$Product = 'fortinet_fortimail',
	[string]$name = 'fortinet_fortimail'
)
Write-Host "Image Creation in Process - Plan Info - fortinet | fortinet_fortimail"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: fortinet Offer:fortinet_fortimail Sku:fortinet_fortimail Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_fo-fo-fortinet_fw-vm
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'fortinet',
	[string]$Offer = 'fortinet_fortiweb-vm_v5',
	[string]$Skus = 'fortinet_fw-vm',
	[string]$version =  'latest',
	[string]$Product = 'fortinet_fortiweb-vm_v5',
	[string]$name = 'fortinet_fw-vm'
)
Write-Host "Image Creation in Process - Plan Info - fortinet | fortinet_fw-vm"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: fortinet Offer:fortinet_fortiweb-vm_v5 Sku:fortinet_fw-vm Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_fo-fw-fwb-vm-asc-test
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'fortinet',
	[string]$Offer = 'fwb-vm-asc-testing',
	[string]$Skus = 'fwb-vm-asc-test',
	[string]$version =  'latest',
	[string]$Product = 'fwb-vm-asc-testing',
	[string]$name = 'fwb-vm-asc-test'
)
Write-Host "Image Creation in Process - Plan Info - fortinet | fwb-vm-asc-test"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: fortinet Offer:fwb-vm-asc-testing Sku:fwb-vm-asc-test Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_fo-fo-fcgwentbyol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'fortycloud',
	[string]$Offer = 'fortycloud-gw',
	[string]$Skus = 'fcgwentbyol',
	[string]$version =  'latest',
	[string]$Product = 'fortycloud-gw',
	[string]$name = 'fcgwentbyol'
)
Write-Host "Image Creation in Process - Plan Info - fortycloud | fcgwentbyol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: fortycloud Offer:fortycloud-gw Sku:fcgwentbyol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_fw-di-fwam-dam80-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'fw',
	[string]$Offer = 'digital-asset-management',
	[string]$Skus = 'fwam-dam80-byol',
	[string]$version =  'latest',
	[string]$Product = 'digital-asset-management',
	[string]$name = 'fwam-dam80-byol'
)
Write-Host "Image Creation in Process - Plan Info - fw | fwam-dam80-byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: fw Offer:digital-asset-management Sku:fwam-dam80-byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_g--g--gdata-managemend-server
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'g-data-software',
	[string]$Offer = 'g-data-management',
	[string]$Skus = 'gdata-managemend-server',
	[string]$version =  'latest',
	[string]$Product = 'g-data-management',
	[string]$name = 'gdata-managemend-server'
)
Write-Host "Image Creation in Process - Plan Info - g-data-software | gdata-managemend-server"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: g-data-software Offer:g-data-management Sku:gdata-managemend-server Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ge-sa-100_protectv_clients
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'gemalto-safenet',
	[string]$Offer = 'safenet-protectv',
	[string]$Skus = '100_protectv_clients',
	[string]$version =  'latest',
	[string]$Product = 'safenet-protectv',
	[string]$name = '100_protectv_clients'
)
Write-Host "Image Creation in Process - Plan Info - gemalto-safenet | 100_protectv_clients"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: gemalto-safenet Offer:safenet-protectv Sku:100_protectv_clients Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ge-sa-200_protectv_clients
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'gemalto-safenet',
	[string]$Offer = 'safenet-protectv',
	[string]$Skus = '200_protectv_clients',
	[string]$version =  'latest',
	[string]$Product = 'safenet-protectv',
	[string]$name = '200_protectv_clients'
)
Write-Host "Image Creation in Process - Plan Info - gemalto-safenet | 200_protectv_clients"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: gemalto-safenet Offer:safenet-protectv Sku:200_protectv_clients Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ge-sa-50_protectv_clients
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'gemalto-safenet',
	[string]$Offer = 'safenet-protectv',
	[string]$Skus = '50_protectv_clients',
	[string]$version =  'latest',
	[string]$Product = 'safenet-protectv',
	[string]$name = '50_protectv_clients'
)
Write-Host "Image Creation in Process - Plan Info - gemalto-safenet | 50_protectv_clients"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: gemalto-safenet Offer:safenet-protectv Sku:50_protectv_clients Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ge-sa-safenet_protectv
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'gemalto-safenet',
	[string]$Offer = 'safenet-protectv-manager',
	[string]$Skus = 'safenet_protectv',
	[string]$version =  'latest',
	[string]$Product = 'safenet-protectv-manager',
	[string]$name = 'safenet_protectv'
)
Write-Host "Image Creation in Process - Plan Info - gemalto-safenet | safenet_protectv"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: gemalto-safenet Offer:safenet-protectv-manager Sku:safenet_protectv Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Gi-Gi-GitHub-Enterprise
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'GitHub',
	[string]$Offer = 'GitHub-Enterprise',
	[string]$Skus = 'GitHub-Enterprise',
	[string]$version =  'latest',
	[string]$Product = 'GitHub-Enterprise',
	[string]$name = 'GitHub-Enterprise'
)
Write-Host "Image Creation in Process - Plan Info - GitHub | GitHub-Enterprise"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: GitHub Offer:GitHub-Enterprise Sku:GitHub-Enterprise Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_gi-gi-gitlab-ce
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'gitlab',
	[string]$Offer = 'gitlab-ce',
	[string]$Skus = 'gitlab-ce',
	[string]$version =  'latest',
	[string]$Product = 'gitlab-ce',
	[string]$name = 'gitlab-ce'
)
Write-Host "Image Creation in Process - Plan Info - gitlab | gitlab-ce"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: gitlab Offer:gitlab-ce Sku:gitlab-ce Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_gi-gi-gitlab-ee
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'gitlab',
	[string]$Offer = 'gitlab-ee',
	[string]$Skus = 'gitlab-ee',
	[string]$version =  'latest',
	[string]$Product = 'gitlab-ee',
	[string]$name = 'gitlab-ee'
)
Write-Host "Image Creation in Process - Plan Info - gitlab | gitlab-ee"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: gitlab Offer:gitlab-ee Sku:gitlab-ee Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_gl-ef-gseft-n-caz
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'globalscape',
	[string]$Offer = 'eftenterprise',
	[string]$Skus = 'gseft-n-caz',
	[string]$version =  'latest',
	[string]$Product = 'eftenterprise',
	[string]$name = 'gseft-n-caz'
)
Write-Host "Image Creation in Process - Plan Info - globalscape | gseft-n-caz"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: globalscape Offer:eftenterprise Sku:gseft-n-caz Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_gr-gr-greathorn
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'greathorn',
	[string]$Offer = 'greathorn-security-platform',
	[string]$Skus = 'greathorn',
	[string]$version =  'latest',
	[string]$Product = 'greathorn-security-platform',
	[string]$name = 'greathorn'
)
Write-Host "Image Creation in Process - Plan Info - greathorn | greathorn"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: greathorn Offer:greathorn-security-platform Sku:greathorn Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_gr-gr-greensql_database_security_azure
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'greensql',
	[string]$Offer = 'greensql-database-security',
	[string]$Skus = 'greensql_database_security_azure',
	[string]$version =  'latest',
	[string]$Product = 'greensql-database-security',
	[string]$name = 'greensql_database_security_azure'
)
Write-Host "Image Creation in Process - Plan Info - greensql | greensql_database_security_azure"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: greensql Offer:greensql-database-security Sku:greensql_database_security_azure Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_gr-gr-gridgain-vm-02
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'gridgain',
	[string]$Offer = 'gridgain-vm',
	[string]$Skus = 'gridgain-vm-02',
	[string]$version =  'latest',
	[string]$Product = 'gridgain-vm',
	[string]$name = 'gridgain-vm-02'
)
Write-Host "Image Creation in Process - Plan Info - gridgain | gridgain-vm-02"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: gridgain Offer:gridgain-vm Sku:gridgain-vm-02 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_gr-gr-gridgain-vm-756-rev2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'gridgain',
	[string]$Offer = 'gridgain-vm',
	[string]$Skus = 'gridgain-vm-756-rev2',
	[string]$version =  'latest',
	[string]$Product = 'gridgain-vm',
	[string]$name = 'gridgain-vm-756-rev2'
)
Write-Host "Image Creation in Process - Plan Info - gridgain | gridgain-vm-756-rev2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: gridgain Offer:gridgain-vm Sku:gridgain-vm-756-rev2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_gr-gr-gridgain-vm-764
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'gridgain',
	[string]$Offer = 'gridgain-vm',
	[string]$Skus = 'gridgain-vm-764',
	[string]$version =  'latest',
	[string]$Product = 'gridgain-vm',
	[string]$name = 'gridgain-vm-764'
)
Write-Host "Image Creation in Process - Plan Info - gridgain | gridgain-vm-764"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: gridgain Offer:gridgain-vm Sku:gridgain-vm-764 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_gr-gr-gridgain-vm-764-rev2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'gridgain',
	[string]$Offer = 'gridgain-vm',
	[string]$Skus = 'gridgain-vm-764-rev2',
	[string]$version =  'latest',
	[string]$Product = 'gridgain-vm',
	[string]$name = 'gridgain-vm-764-rev2'
)
Write-Host "Image Creation in Process - Plan Info - gridgain | gridgain-vm-764-rev2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: gridgain Offer:gridgain-vm Sku:gridgain-vm-764-rev2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_gr-gr-gridgain-vm-764-rev2-hidden
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'gridgain',
	[string]$Offer = 'gridgain-vm',
	[string]$Skus = 'gridgain-vm-764-rev2-hidden',
	[string]$version =  'latest',
	[string]$Product = 'gridgain-vm',
	[string]$name = 'gridgain-vm-764-rev2-hidden'
)
Write-Host "Image Creation in Process - Plan Info - gridgain | gridgain-vm-764-rev2-hidden"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: gridgain Offer:gridgain-vm Sku:gridgain-vm-764-rev2-hidden Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ha-ha-mi-mg-azu-1-2-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'haivision',
	[string]$Offer = 'haivision-media-gateway-1-2',
	[string]$Skus = 'mi-mg-azu-1-2-byol',
	[string]$version =  'latest',
	[string]$Product = 'haivision-media-gateway-1-2',
	[string]$name = 'mi-mg-azu-1-2-byol'
)
Write-Host "Image Creation in Process - Plan Info - haivision | mi-mg-azu-1-2-byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: haivision Offer:haivision-media-gateway-1-2 Sku:mi-mg-azu-1-2-byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ha-me-mi-mg-azu-1-1-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'haivision',
	[string]$Offer = 'media-gateway',
	[string]$Skus = 'mi-mg-azu-1-1-byol',
	[string]$version =  'latest',
	[string]$Product = 'media-gateway',
	[string]$name = 'mi-mg-azu-1-1-byol'
)
Write-Host "Image Creation in Process - Plan Info - haivision | mi-mg-azu-1-1-byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: haivision Offer:media-gateway Sku:mi-mg-azu-1-1-byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ha-ha-halopaas02
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'halobicloud',
	[string]$Offer = 'halo-paas2',
	[string]$Skus = 'halopaas02',
	[string]$version =  'latest',
	[string]$Product = 'halo-paas2',
	[string]$name = 'halopaas02'
)
Write-Host "Image Creation in Process - Plan Info - halobicloud | halopaas02"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: halobicloud Offer:halo-paas2 Sku:halopaas02 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ha-ha-enterprise
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'hanu',
	[string]$Offer = 'hanu-insight',
	[string]$Skus = 'enterprise',
	[string]$version =  'latest',
	[string]$Product = 'hanu-insight',
	[string]$name = 'enterprise'
)
Write-Host "Image Creation in Process - Plan Info - hanu | enterprise"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: hanu Offer:hanu-insight Sku:enterprise Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ha-ha-enterprise-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'hanu',
	[string]$Offer = 'hanu-insight',
	[string]$Skus = 'enterprise-byol',
	[string]$version =  'latest',
	[string]$Product = 'hanu-insight',
	[string]$name = 'enterprise-byol'
)
Write-Host "Image Creation in Process - Plan Info - hanu | enterprise-byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: hanu Offer:hanu-insight Sku:enterprise-byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ha-ha-standard
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'hanu',
	[string]$Offer = 'hanu-insight',
	[string]$Skus = 'standard',
	[string]$version =  'latest',
	[string]$Product = 'hanu-insight',
	[string]$name = 'standard'
)
Write-Host "Image Creation in Process - Plan Info - hanu | standard"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: hanu Offer:hanu-insight Sku:standard Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ha-ha-standard-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'hanu',
	[string]$Offer = 'hanu-insight',
	[string]$Skus = 'standard-byol',
	[string]$version =  'latest',
	[string]$Product = 'hanu-insight',
	[string]$name = 'standard-byol'
)
Write-Host "Image Creation in Process - Plan Info - hanu | standard-byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: hanu Offer:hanu-insight Sku:standard-byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_he-hp-lr_12_02_ga_2012r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'hewlett-packard',
	[string]$Offer = 'hp-loadrunner',
	[string]$Skus = 'lr_12_02_ga_2012r2',
	[string]$version =  'latest',
	[string]$Product = 'hp-loadrunner',
	[string]$name = 'lr_12_02_ga_2012r2'
)
Write-Host "Image Creation in Process - Plan Info - hewlett-packard | lr_12_02_ga_2012r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: hewlett-packard Offer:hp-loadrunner Sku:lr_12_02_ga_2012r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_he-hp-hp_qc_community_edition
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'hewlett-packard',
	[string]$Offer = 'hp-quality-center',
	[string]$Skus = 'hp_qc_community_edition',
	[string]$version =  'latest',
	[string]$Product = 'hp-quality-center',
	[string]$name = 'hp_qc_community_edition'
)
Write-Host "Image Creation in Process - Plan Info - hewlett-packard | hp_qc_community_edition"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: hewlett-packard Offer:hp-quality-center Sku:hp_qc_community_edition Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_he-hp-hpe-helion-stackato-362
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'hewlett-packard',
	[string]$Offer = 'hpe-helion-stackato',
	[string]$Skus = 'hpe-helion-stackato-362',
	[string]$version =  'latest',
	[string]$Product = 'hpe-helion-stackato',
	[string]$name = 'hpe-helion-stackato-362'
)
Write-Host "Image Creation in Process - Plan Info - hewlett-packard | hpe-helion-stackato-362"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: hewlett-packard Offer:hpe-helion-stackato Sku:hpe-helion-stackato-362 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_hi-cr-credeonsfs-12-elasticsearch-linux
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'hitachi-solutions',
	[string]$Offer = 'credeonsecurefull-textsearch1_0',
	[string]$Skus = 'credeonsfs-12-elasticsearch-linux',
	[string]$version =  'latest',
	[string]$Product = 'credeonsecurefull-textsearch1_0',
	[string]$name = 'credeonsfs-12-elasticsearch-linux'
)
Write-Host "Image Creation in Process - Plan Info - hitachi-solutions | credeonsfs-12-elasticsearch-linux"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: hitachi-solutions Offer:credeonsecurefull-textsearch1_0 Sku:credeonsfs-12-elasticsearch-linux Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_hi-cr-credeonsfs-12-elasticsearch-windows
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'hitachi-solutions',
	[string]$Offer = 'credeonsecurefull-textsearch1_0',
	[string]$Skus = 'credeonsfs-12-elasticsearch-windows',
	[string]$version =  'latest',
	[string]$Product = 'credeonsecurefull-textsearch1_0',
	[string]$name = 'credeonsfs-12-elasticsearch-windows'
)
Write-Host "Image Creation in Process - Plan Info - hitachi-solutions | credeonsfs-12-elasticsearch-windows"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: hitachi-solutions Offer:credeonsecurefull-textsearch1_0 Sku:credeonsfs-12-elasticsearch-windows Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_hi-cr-credeonsfs-12-solr-linux
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'hitachi-solutions',
	[string]$Offer = 'credeonsecurefull-textsearch1_0',
	[string]$Skus = 'credeonsfs-12-solr-linux',
	[string]$version =  'latest',
	[string]$Product = 'credeonsecurefull-textsearch1_0',
	[string]$name = 'credeonsfs-12-solr-linux'
)
Write-Host "Image Creation in Process - Plan Info - hitachi-solutions | credeonsfs-12-solr-linux"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: hitachi-solutions Offer:credeonsecurefull-textsearch1_0 Sku:credeonsfs-12-solr-linux Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_hi-cr-credeonsfs-12-solr-windows
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'hitachi-solutions',
	[string]$Offer = 'credeonsecurefull-textsearch1_0',
	[string]$Skus = 'credeonsfs-12-solr-windows',
	[string]$version =  'latest',
	[string]$Product = 'credeonsecurefull-textsearch1_0',
	[string]$name = 'credeonsfs-12-solr-windows'
)
Write-Host "Image Creation in Process - Plan Info - hitachi-solutions | credeonsfs-12-solr-windows"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: hitachi-solutions Offer:credeonsecurefull-textsearch1_0 Sku:credeonsfs-12-solr-windows Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_hi-cr-credeonsfs-13-elasticsearch-linux
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'hitachi-solutions',
	[string]$Offer = 'credeonsecurefull-textsearch1_0',
	[string]$Skus = 'credeonsfs-13-elasticsearch-linux',
	[string]$version =  'latest',
	[string]$Product = 'credeonsecurefull-textsearch1_0',
	[string]$name = 'credeonsfs-13-elasticsearch-linux'
)
Write-Host "Image Creation in Process - Plan Info - hitachi-solutions | credeonsfs-13-elasticsearch-linux"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: hitachi-solutions Offer:credeonsecurefull-textsearch1_0 Sku:credeonsfs-13-elasticsearch-linux Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_hi-cr-credeonsfs-13-elasticsearch-windows
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'hitachi-solutions',
	[string]$Offer = 'credeonsecurefull-textsearch1_0',
	[string]$Skus = 'credeonsfs-13-elasticsearch-windows',
	[string]$version =  'latest',
	[string]$Product = 'credeonsecurefull-textsearch1_0',
	[string]$name = 'credeonsfs-13-elasticsearch-windows'
)
Write-Host "Image Creation in Process - Plan Info - hitachi-solutions | credeonsfs-13-elasticsearch-windows"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: hitachi-solutions Offer:credeonsecurefull-textsearch1_0 Sku:credeonsfs-13-elasticsearch-windows Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_hi-cr-credeonsfs-13-solr-linux
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'hitachi-solutions',
	[string]$Offer = 'credeonsecurefull-textsearch1_0',
	[string]$Skus = 'credeonsfs-13-solr-linux',
	[string]$version =  'latest',
	[string]$Product = 'credeonsecurefull-textsearch1_0',
	[string]$name = 'credeonsfs-13-solr-linux'
)
Write-Host "Image Creation in Process - Plan Info - hitachi-solutions | credeonsfs-13-solr-linux"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: hitachi-solutions Offer:credeonsecurefull-textsearch1_0 Sku:credeonsfs-13-solr-linux Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_hi-cr-credeonsfs-13-solr-windows
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'hitachi-solutions',
	[string]$Offer = 'credeonsecurefull-textsearch1_0',
	[string]$Skus = 'credeonsfs-13-solr-windows',
	[string]$version =  'latest',
	[string]$Product = 'credeonsecurefull-textsearch1_0',
	[string]$name = 'credeonsfs-13-solr-windows'
)
Write-Host "Image Creation in Process - Plan Info - hitachi-solutions | credeonsfs-13-solr-windows"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: hitachi-solutions Offer:credeonsecurefull-textsearch1_0 Sku:credeonsfs-13-solr-windows Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ho-hd-hdpimage
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'hortonworks',
	[string]$Offer = 'hdpimage',
	[string]$Skus = 'hdpimage',
	[string]$version =  'latest',
	[string]$Product = 'hdpimage',
	[string]$name = 'hdpimage'
)
Write-Host "Image Creation in Process - Plan Info - hortonworks | hdpimage"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: hortonworks Offer:hdpimage Sku:hdpimage Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ho-ho-hdp-240-ambari-221
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'hortonworks',
	[string]$Offer = 'hortonworks-data-platform-240',
	[string]$Skus = 'hdp-240-ambari-221',
	[string]$version =  'latest',
	[string]$Product = 'hortonworks-data-platform-240',
	[string]$name = 'hdp-240-ambari-221'
)
Write-Host "Image Creation in Process - Plan Info - hortonworks | hdp-240-ambari-221"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: hortonworks Offer:hortonworks-data-platform-240 Sku:hdp-240-ambari-221 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ho-ho-sandbox22
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'hortonworks',
	[string]$Offer = 'hortonworks-sandbox',
	[string]$Skus = 'sandbox22',
	[string]$version =  'latest',
	[string]$Product = 'hortonworks-sandbox',
	[string]$name = 'sandbox22'
)
Write-Host "Image Creation in Process - Plan Info - hortonworks | sandbox22"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: hortonworks Offer:hortonworks-sandbox Sku:sandbox22 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_hp-ar-arcsight-esm-691
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'hpe',
	[string]$Offer = 'arcsight-esm-691',
	[string]$Skus = 'arcsight-esm-691',
	[string]$version =  'latest',
	[string]$Product = 'arcsight-esm-691',
	[string]$name = 'arcsight-esm-691'
)
Write-Host "Image Creation in Process - Plan Info - hpe | arcsight-esm-691"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: hpe Offer:arcsight-esm-691 Sku:arcsight-esm-691 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_hp-ar-arcsightlogger62
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'hpe',
	[string]$Offer = 'arcsight-logger-62',
	[string]$Skus = 'arcsightlogger62',
	[string]$version =  'latest',
	[string]$Product = 'arcsight-logger-62',
	[string]$name = 'arcsightlogger62'
)
Write-Host "Image Creation in Process - Plan Info - hpe | arcsightlogger62"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: hpe Offer:arcsight-logger-62 Sku:arcsightlogger62 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_hp-hp-hpe-arcsight-logger
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'hpe',
	[string]$Offer = 'hpe-arcsight-logger',
	[string]$Skus = 'hpe-arcsight-logger',
	[string]$version =  'latest',
	[string]$Product = 'hpe-arcsight-logger',
	[string]$name = 'hpe-arcsight-logger'
)
Write-Host "Image Creation in Process - Plan Info - hpe | hpe-arcsight-logger"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: hpe Offer:hpe-arcsight-logger Sku:hpe-arcsight-logger Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_hp-hp-hpe-arcmc-22
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'hpe',
	[string]$Offer = 'hpe-arcsight-mc',
	[string]$Skus = 'hpe-arcmc-22',
	[string]$version =  'latest',
	[string]$Product = 'hpe-arcsight-mc',
	[string]$name = 'hpe-arcmc-22'
)
Write-Host "Image Creation in Process - Plan Info - hpe | hpe-arcmc-22"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: hpe Offer:hpe-arcsight-mc Sku:hpe-arcmc-22 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_hu-em-emada
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'humanlogic',
	[string]$Offer = 'emadastudentinformationsystem',
	[string]$Skus = 'emada',
	[string]$version =  'latest',
	[string]$Product = 'emadastudentinformationsystem',
	[string]$name = 'emada'
)
Write-Host "Image Creation in Process - Plan Info - humanlogic | emada"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: humanlogic Offer:emadastudentinformationsystem Sku:emada Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ia-ia-iaansys-magento-ubuntu
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'iaansys',
	[string]$Offer = 'iaansys-magento',
	[string]$Skus = 'iaansys-magento-ubuntu',
	[string]$version =  'latest',
	[string]$Product = 'iaansys-magento',
	[string]$name = 'iaansys-magento-ubuntu'
)
Write-Host "Image Creation in Process - Plan Info - iaansys | iaansys-magento-ubuntu"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: iaansys Offer:iaansys-magento Sku:iaansys-magento-ubuntu Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ia-un-university-for-life
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'iamcloud',
	[string]$Offer = 'university-for-life',
	[string]$Skus = 'university-for-life',
	[string]$version =  'latest',
	[string]$Product = 'university-for-life',
	[string]$name = 'university-for-life'
)
Write-Host "Image Creation in Process - Plan Info - iamcloud | university-for-life"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: iamcloud Offer:university-for-life Sku:university-for-life Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ib-ib-ibabs-server-15-users-hourly
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'ibabs-eu',
	[string]$Offer = 'ibabs-server',
	[string]$Skus = 'ibabs-server-15-users-hourly',
	[string]$version =  'latest',
	[string]$Product = 'ibabs-server',
	[string]$name = 'ibabs-server-15-users-hourly'
)
Write-Host "Image Creation in Process - Plan Info - ibabs-eu | ibabs-server-15-users-hourly"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: ibabs-eu Offer:ibabs-server Sku:ibabs-server-15-users-hourly Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_im-cl-telurio-packager-jitp
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'imaginecommunications',
	[string]$Offer = 'cloudxtream-cdvr',
	[string]$Skus = 'telurio-packager-jitp',
	[string]$version =  'latest',
	[string]$Product = 'cloudxtream-cdvr',
	[string]$name = 'telurio-packager-jitp'
)
Write-Host "Image Creation in Process - Plan Info - imaginecommunications | telurio-packager-jitp"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: imaginecommunications Offer:cloudxtream-cdvr Sku:telurio-packager-jitp Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_im-cl-telurio-record-recorder
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'imaginecommunications',
	[string]$Offer = 'cloudxtream-cdvr',
	[string]$Skus = 'telurio-record-recorder',
	[string]$version =  'latest',
	[string]$Product = 'cloudxtream-cdvr',
	[string]$name = 'telurio-record-recorder'
)
Write-Host "Image Creation in Process - Plan Info - imaginecommunications | telurio-record-recorder"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: imaginecommunications Offer:cloudxtream-cdvr Sku:telurio-record-recorder Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_im-cl-telurio-record-recording-manager
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'imaginecommunications',
	[string]$Offer = 'cloudxtream-cdvr',
	[string]$Skus = 'telurio-record-recording-manager',
	[string]$version =  'latest',
	[string]$Product = 'cloudxtream-cdvr',
	[string]$name = 'telurio-record-recording-manager'
)
Write-Host "Image Creation in Process - Plan Info - imaginecommunications | telurio-record-recording-manager"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: imaginecommunications Offer:cloudxtream-cdvr Sku:telurio-record-recording-manager Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_im-se-selenioflex-live-transcoder
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'imaginecommunications',
	[string]$Offer = 'selenioflex-live',
	[string]$Skus = 'selenioflex-live-transcoder',
	[string]$version =  'latest',
	[string]$Product = 'selenioflex-live',
	[string]$name = 'selenioflex-live-transcoder'
)
Write-Host "Image Creation in Process - Plan Info - imaginecommunications | selenioflex-live-transcoder"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: imaginecommunications Offer:selenioflex-live Sku:selenioflex-live-transcoder Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_im-se-selenioflexlive-manager
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'imaginecommunications',
	[string]$Offer = 'selenioflex-live',
	[string]$Skus = 'selenioflexlive-manager',
	[string]$version =  'latest',
	[string]$Product = 'selenioflex-live',
	[string]$name = 'selenioflexlive-manager'
)
Write-Host "Image Creation in Process - Plan Info - imaginecommunications | selenioflexlive-manager"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: imaginecommunications Offer:selenioflex-live Sku:selenioflexlive-manager Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_im-te-telurio-aim-awe
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'imaginecommunications',
	[string]$Offer = 'telurio-aim',
	[string]$Skus = 'telurio-aim-awe',
	[string]$version =  'latest',
	[string]$Product = 'telurio-aim',
	[string]$name = 'telurio-aim-awe'
)
Write-Host "Image Creation in Process - Plan Info - imaginecommunications | telurio-aim-awe"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: imaginecommunications Offer:telurio-aim Sku:telurio-aim-awe Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_im-te-telurio-aim-origin
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'imaginecommunications',
	[string]$Offer = 'telurio-aim',
	[string]$Skus = 'telurio-aim-origin',
	[string]$version =  'latest',
	[string]$Product = 'telurio-aim',
	[string]$name = 'telurio-aim-origin'
)
Write-Host "Image Creation in Process - Plan Info - imaginecommunications | telurio-aim-origin"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: imaginecommunications Offer:telurio-aim Sku:telurio-aim-origin Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_im-te-telurio-aim-ps
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'imaginecommunications',
	[string]$Offer = 'telurio-aim',
	[string]$Skus = 'telurio-aim-ps',
	[string]$version =  'latest',
	[string]$Product = 'telurio-aim',
	[string]$name = 'telurio-aim-ps'
)
Write-Host "Image Creation in Process - Plan Info - imaginecommunications | telurio-aim-ps"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: imaginecommunications Offer:telurio-aim Sku:telurio-aim-ps Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_im-ve-versio
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'imaginecommunications',
	[string]$Offer = 'versio-3-0',
	[string]$Skus = 'versio',
	[string]$version =  'latest',
	[string]$Product = 'versio-3-0',
	[string]$name = 'versio'
)
Write-Host "Image Creation in Process - Plan Info - imaginecommunications | versio"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: imaginecommunications Offer:versio-3-0 Sku:versio Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_im-im-imc_pgs41_l
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'imc',
	[string]$Offer = 'imc-process-guidance-suite',
	[string]$Skus = 'imc_pgs41_l',
	[string]$version =  'latest',
	[string]$Product = 'imc-process-guidance-suite',
	[string]$name = 'imc_pgs41_l'
)
Write-Host "Image Creation in Process - Plan Info - imc | imc_pgs41_l"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: imc Offer:imc-process-guidance-suite Sku:imc_pgs41_l Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_im-im-imc_pgs41_m
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'imc',
	[string]$Offer = 'imc-process-guidance-suite',
	[string]$Skus = 'imc_pgs41_m',
	[string]$version =  'latest',
	[string]$Product = 'imc-process-guidance-suite',
	[string]$name = 'imc_pgs41_m'
)
Write-Host "Image Creation in Process - Plan Info - imc | imc_pgs41_m"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: imc Offer:imc-process-guidance-suite Sku:imc_pgs41_m Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_im-im-imc_pgs41_s
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'imc',
	[string]$Offer = 'imc-process-guidance-suite',
	[string]$Skus = 'imc_pgs41_s',
	[string]$version =  'latest',
	[string]$Product = 'imc-process-guidance-suite',
	[string]$name = 'imc_pgs41_s'
)
Write-Host "Image Creation in Process - Plan Info - imc | imc_pgs41_s"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: imc Offer:imc-process-guidance-suite Sku:imc_pgs41_s Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_im-im-imc_pgs41_xs
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'imc',
	[string]$Offer = 'imc-process-guidance-suite',
	[string]$Skus = 'imc_pgs41_xs',
	[string]$version =  'latest',
	[string]$Product = 'imc-process-guidance-suite',
	[string]$name = 'imc_pgs41_xs'
)
Write-Host "Image Creation in Process - Plan Info - imc | imc_pgs41_xs"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: imc Offer:imc-process-guidance-suite Sku:imc_pgs41_xs Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_im-se-imperva-securesphere-waf-1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'imperva',
	[string]$Offer = 'securesphere-waf',
	[string]$Skus = 'imperva-securesphere-waf-1',
	[string]$version =  'latest',
	[string]$Product = 'securesphere-waf',
	[string]$name = 'imperva-securesphere-waf-1'
)
Write-Host "Image Creation in Process - Plan Info - imperva | imperva-securesphere-waf-1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: imperva Offer:securesphere-waf Sku:imperva-securesphere-waf-1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_im-se-imperva-securesphere-waf-for-azr-v1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'imperva',
	[string]$Offer = 'securesphere-waf-for-azr',
	[string]$Skus = 'imperva-securesphere-waf-for-azr-v1',
	[string]$version =  'latest',
	[string]$Product = 'securesphere-waf-for-azr',
	[string]$name = 'imperva-securesphere-waf-for-azr-v1'
)
Write-Host "Image Creation in Process - Plan Info - imperva | imperva-securesphere-waf-for-azr-v1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: imperva Offer:securesphere-waf-for-azr Sku:imperva-securesphere-waf-for-azr-v1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_in-in-incredibuild
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'incredibuild',
	[string]$Offer = 'incredibuild',
	[string]$Skus = 'incredibuild',
	[string]$version =  'latest',
	[string]$Product = 'incredibuild',
	[string]$name = 'incredibuild'
)
Write-Host "Image Creation in Process - Plan Info - incredibuild | incredibuild"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: incredibuild Offer:incredibuild Sku:incredibuild Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_in-in-vnios-cp-v1400
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'infoblox',
	[string]$Offer = 'infoblox-vnios-te-v1420',
	[string]$Skus = 'vnios-cp-v1400',
	[string]$version =  'latest',
	[string]$Product = 'infoblox-vnios-te-v1420',
	[string]$name = 'vnios-cp-v1400'
)
Write-Host "Image Creation in Process - Plan Info - infoblox | vnios-cp-v1400"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: infoblox Offer:infoblox-vnios-te-v1420 Sku:vnios-cp-v1400 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_in-in-vnios-cp-v2200
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'infoblox',
	[string]$Offer = 'infoblox-vnios-te-v1420',
	[string]$Skus = 'vnios-cp-v2200',
	[string]$version =  'latest',
	[string]$Product = 'infoblox-vnios-te-v1420',
	[string]$name = 'vnios-cp-v2200'
)
Write-Host "Image Creation in Process - Plan Info - infoblox | vnios-cp-v2200"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: infoblox Offer:infoblox-vnios-te-v1420 Sku:vnios-cp-v2200 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_in-in-vnios-cp-v800
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'infoblox',
	[string]$Offer = 'infoblox-vnios-te-v1420',
	[string]$Skus = 'vnios-cp-v800',
	[string]$version =  'latest',
	[string]$Product = 'infoblox-vnios-te-v1420',
	[string]$name = 'vnios-cp-v800'
)
Write-Host "Image Creation in Process - Plan Info - infoblox | vnios-cp-v800"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: infoblox Offer:infoblox-vnios-te-v1420 Sku:vnios-cp-v800 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_in-in-vnios-te-v1420
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'infoblox',
	[string]$Offer = 'infoblox-vnios-te-v1420',
	[string]$Skus = 'vnios-te-v1420',
	[string]$version =  'latest',
	[string]$Product = 'infoblox-vnios-te-v1420',
	[string]$name = 'vnios-te-v1420'
)
Write-Host "Image Creation in Process - Plan Info - infoblox | vnios-te-v1420"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: infoblox Offer:infoblox-vnios-te-v1420 Sku:vnios-te-v1420 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_in-in-vnios-te-v2220
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'infoblox',
	[string]$Offer = 'infoblox-vnios-te-v1420',
	[string]$Skus = 'vnios-te-v2220',
	[string]$version =  'latest',
	[string]$Product = 'infoblox-vnios-te-v1420',
	[string]$name = 'vnios-te-v2220'
)
Write-Host "Image Creation in Process - Plan Info - infoblox | vnios-te-v2220"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: infoblox Offer:infoblox-vnios-te-v1420 Sku:vnios-te-v2220 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_in-in-vnios-te-v820
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'infoblox',
	[string]$Offer = 'infoblox-vnios-te-v1420',
	[string]$Skus = 'vnios-te-v820',
	[string]$version =  'latest',
	[string]$Product = 'infoblox-vnios-te-v1420',
	[string]$name = 'vnios-te-v820'
)
Write-Host "Image Creation in Process - Plan Info - infoblox | vnios-te-v820"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: infoblox Offer:infoblox-vnios-te-v1420 Sku:vnios-te-v820 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_in-in-infolibrarian-metadata-windows-64-bit-hourly
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'infolibrarian',
	[string]$Offer = 'infolibrarian-metadata-management-server',
	[string]$Skus = 'infolibrarian-metadata-windows-64-bit-hourly',
	[string]$version =  'latest',
	[string]$Product = 'infolibrarian-metadata-management-server',
	[string]$name = 'infolibrarian-metadata-windows-64-bit-hourly'
)
Write-Host "Image Creation in Process - Plan Info - infolibrarian | infolibrarian-metadata-windows-64-bit-hourly"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: infolibrarian Offer:infolibrarian-metadata-management-server Sku:infolibrarian-metadata-windows-64-bit-hourly Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_in-da-dataquality961hf3_byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'informatica',
	[string]$Offer = 'dataquality_961hf3_se_byol',
	[string]$Skus = 'dataquality961hf3_byol',
	[string]$version =  'latest',
	[string]$Product = 'dataquality_961hf3_se_byol',
	[string]$name = 'dataquality961hf3_byol'
)
Write-Host "Image Creation in Process - Plan Info - informatica | dataquality961hf3_byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: informatica Offer:dataquality_961hf3_se_byol Sku:dataquality961hf3_byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_in-po-byol_ubuntu_for_pc_10
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'informatica',
	[string]$Offer = 'powercenter-v10-domain-image-ubuntu14-04-3',
	[string]$Skus = 'byol_ubuntu_for_pc_10',
	[string]$version =  'latest',
	[string]$Product = 'powercenter-v10-domain-image-ubuntu14-04-3',
	[string]$name = 'byol_ubuntu_for_pc_10'
)
Write-Host "Image Creation in Process - Plan Info - informatica | byol_ubuntu_for_pc_10"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: informatica Offer:powercenter-v10-domain-image-ubuntu14-04-3 Sku:byol_ubuntu_for_pc_10 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_in-po-byol_ubuntu_for_pc_10_0_update1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'informatica',
	[string]$Offer = 'powercenter-v10-update1-domain-image-ubuntu',
	[string]$Skus = 'byol_ubuntu_for_pc_10_0_update1',
	[string]$version =  'latest',
	[string]$Product = 'powercenter-v10-update1-domain-image-ubuntu',
	[string]$name = 'byol_ubuntu_for_pc_10_0_update1'
)
Write-Host "Image Creation in Process - Plan Info - informatica | byol_ubuntu_for_pc_10_0_update1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: informatica Offer:powercenter-v10-update1-domain-image-ubuntu Sku:byol_ubuntu_for_pc_10_0_update1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_in-po-byol_win2012_for_pc_10
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'informatica',
	[string]$Offer = 'powercenter_10_multi_node_domain_image_byol',
	[string]$Skus = 'byol_win2012_for_pc_10',
	[string]$version =  'latest',
	[string]$Product = 'powercenter_10_multi_node_domain_image_byol',
	[string]$name = 'byol_win2012_for_pc_10'
)
Write-Host "Image Creation in Process - Plan Info - informatica | byol_win2012_for_pc_10"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: informatica Offer:powercenter_10_multi_node_domain_image_byol Sku:byol_win2012_for_pc_10 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_in-po-powercenter_byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'informatica',
	[string]$Offer = 'powercenter_961hf3_se_byol',
	[string]$Skus = 'powercenter_byol',
	[string]$version =  'latest',
	[string]$Product = 'powercenter_961hf3_se_byol',
	[string]$name = 'powercenter_byol'
)
Write-Host "Image Creation in Process - Plan Info - informatica | powercenter_byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: informatica Offer:powercenter_961hf3_se_byol Sku:powercenter_byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_in-sq-sqlserver-2014-image-for-pc-bdm
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'informatica',
	[string]$Offer = 'sqlserver-2014-image',
	[string]$Skus = 'sqlserver-2014-image-for-pc-bdm',
	[string]$version =  'latest',
	[string]$Product = 'sqlserver-2014-image',
	[string]$name = 'sqlserver-2014-image-for-pc-bdm'
)
Write-Host "Image Creation in Process - Plan Info - informatica | sqlserver-2014-image-for-pc-bdm"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: informatica Offer:sqlserver-2014-image Sku:sqlserver-2014-image-for-pc-bdm Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_in-in-informatica_cloud_secure_agent_32_bit
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'informatica-cloud',
	[string]$Offer = 'informatica-cloud',
	[string]$Skus = 'informatica_cloud_secure_agent_32_bit',
	[string]$version =  'latest',
	[string]$Product = 'informatica-cloud',
	[string]$name = 'informatica_cloud_secure_agent_32_bit'
)
Write-Host "Image Creation in Process - Plan Info - informatica-cloud | informatica_cloud_secure_agent_32_bit"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: informatica-cloud Offer:informatica-cloud Sku:informatica_cloud_secure_agent_32_bit Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_in-in-informatica_cloud_secure_agent_32_bit_linux
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'informatica-cloud',
	[string]$Offer = 'informatica-cloud',
	[string]$Skus = 'informatica_cloud_secure_agent_32_bit_linux',
	[string]$version =  'latest',
	[string]$Product = 'informatica-cloud',
	[string]$name = 'informatica_cloud_secure_agent_32_bit_linux'
)
Write-Host "Image Creation in Process - Plan Info - informatica-cloud | informatica_cloud_secure_agent_32_bit_linux"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: informatica-cloud Offer:informatica-cloud Sku:informatica_cloud_secure_agent_32_bit_linux Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_in-we-webfocus_bue_8200
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'informationbuilders',
	[string]$Offer = 'webfocusbue-8200',
	[string]$Skus = 'webfocus_bue_8200',
	[string]$version =  'latest',
	[string]$Product = 'webfocusbue-8200',
	[string]$name = 'webfocus_bue_8200'
)
Write-Host "Image Creation in Process - Plan Info - informationbuilders | webfocus_bue_8200"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: informationbuilders Offer:webfocusbue-8200 Sku:webfocus_bue_8200 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_in-po-infostratportvuev1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'infostrat',
	[string]$Offer = 'portvue',
	[string]$Skus = 'infostratportvuev1',
	[string]$version =  'latest',
	[string]$Product = 'portvue',
	[string]$name = 'infostratportvuev1'
)
Write-Host "Image Creation in Process - Plan Info - infostrat | infostratportvuev1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: infostrat Offer:portvue Sku:infostratportvuev1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_in-in-inriverpimentry
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'inriver',
	[string]$Offer = 'inriver_pim612',
	[string]$Skus = 'inriverpimentry',
	[string]$version =  'latest',
	[string]$Product = 'inriver_pim612',
	[string]$name = 'inriverpimentry'
)
Write-Host "Image Creation in Process - Plan Info - inriver | inriverpimentry"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: inriver Offer:inriver_pim612 Sku:inriverpimentry Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_in-lu-eval-lustre-2-7
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'intel',
	[string]$Offer = 'lustre-cloud-edition-gs-image',
	[string]$Skus = 'eval-lustre-2-7',
	[string]$version =  'latest',
	[string]$Product = 'lustre-cloud-edition-gs-image',
	[string]$name = 'eval-lustre-2-7'
)
Write-Host "Image Creation in Process - Plan Info - intel | eval-lustre-2-7"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: intel Offer:lustre-cloud-edition-gs-image Sku:eval-lustre-2-7 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_in-in-gestalt_suite
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'intelligent-plant-ltd',
	[string]$Offer = 'intelligent-plant-gestalt',
	[string]$Skus = 'gestalt_suite',
	[string]$version =  'latest',
	[string]$Product = 'intelligent-plant-gestalt',
	[string]$name = 'gestalt_suite'
)
Write-Host "Image Creation in Process - Plan Info - intelligent-plant-ltd | gestalt_suite"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: intelligent-plant-ltd Offer:intelligent-plant-gestalt Sku:gestalt_suite Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_in-in-intigua-agent-manager-trial
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'intigua',
	[string]$Offer = 'intigua-agent-manager-trial',
	[string]$Skus = 'intigua-agent-manager-trial',
	[string]$version =  'latest',
	[string]$Product = 'intigua-agent-manager-trial',
	[string]$name = 'intigua-agent-manager-trial'
)
Write-Host "Image Creation in Process - Plan Info - intigua | intigua-agent-manager-trial"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: intigua Offer:intigua-agent-manager-trial Sku:intigua-agent-manager-trial Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_iq-ke-keyhub-byol-dem
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'iquest',
	[string]$Offer = 'keyhub',
	[string]$Skus = 'keyhub-byol-dem',
	[string]$version =  'latest',
	[string]$Product = 'keyhub',
	[string]$name = 'keyhub-byol-dem'
)
Write-Host "Image Creation in Process - Plan Info - iquest | keyhub-byol-dem"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: iquest Offer:keyhub Sku:keyhub-byol-dem Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_iq-me-enterprise-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'iquest',
	[string]$Offer = 'meeting-rooms',
	[string]$Skus = 'enterprise-byol',
	[string]$version =  'latest',
	[string]$Product = 'meeting-rooms',
	[string]$name = 'enterprise-byol'
)
Write-Host "Image Creation in Process - Plan Info - iquest | enterprise-byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: iquest Offer:meeting-rooms Sku:enterprise-byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_iq-me-public-license-10-rooms
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'iquest',
	[string]$Offer = 'meeting-rooms-10-public',
	[string]$Skus = 'public-license-10-rooms',
	[string]$version =  'latest',
	[string]$Product = 'meeting-rooms-10-public',
	[string]$name = 'public-license-10-rooms'
)
Write-Host "Image Creation in Process - Plan Info - iquest | public-license-10-rooms"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: iquest Offer:meeting-rooms-10-public Sku:public-license-10-rooms Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_is-is-ishlangu-load-balancer-adc-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'ishlangu-load-balancer-adc',
	[string]$Offer = 'ishlangu-load-balancer-byol',
	[string]$Skus = 'ishlangu-load-balancer-adc-byol',
	[string]$version =  'latest',
	[string]$Product = 'ishlangu-load-balancer-byol',
	[string]$name = 'ishlangu-load-balancer-adc-byol'
)
Write-Host "Image Creation in Process - Plan Info - ishlangu-load-balancer-adc | ishlangu-load-balancer-adc-byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: ishlangu-load-balancer-adc Offer:ishlangu-load-balancer-byol Sku:ishlangu-load-balancer-adc-byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_is-is-ishlangu-load-balancer-is-10
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'ishlangu-load-balancer-adc',
	[string]$Offer = 'ishlangu-load-balancer-is10',
	[string]$Skus = 'ishlangu-load-balancer-is-10',
	[string]$version =  'latest',
	[string]$Product = 'ishlangu-load-balancer-is10',
	[string]$name = 'ishlangu-load-balancer-is-10'
)
Write-Host "Image Creation in Process - Plan Info - ishlangu-load-balancer-adc | ishlangu-load-balancer-is-10"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: ishlangu-load-balancer-adc Offer:ishlangu-load-balancer-is10 Sku:ishlangu-load-balancer-is-10 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_is-is-ishlangu-load-balancer-is-100
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'ishlangu-load-balancer-adc',
	[string]$Offer = 'ishlangu-load-balancer-is100',
	[string]$Skus = 'ishlangu-load-balancer-is-100',
	[string]$version =  'latest',
	[string]$Product = 'ishlangu-load-balancer-is100',
	[string]$name = 'ishlangu-load-balancer-is-100'
)
Write-Host "Image Creation in Process - Plan Info - ishlangu-load-balancer-adc | ishlangu-load-balancer-is-100"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: ishlangu-load-balancer-adc Offer:ishlangu-load-balancer-is100 Sku:ishlangu-load-balancer-is-100 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_is-is-ishlangu-load-balancer-is-1000
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'ishlangu-load-balancer-adc',
	[string]$Offer = 'ishlangu-load-balancer-is1000',
	[string]$Skus = 'ishlangu-load-balancer-is-1000',
	[string]$version =  'latest',
	[string]$Product = 'ishlangu-load-balancer-is1000',
	[string]$name = 'ishlangu-load-balancer-is-1000'
)
Write-Host "Image Creation in Process - Plan Info - ishlangu-load-balancer-adc | ishlangu-load-balancer-is-1000"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: ishlangu-load-balancer-adc Offer:ishlangu-load-balancer-is1000 Sku:ishlangu-load-balancer-is-1000 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_is-is-ishlangu-load-balancer-is-200
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'ishlangu-load-balancer-adc',
	[string]$Offer = 'ishlangu-load-balancer-is200',
	[string]$Skus = 'ishlangu-load-balancer-is-200',
	[string]$version =  'latest',
	[string]$Product = 'ishlangu-load-balancer-is200',
	[string]$name = 'ishlangu-load-balancer-is-200'
)
Write-Host "Image Creation in Process - Plan Info - ishlangu-load-balancer-adc | ishlangu-load-balancer-is-200"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: ishlangu-load-balancer-adc Offer:ishlangu-load-balancer-is200 Sku:ishlangu-load-balancer-is-200 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_is-is-ishlangu-load-balancer-is-5000
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'ishlangu-load-balancer-adc',
	[string]$Offer = 'ishlangu-load-balancer-is5000',
	[string]$Skus = 'ishlangu-load-balancer-is-5000',
	[string]$version =  'latest',
	[string]$Product = 'ishlangu-load-balancer-is5000',
	[string]$name = 'ishlangu-load-balancer-is-5000'
)
Write-Host "Image Creation in Process - Plan Info - ishlangu-load-balancer-adc | ishlangu-load-balancer-is-5000"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: ishlangu-load-balancer-adc Offer:ishlangu-load-balancer-is5000 Sku:ishlangu-load-balancer-is-5000 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_is-is-ishlangu-load-balancer-is-bfg
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'ishlangu-load-balancer-adc',
	[string]$Offer = 'ishlangu-load-balancer-isbfg',
	[string]$Skus = 'ishlangu-load-balancer-is-bfg',
	[string]$version =  'latest',
	[string]$Product = 'ishlangu-load-balancer-isbfg',
	[string]$name = 'ishlangu-load-balancer-is-bfg'
)
Write-Host "Image Creation in Process - Plan Info - ishlangu-load-balancer-adc | ishlangu-load-balancer-is-bfg"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: ishlangu-load-balancer-adc Offer:ishlangu-load-balancer-isbfg Sku:ishlangu-load-balancer-is-bfg Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_it-ma-magento2-0-74-0-beta14-demo
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'itelios',
	[string]$Offer = 'magento2-on-zendserver',
	[string]$Skus = 'magento2-0-74-0-beta14-demo',
	[string]$version =  'latest',
	[string]$Product = 'magento2-on-zendserver',
	[string]$name = 'magento2-0-74-0-beta14-demo'
)
Write-Host "Image Creation in Process - Plan Info - itelios | magento2-0-74-0-beta14-demo"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: itelios Offer:magento2-on-zendserver Sku:magento2-0-74-0-beta14-demo Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_je-je-jedox_6_0_sr2_lin_byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'jedox',
	[string]$Offer = 'jedox-for-azure',
	[string]$Skus = 'jedox_6_0_sr2_lin_byol',
	[string]$version =  'latest',
	[string]$Product = 'jedox-for-azure',
	[string]$name = 'jedox_6_0_sr2_lin_byol'
)
Write-Host "Image Creation in Process - Plan Info - jedox | jedox_6_0_sr2_lin_byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: jedox Offer:jedox-for-azure Sku:jedox_6_0_sr2_lin_byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_je-je-jedox_6_0_sr3_lin_byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'jedox',
	[string]$Offer = 'jedox-for-azure',
	[string]$Skus = 'jedox_6_0_sr3_lin_byol',
	[string]$version =  'latest',
	[string]$Product = 'jedox-for-azure',
	[string]$name = 'jedox_6_0_sr3_lin_byol'
)
Write-Host "Image Creation in Process - Plan Info - jedox | jedox_6_0_sr3_lin_byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: jedox Offer:jedox-for-azure Sku:jedox_6_0_sr3_lin_byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_je-je-jelastic_azure_hybrid_basic
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'jelastic',
	[string]$Offer = 'jelastic-hybrid-paas-standard',
	[string]$Skus = 'jelastic_azure_hybrid_basic',
	[string]$version =  'latest',
	[string]$Product = 'jelastic-hybrid-paas-standard',
	[string]$name = 'jelastic_azure_hybrid_basic'
)
Write-Host "Image Creation in Process - Plan Info - jelastic | jelastic_azure_hybrid_basic"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: jelastic Offer:jelastic-hybrid-paas-standard Sku:jelastic_azure_hybrid_basic Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_je-je-jnxalbx-azure-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'jetnexus',
	[string]$Offer = 'jetnexus-application-load-balancer',
	[string]$Skus = 'jnxalbx-azure-byol',
	[string]$version =  'latest',
	[string]$Product = 'jetnexus-application-load-balancer',
	[string]$name = 'jnxalbx-azure-byol'
)
Write-Host "Image Creation in Process - Plan Info - jetnexus | jnxalbx-azure-byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: jetnexus Offer:jetnexus-application-load-balancer Sku:jnxalbx-azure-byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_je-je-jnxalbx-azure-va-10g
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'jetnexus',
	[string]$Offer = 'jetnexus-application-load-balancer',
	[string]$Skus = 'jnxalbx-azure-va-10g',
	[string]$version =  'latest',
	[string]$Product = 'jetnexus-application-load-balancer',
	[string]$name = 'jnxalbx-azure-va-10g'
)
Write-Host "Image Creation in Process - Plan Info - jetnexus | jnxalbx-azure-va-10g"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: jetnexus Offer:jetnexus-application-load-balancer Sku:jnxalbx-azure-va-10g Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_je-je-jnxalbx-azure-va-1g
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'jetnexus',
	[string]$Offer = 'jetnexus-application-load-balancer',
	[string]$Skus = 'jnxalbx-azure-va-1g',
	[string]$version =  'latest',
	[string]$Product = 'jetnexus-application-load-balancer',
	[string]$name = 'jnxalbx-azure-va-1g'
)
Write-Host "Image Creation in Process - Plan Info - jetnexus | jnxalbx-azure-va-1g"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: jetnexus Offer:jetnexus-application-load-balancer Sku:jnxalbx-azure-va-1g Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_je-je-jnxalbx-azure-va-3g
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'jetnexus',
	[string]$Offer = 'jetnexus-application-load-balancer',
	[string]$Skus = 'jnxalbx-azure-va-3g',
	[string]$version =  'latest',
	[string]$Product = 'jetnexus-application-load-balancer',
	[string]$name = 'jnxalbx-azure-va-3g'
)
Write-Host "Image Creation in Process - Plan Info - jetnexus | jnxalbx-azure-va-3g"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: jetnexus Offer:jetnexus-application-load-balancer Sku:jnxalbx-azure-va-3g Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_je-je-jnxalbx-azure-va-500m
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'jetnexus',
	[string]$Offer = 'jetnexus-application-load-balancer',
	[string]$Skus = 'jnxalbx-azure-va-500m',
	[string]$version =  'latest',
	[string]$Product = 'jetnexus-application-load-balancer',
	[string]$name = 'jnxalbx-azure-va-500m'
)
Write-Host "Image Creation in Process - Plan Info - jetnexus | jnxalbx-azure-va-500m"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: jetnexus Offer:jetnexus-application-load-balancer Sku:jnxalbx-azure-va-500m Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_je-je-jnxalbx-azure-va-5g
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'jetnexus',
	[string]$Offer = 'jetnexus-application-load-balancer',
	[string]$Skus = 'jnxalbx-azure-va-5g',
	[string]$version =  'latest',
	[string]$Product = 'jetnexus-application-load-balancer',
	[string]$name = 'jnxalbx-azure-va-5g'
)
Write-Host "Image Creation in Process - Plan Info - jetnexus | jnxalbx-azure-va-5g"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: jetnexus Offer:jetnexus-application-load-balancer Sku:jnxalbx-azure-va-5g Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_jf-ar-artifactory-3-7-0
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'jfrog',
	[string]$Offer = 'artifactory',
	[string]$Skus = 'artifactory-3-7-0',
	[string]$version =  'latest',
	[string]$Product = 'artifactory',
	[string]$name = 'artifactory-3-7-0'
)
Write-Host "Image Creation in Process - Plan Info - jfrog | artifactory-3-7-0"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: jfrog Offer:artifactory Sku:artifactory-3-7-0 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_jf-ar-artifactory-3-8-0
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'jfrog',
	[string]$Offer = 'artifactory',
	[string]$Skus = 'artifactory-3-8-0',
	[string]$version =  'latest',
	[string]$Product = 'artifactory',
	[string]$name = 'artifactory-3-8-0'
)
Write-Host "Image Creation in Process - Plan Info - jfrog | artifactory-3-8-0"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: jfrog Offer:artifactory Sku:artifactory-3-8-0 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_jf-ar-artifactory-3-9-2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'jfrog',
	[string]$Offer = 'artifactory',
	[string]$Skus = 'artifactory-3-9-2',
	[string]$version =  'latest',
	[string]$Product = 'artifactory',
	[string]$name = 'artifactory-3-9-2'
)
Write-Host "Image Creation in Process - Plan Info - jfrog | artifactory-3-9-2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: jfrog Offer:artifactory Sku:artifactory-3-9-2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_jf-ar-jfrog-artifactory-4-2-0
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'jfrog',
	[string]$Offer = 'artifactory',
	[string]$Skus = 'jfrog-artifactory-4-2-0',
	[string]$version =  'latest',
	[string]$Product = 'artifactory',
	[string]$name = 'jfrog-artifactory-4-2-0'
)
Write-Host "Image Creation in Process - Plan Info - jfrog | jfrog-artifactory-4-2-0"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: jfrog Offer:artifactory Sku:jfrog-artifactory-4-2-0 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ji-ji-linux-agent-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'jitterbit_integration',
	[string]$Offer = 'jitterbit-harmony-agent',
	[string]$Skus = 'linux-agent-byol',
	[string]$version =  'latest',
	[string]$Product = 'jitterbit-harmony-agent',
	[string]$name = 'linux-agent-byol'
)
Write-Host "Image Creation in Process - Plan Info - jitterbit_integration | linux-agent-byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: jitterbit_integration Offer:jitterbit-harmony-agent Sku:linux-agent-byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ji-ji-windows-agent-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'jitterbit_integration',
	[string]$Offer = 'jitterbit-harmony-agent',
	[string]$Skus = 'windows-agent-byol',
	[string]$version =  'latest',
	[string]$Product = 'jitterbit-harmony-agent',
	[string]$name = 'windows-agent-byol'
)
Write-Host "Image Creation in Process - Plan Info - jitterbit_integration | windows-agent-byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: jitterbit_integration Offer:jitterbit-harmony-agent Sku:windows-agent-byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ka-ka-activedirectory-free
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'kaazing',
	[string]$Offer = 'kaazing-kwic',
	[string]$Skus = 'activedirectory-free',
	[string]$version =  'latest',
	[string]$Product = 'kaazing-kwic',
	[string]$name = 'activedirectory-free'
)
Write-Host "Image Creation in Process - Plan Info - kaazing | activedirectory-free"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: kaazing Offer:kaazing-kwic Sku:activedirectory-free Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ka-ka-activedirectory-silver-support
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'kaazing',
	[string]$Offer = 'kaazing-kwic',
	[string]$Skus = 'activedirectory-silver-support',
	[string]$version =  'latest',
	[string]$Product = 'kaazing-kwic',
	[string]$name = 'activedirectory-silver-support'
)
Write-Host "Image Creation in Process - Plan Info - kaazing | activedirectory-silver-support"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: kaazing Offer:kaazing-kwic Sku:activedirectory-silver-support Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ka-ka-activedirectory-free
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'kaazing',
	[string]$Offer = 'kaazing-vpa',
	[string]$Skus = 'activedirectory-free',
	[string]$version =  'latest',
	[string]$Product = 'kaazing-vpa',
	[string]$name = 'activedirectory-free'
)
Write-Host "Image Creation in Process - Plan Info - kaazing | activedirectory-free"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: kaazing Offer:kaazing-vpa Sku:activedirectory-free Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ka-ka-activedirectory-silver-support
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'kaazing',
	[string]$Offer = 'kaazing-vpa',
	[string]$Skus = 'activedirectory-silver-support',
	[string]$version =  'latest',
	[string]$Product = 'kaazing-vpa',
	[string]$name = 'activedirectory-silver-support'
)
Write-Host "Image Creation in Process - Plan Info - kaazing | activedirectory-silver-support"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: kaazing Offer:kaazing-vpa Sku:activedirectory-silver-support Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ka-kw-kaazing-kwic-4
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'kaazing',
	[string]$Offer = 'kwic-4',
	[string]$Skus = 'kaazing-kwic-4',
	[string]$version =  'latest',
	[string]$Product = 'kwic-4',
	[string]$name = 'kaazing-kwic-4'
)
Write-Host "Image Creation in Process - Plan Info - kaazing | kaazing-kwic-4"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: kaazing Offer:kwic-4 Sku:kaazing-kwic-4 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ka-ka-kali
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'kali-linux',
	[string]$Offer = 'kali-linux',
	[string]$Skus = 'kali',
	[string]$version =  'latest',
	[string]$Product = 'kali-linux',
	[string]$name = 'kali'
)
Write-Host "Image Creation in Process - Plan Info - kali-linux | kali"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: kali-linux Offer:kali-linux Sku:kali Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ka-ka-ksc_byol1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'kaspersky_lab',
	[string]$Offer = 'kaspersky-security-center-10_2_434',
	[string]$Skus = 'ksc_byol1',
	[string]$version =  'latest',
	[string]$Product = 'kaspersky-security-center-10_2_434',
	[string]$name = 'ksc_byol1'
)
Write-Host "Image Creation in Process - Plan Info - kaspersky_lab | ksc_byol1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: kaspersky_lab Offer:kaspersky-security-center-10_2_434 Sku:ksc_byol1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ka-ka-ksg
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'kaspersky_lab',
	[string]$Offer = 'kaspersky_secure_mail_gateway',
	[string]$Skus = 'ksg',
	[string]$version =  'latest',
	[string]$Product = 'kaspersky_secure_mail_gateway',
	[string]$name = 'ksg'
)
Write-Host "Image Creation in Process - Plan Info - kaspersky_lab | ksg"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: kaspersky_lab Offer:kaspersky_secure_mail_gateway Sku:ksg Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ka-ka-kav_for_lfs
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'kaspersky_lab',
	[string]$Offer = 'kav_for_lfs',
	[string]$Skus = 'kav_for_lfs',
	[string]$version =  'latest',
	[string]$Product = 'kav_for_lfs',
	[string]$name = 'kav_for_lfs'
)
Write-Host "Image Creation in Process - Plan Info - kaspersky_lab | kav_for_lfs"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: kaspersky_lab Offer:kav_for_lfs Sku:kav_for_lfs Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ka-ka-kav_for_wsee
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'kaspersky_lab',
	[string]$Offer = 'kav_for_wsee',
	[string]$Skus = 'kav_for_wsee',
	[string]$version =  'latest',
	[string]$Product = 'kav_for_wsee',
	[string]$name = 'kav_for_wsee'
)
Write-Host "Image Creation in Process - Plan Info - kaspersky_lab | kav_for_wsee"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: kaspersky_lab Offer:kav_for_wsee Sku:kav_for_wsee Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ke-ke-kemp360central-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'kemptech',
	[string]$Offer = 'kemp360central-byol',
	[string]$Skus = 'kemp360central-byol',
	[string]$version =  'latest',
	[string]$Product = 'kemp360central-byol',
	[string]$name = 'kemp360central-byol'
)
Write-Host "Image Creation in Process - Plan Info - kemptech | kemp360central-byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: kemptech Offer:kemp360central-byol Sku:kemp360central-byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ke-vl-basic-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'kemptech',
	[string]$Offer = 'vlm-azure',
	[string]$Skus = 'basic-byol',
	[string]$version =  'latest',
	[string]$Product = 'vlm-azure',
	[string]$name = 'basic-byol'
)
Write-Host "Image Creation in Process - Plan Info - kemptech | basic-byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: kemptech Offer:vlm-azure Sku:basic-byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ke-vl-freeloadmaster
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'kemptech',
	[string]$Offer = 'vlm-azure',
	[string]$Skus = 'freeloadmaster',
	[string]$version =  'latest',
	[string]$Product = 'vlm-azure',
	[string]$name = 'freeloadmaster'
)
Write-Host "Image Creation in Process - Plan Info - kemptech | freeloadmaster"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: kemptech Offer:vlm-azure Sku:freeloadmaster Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ke-vl-vlm-10g-hrl_v2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'kemptech',
	[string]$Offer = 'vlm-azure',
	[string]$Skus = 'vlm-10g-hrl_v2',
	[string]$version =  'latest',
	[string]$Product = 'vlm-azure',
	[string]$name = 'vlm-10g-hrl_v2'
)
Write-Host "Image Creation in Process - Plan Info - kemptech | vlm-10g-hrl_v2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: kemptech Offer:vlm-azure Sku:vlm-10g-hrl_v2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ke-vl-vlm-200-hrl
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'kemptech',
	[string]$Offer = 'vlm-azure',
	[string]$Skus = 'vlm-200-hrl',
	[string]$version =  'latest',
	[string]$Product = 'vlm-azure',
	[string]$name = 'vlm-200-hrl'
)
Write-Host "Image Creation in Process - Plan Info - kemptech | vlm-200-hrl"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: kemptech Offer:vlm-azure Sku:vlm-200-hrl Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ke-vl-vlm-2000-hrl
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'kemptech',
	[string]$Offer = 'vlm-azure',
	[string]$Skus = 'vlm-2000-hrl',
	[string]$version =  'latest',
	[string]$Product = 'vlm-azure',
	[string]$name = 'vlm-2000-hrl'
)
Write-Host "Image Creation in Process - Plan Info - kemptech | vlm-2000-hrl"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: kemptech Offer:vlm-azure Sku:vlm-2000-hrl Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ke-vl-vlm-500-waf-hrl
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'kemptech',
	[string]$Offer = 'vlm-azure',
	[string]$Skus = 'vlm-500-waf-hrl',
	[string]$version =  'latest',
	[string]$Product = 'vlm-azure',
	[string]$name = 'vlm-500-waf-hrl'
)
Write-Host "Image Creation in Process - Plan Info - kemptech | vlm-500-waf-hrl"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: kemptech Offer:vlm-azure Sku:vlm-500-waf-hrl Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ke-vl-vlm-5000-hrl_v2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'kemptech',
	[string]$Offer = 'vlm-azure',
	[string]$Skus = 'vlm-5000-hrl_v2',
	[string]$version =  'latest',
	[string]$Product = 'vlm-azure',
	[string]$name = 'vlm-5000-hrl_v2'
)
Write-Host "Image Creation in Process - Plan Info - kemptech | vlm-5000-hrl_v2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: kemptech Offer:vlm-azure Sku:vlm-5000-hrl_v2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ke-ke-kepioncloud
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'kepion',
	[string]$Offer = 'kepioncloud',
	[string]$Skus = 'kepioncloud',
	[string]$version =  'latest',
	[string]$Product = 'kepioncloud',
	[string]$name = 'kepioncloud'
)
Write-Host "Image Creation in Process - Plan Info - kepion | kepioncloud"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: kepion Offer:kepioncloud Sku:kepioncloud Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_kn-cl-3-1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'knime',
	[string]$Offer = 'cloud-analytics-platform',
	[string]$Skus = '3-1',
	[string]$version =  'latest',
	[string]$Product = 'cloud-analytics-platform',
	[string]$name = '3-1'
)
Write-Host "Image Creation in Process - Plan Info - knime | 3-1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: knime Offer:cloud-analytics-platform Sku:3-1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ko-ec-ecdn-license-server
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'kollective',
	[string]$Offer = 'ecdn-license-vm',
	[string]$Skus = 'ecdn-license-server',
	[string]$version =  'latest',
	[string]$Product = 'ecdn-license-vm',
	[string]$name = 'ecdn-license-server'
)
Write-Host "Image Creation in Process - Plan Info - kollective | ecdn-license-server"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: kollective Offer:ecdn-license-vm Sku:ecdn-license-server Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ko-sd-kollectiveecdntestflight
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'kollective',
	[string]$Offer = 'sd-ecdn-test-flight-vm',
	[string]$Skus = 'kollectiveecdntestflight',
	[string]$version =  'latest',
	[string]$Product = 'sd-ecdn-test-flight-vm',
	[string]$name = 'kollectiveecdntestflight'
)
Write-Host "Image Creation in Process - Plan Info - kollective | kollectiveecdntestflight"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: kollective Offer:sd-ecdn-test-flight-vm Sku:kollectiveecdntestflight Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_la-la-lansa-scalable-license-14-1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'lansa',
	[string]$Offer = 'lansa-scalable-license',
	[string]$Skus = 'lansa-scalable-license-14-1',
	[string]$version =  'latest',
	[string]$Product = 'lansa-scalable-license',
	[string]$name = 'lansa-scalable-license-14-1'
)
Write-Host "Image Creation in Process - Plan Info - lansa | lansa-scalable-license-14-1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: lansa Offer:lansa-scalable-license Sku:lansa-scalable-license-14-1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_la-vi-visuallansa-14-1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'lansa',
	[string]$Offer = 'visuallansa',
	[string]$Skus = 'visuallansa-14-1',
	[string]$version =  'latest',
	[string]$Product = 'visuallansa',
	[string]$name = 'visuallansa-14-1'
)
Write-Host "Image Creation in Process - Plan Info - lansa | visuallansa-14-1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: lansa Offer:visuallansa Sku:visuallansa-14-1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_le-lo-azuredh
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'le',
	[string]$Offer = 'logentries-datahub',
	[string]$Skus = 'azuredh',
	[string]$version =  'latest',
	[string]$Product = 'logentries-datahub',
	[string]$name = 'azuredh'
)
Write-Host "Image Creation in Process - Plan Info - le | azuredh"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: le Offer:logentries-datahub Sku:azuredh Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_li-li-llweb4ea01
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'lieberlieber',
	[string]$Offer = 'lieberlieber-web-collaborator',
	[string]$Skus = 'llweb4ea01',
	[string]$version =  'latest',
	[string]$Product = 'lieberlieber-web-collaborator',
	[string]$name = 'llweb4ea01'
)
Write-Host "Image Creation in Process - Plan Info - lieberlieber | llweb4ea01"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: lieberlieber Offer:lieberlieber-web-collaborator Sku:llweb4ea01 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_li-en-erpm
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'liebsoft',
	[string]$Offer = 'enterprise_random_password_manager',
	[string]$Skus = 'erpm',
	[string]$version =  'latest',
	[string]$Product = 'enterprise_random_password_manager',
	[string]$name = 'erpm'
)
Write-Host "Image Creation in Process - Plan Info - liebsoft | erpm"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: liebsoft Offer:enterprise_random_password_manager Sku:erpm Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_li-li-lit-az-vir
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'literatu',
	[string]$Offer = 'literatu',
	[string]$Skus = 'lit-az-vir',
	[string]$version =  'latest',
	[string]$Product = 'literatu',
	[string]$name = 'lit-az-vir'
)
Write-Host "Image Creation in Process - Plan Info - literatu | lit-az-vir"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: literatu Offer:literatu Sku:lit-az-vir Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_lo-lo-loadbalancer_org_azure
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'loadbalancer',
	[string]$Offer = 'loadbalancer-org-load-balancer-for-azure',
	[string]$Skus = 'loadbalancer_org_azure',
	[string]$version =  'latest',
	[string]$Product = 'loadbalancer-org-load-balancer-for-azure',
	[string]$name = 'loadbalancer_org_azure'
)
Write-Host "Image Creation in Process - Plan Info - loadbalancer | loadbalancer_org_azure"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: loadbalancer Offer:loadbalancer-org-load-balancer-for-azure Sku:loadbalancer_org_azure Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_lo-lo-loadbalancer_org_azure_byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'loadbalancer',
	[string]$Offer = 'loadbalancer-org-load-balancer-for-azure-byol',
	[string]$Skus = 'loadbalancer_org_azure_byol',
	[string]$version =  'latest',
	[string]$Product = 'loadbalancer-org-load-balancer-for-azure-byol',
	[string]$name = 'loadbalancer_org_azure_byol'
)
Write-Host "Image Creation in Process - Plan Info - loadbalancer | loadbalancer_org_azure_byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: loadbalancer Offer:loadbalancer-org-load-balancer-for-azure-byol Sku:loadbalancer_org_azure_byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_lo-lo-logi-info-v11-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'logi-analytics',
	[string]$Offer = 'logi-info-11',
	[string]$Skus = 'logi-info-v11-byol',
	[string]$version =  'latest',
	[string]$Product = 'logi-info-11',
	[string]$name = 'logi-info-v11-byol'
)
Write-Host "Image Creation in Process - Plan Info - logi-analytics | logi-info-v11-byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: logi-analytics Offer:logi-info-11 Sku:logi-info-v11-byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_lo-lo-logi-vision-hourly
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'logi-analytics',
	[string]$Offer = 'logi-vision-1',
	[string]$Skus = 'logi-vision-hourly',
	[string]$version =  'latest',
	[string]$Product = 'logi-vision-1',
	[string]$name = 'logi-vision-hourly'
)
Write-Host "Image Creation in Process - Plan Info - logi-analytics | logi-vision-hourly"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: logi-analytics Offer:logi-vision-1 Sku:logi-vision-hourly Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_lo-lo-logi-vision-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'logi-analytics',
	[string]$Offer = 'logi-vision-1_4-byol',
	[string]$Skus = 'logi-vision-byol',
	[string]$version =  'latest',
	[string]$Product = 'logi-vision-1_4-byol',
	[string]$name = 'logi-vision-byol'
)
Write-Host "Image Creation in Process - Plan Info - logi-analytics | logi-vision-byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: logi-analytics Offer:logi-vision-1_4-byol Sku:logi-vision-byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_lo-di-enterprise
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'loginpeople',
	[string]$Offer = 'digital-dna-authentication-server',
	[string]$Skus = 'enterprise',
	[string]$version =  'latest',
	[string]$Product = 'digital-dna-authentication-server',
	[string]$name = 'enterprise'
)
Write-Host "Image Creation in Process - Plan Info - loginpeople | enterprise"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: loginpeople Offer:digital-dna-authentication-server Sku:enterprise Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_lo-di-enterprise-plus
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'loginpeople',
	[string]$Offer = 'digital-dna-authentication-server',
	[string]$Skus = 'enterprise-plus',
	[string]$version =  'latest',
	[string]$Product = 'digital-dna-authentication-server',
	[string]$name = 'enterprise-plus'
)
Write-Host "Image Creation in Process - Plan Info - loginpeople | enterprise-plus"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: loginpeople Offer:digital-dna-authentication-server Sku:enterprise-plus Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_lo-di-small-business
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'loginpeople',
	[string]$Offer = 'digital-dna-authentication-server',
	[string]$Skus = 'small-business',
	[string]$version =  'latest',
	[string]$Product = 'digital-dna-authentication-server',
	[string]$name = 'small-business'
)
Write-Host "Image Creation in Process - Plan Info - loginpeople | small-business"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: loginpeople Offer:digital-dna-authentication-server Sku:small-business Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_lo-di-small-business-plus
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'loginpeople',
	[string]$Offer = 'digital-dna-authentication-server',
	[string]$Skus = 'small-business-plus',
	[string]$version =  'latest',
	[string]$Product = 'digital-dna-authentication-server',
	[string]$name = 'small-business-plus'
)
Write-Host "Image Creation in Process - Plan Info - loginpeople | small-business-plus"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: loginpeople Offer:digital-dna-authentication-server Sku:small-business-plus Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_lo-ha-hamachi_centos
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'logmein',
	[string]$Offer = 'hamachi',
	[string]$Skus = 'hamachi_centos',
	[string]$version =  'latest',
	[string]$Product = 'hamachi',
	[string]$name = 'hamachi_centos'
)
Write-Host "Image Creation in Process - Plan Info - logmein | hamachi_centos"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: logmein Offer:hamachi Sku:hamachi_centos Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_lo-ha-hamachi_ubuntu
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'logmein',
	[string]$Offer = 'hamachi',
	[string]$Skus = 'hamachi_ubuntu',
	[string]$version =  'latest',
	[string]$Product = 'hamachi',
	[string]$name = 'hamachi_ubuntu'
)
Write-Host "Image Creation in Process - Plan Info - logmein | hamachi_ubuntu"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: logmein Offer:hamachi Sku:hamachi_ubuntu Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_lo-ha-hamachi_windows2008r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'logmein',
	[string]$Offer = 'hamachi',
	[string]$Skus = 'hamachi_windows2008r2',
	[string]$version =  'latest',
	[string]$Product = 'hamachi',
	[string]$name = 'hamachi_windows2008r2'
)
Write-Host "Image Creation in Process - Plan Info - logmein | hamachi_windows2008r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: logmein Offer:hamachi Sku:hamachi_windows2008r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_lo-ha-hamachi_windows2012r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'logmein',
	[string]$Offer = 'hamachi',
	[string]$Skus = 'hamachi_windows2012r2',
	[string]$version =  'latest',
	[string]$Product = 'hamachi',
	[string]$name = 'hamachi_windows2012r2'
)
Write-Host "Image Creation in Process - Plan Info - logmein | hamachi_windows2012r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: logmein Offer:hamachi Sku:hamachi_windows2012r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_lo-lo-logsignfocus
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'logsign',
	[string]$Offer = 'logsignfocus',
	[string]$Skus = 'logsignfocus',
	[string]$version =  'latest',
	[string]$Product = 'logsignfocus',
	[string]$name = 'logsignfocus'
)
Write-Host "Image Creation in Process - Plan Info - logsign | logsignfocus"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: logsign Offer:logsignfocus Sku:logsignfocus Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_lo-lo-lmrelay
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'logtrust',
	[string]$Offer = 'logtrust-log-management',
	[string]$Skus = 'lmrelay',
	[string]$version =  'latest',
	[string]$Product = 'logtrust-log-management',
	[string]$name = 'lmrelay'
)
Write-Host "Image Creation in Process - Plan Info - logtrust | lmrelay"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: logtrust Offer:logtrust-log-management Sku:lmrelay Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_lo-lo-looker-analytics-platform-sqldb-10users
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'looker',
	[string]$Offer = 'looker-analytics-platform',
	[string]$Skus = 'looker-analytics-platform-sqldb-10users',
	[string]$version =  'latest',
	[string]$Product = 'looker-analytics-platform',
	[string]$name = 'looker-analytics-platform-sqldb-10users'
)
Write-Host "Image Creation in Process - Plan Info - looker | looker-analytics-platform-sqldb-10users"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: looker Offer:looker-analytics-platform Sku:looker-analytics-platform-sqldb-10users Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_lo-lo-looker-analytics-platform-10users
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'looker',
	[string]$Offer = 'looker-analytics-platform-326',
	[string]$Skus = 'looker-analytics-platform-10users',
	[string]$version =  'latest',
	[string]$Product = 'looker-analytics-platform-326',
	[string]$name = 'looker-analytics-platform-10users'
)
Write-Host "Image Creation in Process - Plan Info - looker | looker-analytics-platform-10users"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: looker Offer:looker-analytics-platform-326 Sku:looker-analytics-platform-10users Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_lo-lo-looker-analytics-platform-25users
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'looker',
	[string]$Offer = 'looker-analytics-platform-326',
	[string]$Skus = 'looker-analytics-platform-25users',
	[string]$version =  'latest',
	[string]$Product = 'looker-analytics-platform-326',
	[string]$name = 'looker-analytics-platform-25users'
)
Write-Host "Image Creation in Process - Plan Info - looker | looker-analytics-platform-25users"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: looker Offer:looker-analytics-platform-326 Sku:looker-analytics-platform-25users Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ma-vi-vtwindowsku
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'mactores_inc',
	[string]$Offer = 'videotouch',
	[string]$Skus = 'vtwindowsku',
	[string]$version =  'latest',
	[string]$Product = 'videotouch',
	[string]$name = 'vtwindowsku'
)
Write-Host "Image Creation in Process - Plan Info - mactores_inc | vtwindowsku"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: mactores_inc Offer:videotouch Sku:vtwindowsku Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ma-ma-magelia-webstore-professional-edition
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'magelia',
	[string]$Offer = 'magelia-webstore-professional',
	[string]$Skus = 'magelia-webstore-professional-edition',
	[string]$version =  'latest',
	[string]$Product = 'magelia-webstore-professional',
	[string]$name = 'magelia-webstore-professional-edition'
)
Write-Host "Image Creation in Process - Plan Info - magelia | magelia-webstore-professional-edition"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: magelia Offer:magelia-webstore-professional Sku:magelia-webstore-professional-edition Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ma-cr-zohocreator
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'manageengine',
	[string]$Offer = 'creatorplatform',
	[string]$Skus = 'zohocreator',
	[string]$version =  'latest',
	[string]$Product = 'creatorplatform',
	[string]$name = 'zohocreator'
)
Write-Host "Image Creation in Process - Plan Info - manageengine | zohocreator"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: manageengine Offer:creatorplatform Sku:zohocreator Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ma-de-desktopcentral
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'manageengine',
	[string]$Offer = 'desktop-central',
	[string]$Skus = 'desktopcentral',
	[string]$version =  'latest',
	[string]$Product = 'desktop-central',
	[string]$name = 'desktopcentral'
)
Write-Host "Image Creation in Process - Plan Info - manageengine | desktopcentral"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: manageengine Offer:desktop-central Sku:desktopcentral Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ma-de-desktopcentral-msp
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'manageengine',
	[string]$Offer = 'desktopcentral-msp',
	[string]$Skus = 'desktopcentral-msp',
	[string]$version =  'latest',
	[string]$Product = 'desktopcentral-msp',
	[string]$name = 'desktopcentral-msp'
)
Write-Host "Image Creation in Process - Plan Info - manageengine | desktopcentral-msp"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: manageengine Offer:desktopcentral-msp Sku:desktopcentral-msp Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ma-mo-mobiledevicemanagerplus
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'manageengine',
	[string]$Offer = 'mobile-device-manager-plus',
	[string]$Skus = 'mobiledevicemanagerplus',
	[string]$version =  'latest',
	[string]$Product = 'mobile-device-manager-plus',
	[string]$name = 'mobiledevicemanagerplus'
)
Write-Host "Image Creation in Process - Plan Info - manageengine | mobiledevicemanagerplus"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: manageengine Offer:mobile-device-manager-plus Sku:mobiledevicemanagerplus Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ma-pa-14116_2s
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'manageengine',
	[string]$Offer = 'passwordmanagerpro-windows',
	[string]$Skus = '14116_2s',
	[string]$version =  'latest',
	[string]$Product = 'passwordmanagerpro-windows',
	[string]$name = '14116_2s'
)
Write-Host "Image Creation in Process - Plan Info - manageengine | 14116_2s"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: manageengine Offer:passwordmanagerpro-windows Sku:14116_2s Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ma-se-sdp-50tech
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'manageengine',
	[string]$Offer = 'servicedeskplus',
	[string]$Skus = 'sdp-50tech',
	[string]$version =  'latest',
	[string]$Product = 'servicedeskplus',
	[string]$name = 'sdp-50tech'
)
Write-Host "Image Creation in Process - Plan Info - manageengine | sdp-50tech"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: manageengine Offer:servicedeskplus Sku:sdp-50tech Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ma-ma-mapr-sandbox-510-converged-community
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'mapr-technologies',
	[string]$Offer = 'mapr-sandbox-510-converged-community',
	[string]$Skus = 'mapr-sandbox-510-converged-community',
	[string]$version =  'latest',
	[string]$Product = 'mapr-sandbox-510-converged-community',
	[string]$name = 'mapr-sandbox-510-converged-community'
)
Write-Host "Image Creation in Process - Plan Info - mapr-technologies | mapr-sandbox-510-converged-community"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: mapr-technologies Offer:mapr-sandbox-510-converged-community Sku:mapr-sandbox-510-converged-community Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ma-ma-mapr-sandbox-500-community
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'mapr-technologies',
	[string]$Offer = 'mapr-sandbox-vm',
	[string]$Skus = 'mapr-sandbox-500-community',
	[string]$version =  'latest',
	[string]$Product = 'mapr-sandbox-vm',
	[string]$name = 'mapr-sandbox-500-community'
)
Write-Host "Image Creation in Process - Plan Info - mapr-technologies | mapr-sandbox-500-community"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: mapr-technologies Offer:mapr-sandbox-vm Sku:mapr-sandbox-500-community Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ma-md-mdbec-data-node
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'mariadb',
	[string]$Offer = 'mdbec-ha-node',
	[string]$Skus = 'mdbec-data-node',
	[string]$version =  'latest',
	[string]$Product = 'mdbec-ha-node',
	[string]$name = 'mdbec-data-node'
)
Write-Host "Image Creation in Process - Plan Info - mariadb | mdbec-data-node"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: mariadb Offer:mdbec-ha-node Sku:mdbec-data-node Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ma-os-oscarap
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'massiveanalytic-',
	[string]$Offer = 'oscarap',
	[string]$Skus = 'oscarap',
	[string]$version =  'latest',
	[string]$Product = 'oscarap',
	[string]$name = 'oscarap'
)
Write-Host "Image Creation in Process - Plan Info - massiveanalytic- | oscarap"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: massiveanalytic- Offer:oscarap Sku:oscarap Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ma-ma-mavin-business-t-e
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'mavinglobal',
	[string]$Offer = 'mavin-business-trial',
	[string]$Skus = 'mavin-business-t-e',
	[string]$version =  'latest',
	[string]$Product = 'mavin-business-trial',
	[string]$name = 'mavin-business-t-e'
)
Write-Host "Image Creation in Process - Plan Info - mavinglobal | mavin-business-t-e"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: mavinglobal Offer:mavin-business-trial Sku:mavin-business-t-e Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ma-ma-mavin-business-e-e
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'mavinglobal',
	[string]$Offer = 'mavin-enterprise-edition',
	[string]$Skus = 'mavin-business-e-e',
	[string]$version =  'latest',
	[string]$Product = 'mavin-enterprise-edition',
	[string]$name = 'mavin-business-e-e'
)
Write-Host "Image Creation in Process - Plan Info - mavinglobal | mavin-business-e-e"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: mavinglobal Offer:mavin-enterprise-edition Sku:mavin-business-e-e Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_me-li-linnovate-open-source-sla-pro
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'meanio',
	[string]$Offer = 'linnovate-open-source-sla-pro',
	[string]$Skus = 'linnovate-open-source-sla-pro',
	[string]$version =  'latest',
	[string]$Product = 'linnovate-open-source-sla-pro',
	[string]$name = 'linnovate-open-source-sla-pro'
)
Write-Host "Image Creation in Process - Plan Info - meanio | linnovate-open-source-sla-pro"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: meanio Offer:linnovate-open-source-sla-pro Sku:linnovate-open-source-sla-pro Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_me-me-meanio-050-vm
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'meanio',
	[string]$Offer = 'meanio-050-vm',
	[string]$Skus = 'meanio-050-vm',
	[string]$version =  'latest',
	[string]$Product = 'meanio-050-vm',
	[string]$name = 'meanio-050-vm'
)
Write-Host "Image Creation in Process - Plan Info - meanio | meanio-050-vm"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: meanio Offer:meanio-050-vm Sku:meanio-050-vm Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_me-da-standard
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'mediazenie',
	[string]$Offer = 'datazenie',
	[string]$Skus = 'standard',
	[string]$version =  'latest',
	[string]$Product = 'datazenie',
	[string]$name = 'standard'
)
Write-Host "Image Creation in Process - Plan Info - mediazenie | standard"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: mediazenie Offer:datazenie Sku:standard Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_me-da-standard-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'mediazenie',
	[string]$Offer = 'datazenie',
	[string]$Skus = 'standard-byol',
	[string]$version =  'latest',
	[string]$Product = 'datazenie',
	[string]$name = 'standard-byol'
)
Write-Host "Image Creation in Process - Plan Info - mediazenie | standard-byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: mediazenie Offer:datazenie Sku:standard-byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_me-me-standard
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'mediazenie',
	[string]$Offer = 'mediazenie',
	[string]$Skus = 'standard',
	[string]$version =  'latest',
	[string]$Product = 'mediazenie',
	[string]$name = 'standard'
)
Write-Host "Image Creation in Process - Plan Info - mediazenie | standard"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: mediazenie Offer:mediazenie Sku:standard Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_me-me-memsql-community-single-vm
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'memsql',
	[string]$Offer = 'memsql-community-single-vm',
	[string]$Skus = 'memsql-community-single-vm',
	[string]$version =  'latest',
	[string]$Product = 'memsql-community-single-vm',
	[string]$name = 'memsql-community-single-vm'
)
Write-Host "Image Creation in Process - Plan Info - memsql | memsql-community-single-vm"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: memsql Offer:memsql-community-single-vm Sku:memsql-community-single-vm Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_me-me-memsql-enterprise-single-vm
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'memsql',
	[string]$Offer = 'memsql-enterprise-single-vm',
	[string]$Skus = 'memsql-enterprise-single-vm',
	[string]$version =  'latest',
	[string]$Product = 'memsql-enterprise-single-vm',
	[string]$name = 'memsql-enterprise-single-vm'
)
Write-Host "Image Creation in Process - Plan Info - memsql | memsql-enterprise-single-vm"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: memsql Offer:memsql-enterprise-single-vm Sku:memsql-enterprise-single-vm Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_me-me-mendix_pro_100_users
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'mendix',
	[string]$Offer = 'mendix-pro',
	[string]$Skus = 'mendix_pro_100_users',
	[string]$version =  'latest',
	[string]$Product = 'mendix-pro',
	[string]$name = 'mendix_pro_100_users'
)
Write-Host "Image Creation in Process - Plan Info - mendix | mendix_pro_100_users"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: mendix Offer:mendix-pro Sku:mendix_pro_100_users Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_me-me-mendix_pro_250_users
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'mendix',
	[string]$Offer = 'mendix-pro',
	[string]$Skus = 'mendix_pro_250_users',
	[string]$version =  'latest',
	[string]$Product = 'mendix-pro',
	[string]$name = 'mendix_pro_250_users'
)
Write-Host "Image Creation in Process - Plan Info - mendix | mendix_pro_250_users"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: mendix Offer:mendix-pro Sku:mendix_pro_250_users Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_me-me-mendix_pro_50_users
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'mendix',
	[string]$Offer = 'mendix-pro',
	[string]$Skus = 'mendix_pro_50_users',
	[string]$version =  'latest',
	[string]$Product = 'mendix-pro',
	[string]$name = 'mendix_pro_50_users'
)
Write-Host "Image Creation in Process - Plan Info - mendix | mendix_pro_50_users"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: mendix Offer:mendix-pro Sku:mendix_pro_50_users Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_me-me-mendix_pro_byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'mendix',
	[string]$Offer = 'mendix-pro',
	[string]$Skus = 'mendix_pro_byol',
	[string]$version =  'latest',
	[string]$Product = 'mendix-pro',
	[string]$name = 'mendix_pro_byol'
)
Write-Host "Image Creation in Process - Plan Info - mendix | mendix_pro_byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: mendix Offer:mendix-pro Sku:mendix_pro_byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_me-me-mn01
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'mentalnotes',
	[string]$Offer = 'mental-notes-vm',
	[string]$Skus = 'mn01',
	[string]$version =  'latest',
	[string]$Product = 'mental-notes-vm',
	[string]$name = 'mn01'
)
Write-Host "Image Creation in Process - Plan Info - mentalnotes | mn01"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: mentalnotes Offer:mental-notes-vm Sku:mn01 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_me-te-mn001
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'mentalnotes',
	[string]$Offer = 'testmentalnotes',
	[string]$Skus = 'mn001',
	[string]$version =  'latest',
	[string]$Product = 'testmentalnotes',
	[string]$name = 'mn001'
)
Write-Host "Image Creation in Process - Plan Info - mentalnotes | mn001"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: mentalnotes Offer:testmentalnotes Sku:mn001 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_me-me-mv-office365-ste-azure-1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'metavistech',
	[string]$Offer = 'metavis-office365-suite',
	[string]$Skus = 'mv-office365-ste-azure-1',
	[string]$version =  'latest',
	[string]$Product = 'metavis-office365-suite',
	[string]$name = 'mv-office365-ste-azure-1'
)
Write-Host "Image Creation in Process - Plan Info - metavistech | mv-office365-ste-azure-1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: metavistech Offer:metavis-office365-suite Sku:mv-office365-ste-azure-1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_mf-st-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'mfiles',
	[string]$Offer = 'standard',
	[string]$Skus = 'byol',
	[string]$version =  'latest',
	[string]$Product = 'standard',
	[string]$name = 'byol'
)
Write-Host "Image Creation in Process - Plan Info - mfiles | byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: mfiles Offer:standard Sku:byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_mf-st-sku1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'mfiles',
	[string]$Offer = 'standard',
	[string]$Skus = 'sku1',
	[string]$version =  'latest',
	[string]$Product = 'standard',
	[string]$name = 'sku1'
)
Write-Host "Image Creation in Process - Plan Info - mfiles | sku1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: mfiles Offer:standard Sku:sku1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_mf-st-sku2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'mfiles',
	[string]$Offer = 'standard',
	[string]$Skus = 'sku2',
	[string]$version =  'latest',
	[string]$Product = 'standard',
	[string]$name = 'sku2'
)
Write-Host "Image Creation in Process - Plan Info - mfiles | sku2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: mfiles Offer:standard Sku:sku2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_mf-st-sku3
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'mfiles',
	[string]$Offer = 'standard',
	[string]$Skus = 'sku3',
	[string]$version =  'latest',
	[string]$Product = 'standard',
	[string]$name = 'sku3'
)
Write-Host "Image Creation in Process - Plan Info - mfiles | sku3"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: mfiles Offer:standard Sku:sku3 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-IB-IBM_DB2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Microsoft',
	[string]$Offer = 'IBM',
	[string]$Skus = 'IBM_DB2',
	[string]$version =  'latest',
	[string]$Product = 'IBM',
	[string]$name = 'IBM_DB2'
)
Write-Host "Image Creation in Process - NoPlan Info Win - Microsoft | IBM_DB2"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Microsoft Offer:IBM Sku:IBM_DB2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-IB-IBM_MQ8
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Microsoft',
	[string]$Offer = 'IBM',
	[string]$Skus = 'IBM_MQ8',
	[string]$version =  'latest',
	[string]$Product = 'IBM',
	[string]$name = 'IBM_MQ8'
)
Write-Host "Image Creation in Process - NoPlan Info Win - Microsoft | IBM_MQ8"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Microsoft Offer:IBM Sku:IBM_MQ8 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-IB-IBM_WAS
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Microsoft',
	[string]$Offer = 'IBM',
	[string]$Skus = 'IBM_WAS',
	[string]$version =  'latest',
	[string]$Product = 'IBM',
	[string]$name = 'IBM_WAS'
)
Write-Host "Image Creation in Process - NoPlan Info Win - Microsoft | IBM_WAS"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Microsoft Offer:IBM Sku:IBM_WAS Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-JD-JDK_6
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Microsoft',
	[string]$Offer = 'JDK',
	[string]$Skus = 'JDK_6',
	[string]$version =  'latest',
	[string]$Product = 'JDK',
	[string]$name = 'JDK_6'
)
Write-Host "Image Creation in Process - NoPlan Info Win - Microsoft | JDK_6"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Microsoft Offer:JDK Sku:JDK_6 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-JD-JDK_7
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Microsoft',
	[string]$Offer = 'JDK',
	[string]$Skus = 'JDK_7',
	[string]$version =  'latest',
	[string]$Product = 'JDK',
	[string]$name = 'JDK_7'
)
Write-Host "Image Creation in Process - NoPlan Info Win - Microsoft | JDK_7"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Microsoft Offer:JDK Sku:JDK_7 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-JD-JDK_8
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Microsoft',
	[string]$Offer = 'JDK',
	[string]$Skus = 'JDK_8',
	[string]$version =  'latest',
	[string]$Product = 'JDK',
	[string]$name = 'JDK_8'
)
Write-Host "Image Creation in Process - NoPlan Info Win - Microsoft | JDK_8"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Microsoft Offer:JDK Sku:JDK_8 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Or-Oracle_Database_11g_R2_Enterprise_Edition
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Microsoft',
	[string]$Offer = 'Oracle_Database_11g_R2',
	[string]$Skus = 'Oracle_Database_11g_R2_Enterprise_Edition',
	[string]$version =  'latest',
	[string]$Product = 'Oracle_Database_11g_R2',
	[string]$name = 'Oracle_Database_11g_R2_Enterprise_Edition'
)
Write-Host "Image Creation in Process - NoPlan Info Win - Microsoft | Oracle_Database_11g_R2_Enterprise_Edition"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Microsoft Offer:Oracle_Database_11g_R2 Sku:Oracle_Database_11g_R2_Enterprise_Edition Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Or-Oracle_Database_11g_R2_Standard_Edition
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Microsoft',
	[string]$Offer = 'Oracle_Database_11g_R2',
	[string]$Skus = 'Oracle_Database_11g_R2_Standard_Edition',
	[string]$version =  'latest',
	[string]$Product = 'Oracle_Database_11g_R2',
	[string]$name = 'Oracle_Database_11g_R2_Standard_Edition'
)
Write-Host "Image Creation in Process - NoPlan Info Win - Microsoft | Oracle_Database_11g_R2_Standard_Edition"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Microsoft Offer:Oracle_Database_11g_R2 Sku:Oracle_Database_11g_R2_Standard_Edition Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Or-Oracle_Database_11gR2_and_WebLogic_Server_11g_Enterprise_Edition
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Microsoft',
	[string]$Offer = 'Oracle_Database_11g_R2_and_WebLogic_Server_11g',
	[string]$Skus = 'Oracle_Database_11gR2_and_WebLogic_Server_11g_Enterprise_Edition',
	[string]$version =  'latest',
	[string]$Product = 'Oracle_Database_11g_R2_and_WebLogic_Server_11g',
	[string]$name = 'Oracle_Database_11gR2_and_WebLogic_Server_11g_Enterprise_Edition'
)
Write-Host "Image Creation in Process - NoPlan Info Win - Microsoft | Oracle_Database_11gR2_and_WebLogic_Server_11g_Enterprise_Edition"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Microsoft Offer:Oracle_Database_11g_R2_and_WebLogic_Server_11g Sku:Oracle_Database_11gR2_and_WebLogic_Server_11g_Enterprise_Edition Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Or-Oracle_Database_11gR2_and_WebLogic_Server_11g_Standard_Edition
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Microsoft',
	[string]$Offer = 'Oracle_Database_11g_R2_and_WebLogic_Server_11g',
	[string]$Skus = 'Oracle_Database_11gR2_and_WebLogic_Server_11g_Standard_Edition',
	[string]$version =  'latest',
	[string]$Product = 'Oracle_Database_11g_R2_and_WebLogic_Server_11g',
	[string]$name = 'Oracle_Database_11gR2_and_WebLogic_Server_11g_Standard_Edition'
)
Write-Host "Image Creation in Process - NoPlan Info Win - Microsoft | Oracle_Database_11gR2_and_WebLogic_Server_11g_Standard_Edition"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Microsoft Offer:Oracle_Database_11g_R2_and_WebLogic_Server_11g Sku:Oracle_Database_11gR2_and_WebLogic_Server_11g_Standard_Edition Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Or-Oracle_Database_12c_Enterprise_Edition
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Microsoft',
	[string]$Offer = 'Oracle_Database_12c',
	[string]$Skus = 'Oracle_Database_12c_Enterprise_Edition',
	[string]$version =  'latest',
	[string]$Product = 'Oracle_Database_12c',
	[string]$name = 'Oracle_Database_12c_Enterprise_Edition'
)
Write-Host "Image Creation in Process - NoPlan Info Win - Microsoft | Oracle_Database_12c_Enterprise_Edition"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Microsoft Offer:Oracle_Database_12c Sku:Oracle_Database_12c_Enterprise_Edition Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Or-Oracle_Database_12c_Standard_Edition
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Microsoft',
	[string]$Offer = 'Oracle_Database_12c',
	[string]$Skus = 'Oracle_Database_12c_Standard_Edition',
	[string]$version =  'latest',
	[string]$Product = 'Oracle_Database_12c',
	[string]$name = 'Oracle_Database_12c_Standard_Edition'
)
Write-Host "Image Creation in Process - NoPlan Info Win - Microsoft | Oracle_Database_12c_Standard_Edition"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Microsoft Offer:Oracle_Database_12c Sku:Oracle_Database_12c_Standard_Edition Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Or-Oracle_Database_12c_and_WebLogic_Server_12c_Enterprise_Edition
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Microsoft',
	[string]$Offer = 'Oracle_Database_12c_and_WebLogic_Server_12c',
	[string]$Skus = 'Oracle_Database_12c_and_WebLogic_Server_12c_Enterprise_Edition',
	[string]$version =  'latest',
	[string]$Product = 'Oracle_Database_12c_and_WebLogic_Server_12c',
	[string]$name = 'Oracle_Database_12c_and_WebLogic_Server_12c_Enterprise_Edition'
)
Write-Host "Image Creation in Process - NoPlan Info Win - Microsoft | Oracle_Database_12c_and_WebLogic_Server_12c_Enterprise_Edition"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Microsoft Offer:Oracle_Database_12c_and_WebLogic_Server_12c Sku:Oracle_Database_12c_and_WebLogic_Server_12c_Enterprise_Edition Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Or-Oracle_Database_12c_and_WebLogic_Server_12c_Standard_Edition
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Microsoft',
	[string]$Offer = 'Oracle_Database_12c_and_WebLogic_Server_12c',
	[string]$Skus = 'Oracle_Database_12c_and_WebLogic_Server_12c_Standard_Edition',
	[string]$version =  'latest',
	[string]$Product = 'Oracle_Database_12c_and_WebLogic_Server_12c',
	[string]$name = 'Oracle_Database_12c_and_WebLogic_Server_12c_Standard_Edition'
)
Write-Host "Image Creation in Process - NoPlan Info Win - Microsoft | Oracle_Database_12c_and_WebLogic_Server_12c_Standard_Edition"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Microsoft Offer:Oracle_Database_12c_and_WebLogic_Server_12c Sku:Oracle_Database_12c_and_WebLogic_Server_12c_Standard_Edition Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Or-Oracle_WebLogic_Server_11g_Enterprise_Edition
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Microsoft',
	[string]$Offer = 'Oracle_WebLogic_Server_11g',
	[string]$Skus = 'Oracle_WebLogic_Server_11g_Enterprise_Edition',
	[string]$version =  'latest',
	[string]$Product = 'Oracle_WebLogic_Server_11g',
	[string]$name = 'Oracle_WebLogic_Server_11g_Enterprise_Edition'
)
Write-Host "Image Creation in Process - NoPlan Info Win - Microsoft | Oracle_WebLogic_Server_11g_Enterprise_Edition"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Microsoft Offer:Oracle_WebLogic_Server_11g Sku:Oracle_WebLogic_Server_11g_Enterprise_Edition Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Or-Oracle_WebLogic_Server_11g_R2_Standard_Edition
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Microsoft',
	[string]$Offer = 'Oracle_WebLogic_Server_11g',
	[string]$Skus = 'Oracle_WebLogic_Server_11g_R2_Standard_Edition',
	[string]$version =  'latest',
	[string]$Product = 'Oracle_WebLogic_Server_11g',
	[string]$name = 'Oracle_WebLogic_Server_11g_R2_Standard_Edition'
)
Write-Host "Image Creation in Process - NoPlan Info Win - Microsoft | Oracle_WebLogic_Server_11g_R2_Standard_Edition"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Microsoft Offer:Oracle_WebLogic_Server_11g Sku:Oracle_WebLogic_Server_11g_R2_Standard_Edition Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Or-Oracle_WebLogic_Server_12c_Enterprise_Edition
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Microsoft',
	[string]$Offer = 'Oracle_WebLogic_Server_12c',
	[string]$Skus = 'Oracle_WebLogic_Server_12c_Enterprise_Edition',
	[string]$version =  'latest',
	[string]$Product = 'Oracle_WebLogic_Server_12c',
	[string]$name = 'Oracle_WebLogic_Server_12c_Enterprise_Edition'
)
Write-Host "Image Creation in Process - NoPlan Info Win - Microsoft | Oracle_WebLogic_Server_12c_Enterprise_Edition"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Microsoft Offer:Oracle_WebLogic_Server_12c Sku:Oracle_WebLogic_Server_12c_Enterprise_Edition Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Or-Oracle_WebLogic_Server_12c_Standard_Edition
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Microsoft',
	[string]$Offer = 'Oracle_WebLogic_Server_12c',
	[string]$Skus = 'Oracle_WebLogic_Server_12c_Standard_Edition',
	[string]$version =  'latest',
	[string]$Product = 'Oracle_WebLogic_Server_12c',
	[string]$name = 'Oracle_WebLogic_Server_12c_Standard_Edition'
)
Write-Host "Image Creation in Process - NoPlan Info Win - Microsoft | Oracle_WebLogic_Server_12c_Standard_Edition"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Microsoft Offer:Oracle_WebLogic_Server_12c Sku:Oracle_WebLogic_Server_12c_Standard_Edition Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_mi-li-linuxdsvm
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'microsoft-ads',
	[string]$Offer = 'linux-data-science-vm',
	[string]$Skus = 'linuxdsvm',
	[string]$version =  'latest',
	[string]$Product = 'linux-data-science-vm',
	[string]$name = 'linuxdsvm'
)
Write-Host "Image Creation in Process - NoPlan Info Win - microsoft-ads | linuxdsvm"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: microsoft-ads Offer:linux-data-science-vm Sku:linuxdsvm Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_mi-st-standard-data-science-vm
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'microsoft-ads',
	[string]$Offer = 'standard-data-science-vm',
	[string]$Skus = 'standard-data-science-vm',
	[string]$version =  'latest',
	[string]$Product = 'standard-data-science-vm',
	[string]$name = 'standard-data-science-vm'
)
Write-Host "Image Creation in Process - NoPlan Info Win - microsoft-ads | standard-data-science-vm"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: microsoft-ads Offer:standard-data-science-vm Sku:standard-data-science-vm Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-AS-OpenLogic-CentOs-66
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftAzureSiteRecovery',
	[string]$Offer = 'ASR-Hydration-VMs',
	[string]$Skus = 'OpenLogic-CentOs-66',
	[string]$version =  'latest',
	[string]$Product = 'ASR-Hydration-VMs',
	[string]$name = 'OpenLogic-CentOs-66'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftAzureSiteRecovery | OpenLogic-CentOs-66"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftAzureSiteRecovery Offer:ASR-Hydration-VMs Sku:OpenLogic-CentOs-66 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-AS-Windows-2012-R2-Datacenter
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftAzureSiteRecovery',
	[string]$Offer = 'ASR-Hydration-VMs',
	[string]$Skus = 'Windows-2012-R2-Datacenter',
	[string]$version =  'latest',
	[string]$Product = 'ASR-Hydration-VMs',
	[string]$name = 'Windows-2012-R2-Datacenter'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftAzureSiteRecovery | Windows-2012-R2-Datacenter"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftAzureSiteRecovery Offer:ASR-Hydration-VMs Sku:Windows-2012-R2-Datacenter Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Co-Windows-2012-R2-Datacenter
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftAzureSiteRecovery',
	[string]$Offer = 'Configuration-Server',
	[string]$Skus = 'Windows-2012-R2-Datacenter',
	[string]$version =  'latest',
	[string]$Product = 'Configuration-Server',
	[string]$name = 'Windows-2012-R2-Datacenter'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftAzureSiteRecovery | Windows-2012-R2-Datacenter"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftAzureSiteRecovery Offer:Configuration-Server Sku:Windows-2012-R2-Datacenter Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Co-Windows-2012-R2-Datacenter
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftAzureSiteRecovery',
	[string]$Offer = 'Configuration-Server-Non-VPN',
	[string]$Skus = 'Windows-2012-R2-Datacenter',
	[string]$version =  'latest',
	[string]$Product = 'Configuration-Server-Non-VPN',
	[string]$name = 'Windows-2012-R2-Datacenter'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftAzureSiteRecovery | Windows-2012-R2-Datacenter"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftAzureSiteRecovery Offer:Configuration-Server-Non-VPN Sku:Windows-2012-R2-Datacenter Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Co-Windows-2012-R2-Datacenter
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftAzureSiteRecovery',
	[string]$Offer = 'Configuration-Server-V2',
	[string]$Skus = 'Windows-2012-R2-Datacenter',
	[string]$version =  'latest',
	[string]$Product = 'Configuration-Server-V2',
	[string]$name = 'Windows-2012-R2-Datacenter'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftAzureSiteRecovery | Windows-2012-R2-Datacenter"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftAzureSiteRecovery Offer:Configuration-Server-V2 Sku:Windows-2012-R2-Datacenter Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Co-Windows-2012-R2-Datacenter
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftAzureSiteRecovery',
	[string]$Offer = 'Configuration-Server-VPN',
	[string]$Skus = 'Windows-2012-R2-Datacenter',
	[string]$version =  'latest',
	[string]$Product = 'Configuration-Server-VPN',
	[string]$name = 'Windows-2012-R2-Datacenter'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftAzureSiteRecovery | Windows-2012-R2-Datacenter"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftAzureSiteRecovery Offer:Configuration-Server-VPN Sku:Windows-2012-R2-Datacenter Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Ma-Windows-2012-R2-Datacenter
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftAzureSiteRecovery',
	[string]$Offer = 'Master-Target-Server',
	[string]$Skus = 'Windows-2012-R2-Datacenter',
	[string]$version =  'latest',
	[string]$Product = 'Master-Target-Server',
	[string]$name = 'Windows-2012-R2-Datacenter'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftAzureSiteRecovery | Windows-2012-R2-Datacenter"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftAzureSiteRecovery Offer:Master-Target-Server Sku:Windows-2012-R2-Datacenter Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Pr-Windows-2012-R2-Datacenter
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftAzureSiteRecovery',
	[string]$Offer = 'Process-Server',
	[string]$Skus = 'Windows-2012-R2-Datacenter',
	[string]$version =  'latest',
	[string]$Product = 'Process-Server',
	[string]$name = 'Windows-2012-R2-Datacenter'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftAzureSiteRecovery | Windows-2012-R2-Datacenter"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftAzureSiteRecovery Offer:Process-Server Sku:Windows-2012-R2-Datacenter Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Bi-2013-Developer
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftBizTalkServer',
	[string]$Offer = 'BizTalk-Server',
	[string]$Skus = '2013-Developer',
	[string]$version =  'latest',
	[string]$Product = 'BizTalk-Server',
	[string]$name = '2013-Developer'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftBizTalkServer | 2013-Developer"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftBizTalkServer Offer:BizTalk-Server Sku:2013-Developer Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Bi-2013-Enterprise
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftBizTalkServer',
	[string]$Offer = 'BizTalk-Server',
	[string]$Skus = '2013-Enterprise',
	[string]$version =  'latest',
	[string]$Product = 'BizTalk-Server',
	[string]$name = '2013-Enterprise'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftBizTalkServer | 2013-Enterprise"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftBizTalkServer Offer:BizTalk-Server Sku:2013-Enterprise Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Bi-2013-R2-Enterprise
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftBizTalkServer',
	[string]$Offer = 'BizTalk-Server',
	[string]$Skus = '2013-R2-Enterprise',
	[string]$version =  'latest',
	[string]$Product = 'BizTalk-Server',
	[string]$name = '2013-R2-Enterprise'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftBizTalkServer | 2013-R2-Enterprise"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftBizTalkServer Offer:BizTalk-Server Sku:2013-R2-Enterprise Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Bi-2013-R2-Standard
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftBizTalkServer',
	[string]$Offer = 'BizTalk-Server',
	[string]$Skus = '2013-R2-Standard',
	[string]$version =  'latest',
	[string]$Product = 'BizTalk-Server',
	[string]$name = '2013-R2-Standard'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftBizTalkServer | 2013-R2-Standard"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftBizTalkServer Offer:BizTalk-Server Sku:2013-R2-Standard Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Bi-2013-Standard
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftBizTalkServer',
	[string]$Offer = 'BizTalk-Server',
	[string]$Skus = '2013-Standard',
	[string]$version =  'latest',
	[string]$Product = 'BizTalk-Server',
	[string]$name = '2013-Standard'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftBizTalkServer | 2013-Standard"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftBizTalkServer Offer:BizTalk-Server Sku:2013-Standard Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Bi-2016-PreRelease
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftBizTalkServer',
	[string]$Offer = 'BizTalk-Server',
	[string]$Skus = '2016-PreRelease',
	[string]$version =  'latest',
	[string]$Product = 'BizTalk-Server',
	[string]$name = '2016-PreRelease'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftBizTalkServer | 2016-PreRelease"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftBizTalkServer Offer:BizTalk-Server Sku:2016-PreRelease Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Dy-Pre-Req-AX2012R3-1BOX
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftDynamicsAX',
	[string]$Offer = 'Dynamics',
	[string]$Skus = 'Pre-Req-AX2012R3-1BOX',
	[string]$version =  'latest',
	[string]$Product = 'Dynamics',
	[string]$name = 'Pre-Req-AX2012R3-1BOX'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftDynamicsAX | Pre-Req-AX2012R3-1BOX"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftDynamicsAX Offer:Dynamics Sku:Pre-Req-AX2012R3-1BOX Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Dy-Pre-Req-AX2012R3-AOS
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftDynamicsAX',
	[string]$Offer = 'Dynamics',
	[string]$Skus = 'Pre-Req-AX2012R3-AOS',
	[string]$version =  'latest',
	[string]$Product = 'Dynamics',
	[string]$name = 'Pre-Req-AX2012R3-AOS'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftDynamicsAX | Pre-Req-AX2012R3-AOS"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftDynamicsAX Offer:Dynamics Sku:Pre-Req-AX2012R3-AOS Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Dy-Pre-Req-AX2012R3-CLI
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftDynamicsAX',
	[string]$Offer = 'Dynamics',
	[string]$Skus = 'Pre-Req-AX2012R3-CLI',
	[string]$version =  'latest',
	[string]$Product = 'Dynamics',
	[string]$name = 'Pre-Req-AX2012R3-CLI'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftDynamicsAX | Pre-Req-AX2012R3-CLI"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftDynamicsAX Offer:Dynamics Sku:Pre-Req-AX2012R3-CLI Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Dy-Pre-Req-AX2012R3-EP
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftDynamicsAX',
	[string]$Offer = 'Dynamics',
	[string]$Skus = 'Pre-Req-AX2012R3-EP',
	[string]$version =  'latest',
	[string]$Product = 'Dynamics',
	[string]$name = 'Pre-Req-AX2012R3-EP'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftDynamicsAX | Pre-Req-AX2012R3-EP"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftDynamicsAX Offer:Dynamics Sku:Pre-Req-AX2012R3-EP Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Dy-Pre-Req-AX2012R3-PROD-AOS
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftDynamicsAX',
	[string]$Offer = 'Dynamics',
	[string]$Skus = 'Pre-Req-AX2012R3-PROD-AOS',
	[string]$version =  'latest',
	[string]$Product = 'Dynamics',
	[string]$name = 'Pre-Req-AX2012R3-PROD-AOS'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftDynamicsAX | Pre-Req-AX2012R3-PROD-AOS"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftDynamicsAX Offer:Dynamics Sku:Pre-Req-AX2012R3-PROD-AOS Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Dy-Pre-Req-AX2012R3-RTLECM
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftDynamicsAX',
	[string]$Offer = 'Dynamics',
	[string]$Skus = 'Pre-Req-AX2012R3-RTLECM',
	[string]$version =  'latest',
	[string]$Product = 'Dynamics',
	[string]$name = 'Pre-Req-AX2012R3-RTLECM'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftDynamicsAX | Pre-Req-AX2012R3-RTLECM"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftDynamicsAX Offer:Dynamics Sku:Pre-Req-AX2012R3-RTLECM Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Dy-Pre-Req-AX2012R3-RTLESS
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftDynamicsAX',
	[string]$Offer = 'Dynamics',
	[string]$Skus = 'Pre-Req-AX2012R3-RTLESS',
	[string]$version =  'latest',
	[string]$Product = 'Dynamics',
	[string]$name = 'Pre-Req-AX2012R3-RTLESS'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftDynamicsAX | Pre-Req-AX2012R3-RTLESS"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftDynamicsAX Offer:Dynamics Sku:Pre-Req-AX2012R3-RTLESS Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Dy-Pre-Req-AX2012R3-SQL
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftDynamicsAX',
	[string]$Offer = 'Dynamics',
	[string]$Skus = 'Pre-Req-AX2012R3-SQL',
	[string]$version =  'latest',
	[string]$Product = 'Dynamics',
	[string]$name = 'Pre-Req-AX2012R3-SQL'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftDynamicsAX | Pre-Req-AX2012R3-SQL"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftDynamicsAX Offer:Dynamics Sku:Pre-Req-AX2012R3-SQL Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Dy-Pre-Req-AX6-ARA
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftDynamicsAX',
	[string]$Offer = 'Dynamics',
	[string]$Skus = 'Pre-Req-AX6-ARA',
	[string]$version =  'latest',
	[string]$Product = 'Dynamics',
	[string]$name = 'Pre-Req-AX6-ARA'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftDynamicsAX | Pre-Req-AX6-ARA"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftDynamicsAX Offer:Dynamics Sku:Pre-Req-AX6-ARA Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Dy-Pre-Req-AX7-AOS
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftDynamicsAX',
	[string]$Offer = 'Dynamics',
	[string]$Skus = 'Pre-Req-AX7-AOS',
	[string]$version =  'latest',
	[string]$Product = 'Dynamics',
	[string]$name = 'Pre-Req-AX7-AOS'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftDynamicsAX | Pre-Req-AX7-AOS"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftDynamicsAX Offer:Dynamics Sku:Pre-Req-AX7-AOS Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Dy-Pre-Req-AX7-AOS-RTWU1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftDynamicsAX',
	[string]$Offer = 'Dynamics',
	[string]$Skus = 'Pre-Req-AX7-AOS-RTWU1',
	[string]$version =  'latest',
	[string]$Product = 'Dynamics',
	[string]$name = 'Pre-Req-AX7-AOS-RTWU1'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftDynamicsAX | Pre-Req-AX7-AOS-RTWU1"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftDynamicsAX Offer:Dynamics Sku:Pre-Req-AX7-AOS-RTWU1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Dy-Pre-Req-AX7-AOS-RTWU1-Preview
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftDynamicsAX',
	[string]$Offer = 'Dynamics',
	[string]$Skus = 'Pre-Req-AX7-AOS-RTWU1-Preview',
	[string]$version =  'latest',
	[string]$Product = 'Dynamics',
	[string]$name = 'Pre-Req-AX7-AOS-RTWU1-Preview'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftDynamicsAX | Pre-Req-AX7-AOS-RTWU1-Preview"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftDynamicsAX Offer:Dynamics Sku:Pre-Req-AX7-AOS-RTWU1-Preview Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Dy-Pre-Req-AX7-AOS-RTWU2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftDynamicsAX',
	[string]$Offer = 'Dynamics',
	[string]$Skus = 'Pre-Req-AX7-AOS-RTWU2',
	[string]$version =  'latest',
	[string]$Product = 'Dynamics',
	[string]$name = 'Pre-Req-AX7-AOS-RTWU2'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftDynamicsAX | Pre-Req-AX7-AOS-RTWU2"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftDynamicsAX Offer:Dynamics Sku:Pre-Req-AX7-AOS-RTWU2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Dy-Pre-Req-AX7-AOS-RTWU2-Preview
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftDynamicsAX',
	[string]$Offer = 'Dynamics',
	[string]$Skus = 'Pre-Req-AX7-AOS-RTWU2-Preview',
	[string]$version =  'latest',
	[string]$Product = 'Dynamics',
	[string]$name = 'Pre-Req-AX7-AOS-RTWU2-Preview'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftDynamicsAX | Pre-Req-AX7-AOS-RTWU2-Preview"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftDynamicsAX Offer:Dynamics Sku:Pre-Req-AX7-AOS-RTWU2-Preview Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Dy-Pre-Req-AX7-AOS-RTWU2-SN
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftDynamicsAX',
	[string]$Offer = 'Dynamics',
	[string]$Skus = 'Pre-Req-AX7-AOS-RTWU2-SN',
	[string]$version =  'latest',
	[string]$Product = 'Dynamics',
	[string]$name = 'Pre-Req-AX7-AOS-RTWU2-SN'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftDynamicsAX | Pre-Req-AX7-AOS-RTWU2-SN"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftDynamicsAX Offer:Dynamics Sku:Pre-Req-AX7-AOS-RTWU2-SN Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Dy-Pre-Req-AX7-AOS-U3
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftDynamicsAX',
	[string]$Offer = 'Dynamics',
	[string]$Skus = 'Pre-Req-AX7-AOS-U3',
	[string]$version =  'latest',
	[string]$Product = 'Dynamics',
	[string]$name = 'Pre-Req-AX7-AOS-U3'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftDynamicsAX | Pre-Req-AX7-AOS-U3"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftDynamicsAX Offer:Dynamics Sku:Pre-Req-AX7-AOS-U3 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Dy-Pre-Req-AX7-BI
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftDynamicsAX',
	[string]$Offer = 'Dynamics',
	[string]$Skus = 'Pre-Req-AX7-BI',
	[string]$version =  'latest',
	[string]$Product = 'Dynamics',
	[string]$name = 'Pre-Req-AX7-BI'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftDynamicsAX | Pre-Req-AX7-BI"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftDynamicsAX Offer:Dynamics Sku:Pre-Req-AX7-BI Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Dy-Pre-Req-AX7-BI-RTWU1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftDynamicsAX',
	[string]$Offer = 'Dynamics',
	[string]$Skus = 'Pre-Req-AX7-BI-RTWU1',
	[string]$version =  'latest',
	[string]$Product = 'Dynamics',
	[string]$name = 'Pre-Req-AX7-BI-RTWU1'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftDynamicsAX | Pre-Req-AX7-BI-RTWU1"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftDynamicsAX Offer:Dynamics Sku:Pre-Req-AX7-BI-RTWU1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Dy-Pre-Req-AX7-BI-RTWU1-Preview
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftDynamicsAX',
	[string]$Offer = 'Dynamics',
	[string]$Skus = 'Pre-Req-AX7-BI-RTWU1-Preview',
	[string]$version =  'latest',
	[string]$Product = 'Dynamics',
	[string]$name = 'Pre-Req-AX7-BI-RTWU1-Preview'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftDynamicsAX | Pre-Req-AX7-BI-RTWU1-Preview"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftDynamicsAX Offer:Dynamics Sku:Pre-Req-AX7-BI-RTWU1-Preview Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Dy-Pre-Req-AX7-BI-RTWU2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftDynamicsAX',
	[string]$Offer = 'Dynamics',
	[string]$Skus = 'Pre-Req-AX7-BI-RTWU2',
	[string]$version =  'latest',
	[string]$Product = 'Dynamics',
	[string]$name = 'Pre-Req-AX7-BI-RTWU2'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftDynamicsAX | Pre-Req-AX7-BI-RTWU2"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftDynamicsAX Offer:Dynamics Sku:Pre-Req-AX7-BI-RTWU2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Dy-Pre-Req-AX7-BI-RTWU2-Preview
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftDynamicsAX',
	[string]$Offer = 'Dynamics',
	[string]$Skus = 'Pre-Req-AX7-BI-RTWU2-Preview',
	[string]$version =  'latest',
	[string]$Product = 'Dynamics',
	[string]$name = 'Pre-Req-AX7-BI-RTWU2-Preview'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftDynamicsAX | Pre-Req-AX7-BI-RTWU2-Preview"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftDynamicsAX Offer:Dynamics Sku:Pre-Req-AX7-BI-RTWU2-Preview Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Dy-Pre-Req-AX7-BI-RTWU2-SN
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftDynamicsAX',
	[string]$Offer = 'Dynamics',
	[string]$Skus = 'Pre-Req-AX7-BI-RTWU2-SN',
	[string]$version =  'latest',
	[string]$Product = 'Dynamics',
	[string]$name = 'Pre-Req-AX7-BI-RTWU2-SN'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftDynamicsAX | Pre-Req-AX7-BI-RTWU2-SN"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftDynamicsAX Offer:Dynamics Sku:Pre-Req-AX7-BI-RTWU2-SN Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Dy-Pre-Req-AX7-BI-U3
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftDynamicsAX',
	[string]$Offer = 'Dynamics',
	[string]$Skus = 'Pre-Req-AX7-BI-U3',
	[string]$version =  'latest',
	[string]$Product = 'Dynamics',
	[string]$name = 'Pre-Req-AX7-BI-U3'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftDynamicsAX | Pre-Req-AX7-BI-U3"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftDynamicsAX Offer:Dynamics Sku:Pre-Req-AX7-BI-U3 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Dy-Pre-Req-AX7-Gate-RTWU1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftDynamicsAX',
	[string]$Offer = 'Dynamics',
	[string]$Skus = 'Pre-Req-AX7-Gate-RTWU1',
	[string]$version =  'latest',
	[string]$Product = 'Dynamics',
	[string]$name = 'Pre-Req-AX7-Gate-RTWU1'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftDynamicsAX | Pre-Req-AX7-Gate-RTWU1"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftDynamicsAX Offer:Dynamics Sku:Pre-Req-AX7-Gate-RTWU1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Dy-Pre-Req-AX7-Gate-RTWU1-Preview
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftDynamicsAX',
	[string]$Offer = 'Dynamics',
	[string]$Skus = 'Pre-Req-AX7-Gate-RTWU1-Preview',
	[string]$version =  'latest',
	[string]$Product = 'Dynamics',
	[string]$name = 'Pre-Req-AX7-Gate-RTWU1-Preview'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftDynamicsAX | Pre-Req-AX7-Gate-RTWU1-Preview"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftDynamicsAX Offer:Dynamics Sku:Pre-Req-AX7-Gate-RTWU1-Preview Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Dy-Pre-Req-AX7-OneBox
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftDynamicsAX',
	[string]$Offer = 'Dynamics',
	[string]$Skus = 'Pre-Req-AX7-OneBox',
	[string]$version =  'latest',
	[string]$Product = 'Dynamics',
	[string]$name = 'Pre-Req-AX7-OneBox'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftDynamicsAX | Pre-Req-AX7-OneBox"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftDynamicsAX Offer:Dynamics Sku:Pre-Req-AX7-OneBox Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Dy-Pre-Req-AX7-Onebox-RTWU1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftDynamicsAX',
	[string]$Offer = 'Dynamics',
	[string]$Skus = 'Pre-Req-AX7-Onebox-RTWU1',
	[string]$version =  'latest',
	[string]$Product = 'Dynamics',
	[string]$name = 'Pre-Req-AX7-Onebox-RTWU1'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftDynamicsAX | Pre-Req-AX7-Onebox-RTWU1"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftDynamicsAX Offer:Dynamics Sku:Pre-Req-AX7-Onebox-RTWU1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Dy-Pre-Req-AX7-Onebox-RTWU1-Preview
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftDynamicsAX',
	[string]$Offer = 'Dynamics',
	[string]$Skus = 'Pre-Req-AX7-Onebox-RTWU1-Preview',
	[string]$version =  'latest',
	[string]$Product = 'Dynamics',
	[string]$name = 'Pre-Req-AX7-Onebox-RTWU1-Preview'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftDynamicsAX | Pre-Req-AX7-Onebox-RTWU1-Preview"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftDynamicsAX Offer:Dynamics Sku:Pre-Req-AX7-Onebox-RTWU1-Preview Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Dy-Pre-Req-AX7-Onebox-RTWU2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftDynamicsAX',
	[string]$Offer = 'Dynamics',
	[string]$Skus = 'Pre-Req-AX7-Onebox-RTWU2',
	[string]$version =  'latest',
	[string]$Product = 'Dynamics',
	[string]$name = 'Pre-Req-AX7-Onebox-RTWU2'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftDynamicsAX | Pre-Req-AX7-Onebox-RTWU2"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftDynamicsAX Offer:Dynamics Sku:Pre-Req-AX7-Onebox-RTWU2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Dy-Pre-Req-AX7-Onebox-RTWU2-Preview
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftDynamicsAX',
	[string]$Offer = 'Dynamics',
	[string]$Skus = 'Pre-Req-AX7-Onebox-RTWU2-Preview',
	[string]$version =  'latest',
	[string]$Product = 'Dynamics',
	[string]$name = 'Pre-Req-AX7-Onebox-RTWU2-Preview'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftDynamicsAX | Pre-Req-AX7-Onebox-RTWU2-Preview"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftDynamicsAX Offer:Dynamics Sku:Pre-Req-AX7-Onebox-RTWU2-Preview Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Dy-Pre-Req-AX7-Onebox-RTWU2-SN
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftDynamicsAX',
	[string]$Offer = 'Dynamics',
	[string]$Skus = 'Pre-Req-AX7-Onebox-RTWU2-SN',
	[string]$version =  'latest',
	[string]$Product = 'Dynamics',
	[string]$name = 'Pre-Req-AX7-Onebox-RTWU2-SN'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftDynamicsAX | Pre-Req-AX7-Onebox-RTWU2-SN"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftDynamicsAX Offer:Dynamics Sku:Pre-Req-AX7-Onebox-RTWU2-SN Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Dy-Pre-Req-AX7-Onebox-U3
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftDynamicsAX',
	[string]$Offer = 'Dynamics',
	[string]$Skus = 'Pre-Req-AX7-Onebox-U3',
	[string]$version =  'latest',
	[string]$Product = 'Dynamics',
	[string]$name = 'Pre-Req-AX7-Onebox-U3'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftDynamicsAX | Pre-Req-AX7-Onebox-U3"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftDynamicsAX Offer:Dynamics Sku:Pre-Req-AX7-Onebox-U3 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Dy-Pre-Req-AX7-Onebox-VSENT
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftDynamicsAX',
	[string]$Offer = 'Dynamics',
	[string]$Skus = 'Pre-Req-AX7-Onebox-VSENT',
	[string]$version =  'latest',
	[string]$Product = 'Dynamics',
	[string]$name = 'Pre-Req-AX7-Onebox-VSENT'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftDynamicsAX | Pre-Req-AX7-Onebox-VSENT"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftDynamicsAX Offer:Dynamics Sku:Pre-Req-AX7-Onebox-VSENT Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Dy-Pre-Req-AX7-Onebox-VSENT-RTWU1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftDynamicsAX',
	[string]$Offer = 'Dynamics',
	[string]$Skus = 'Pre-Req-AX7-Onebox-VSENT-RTWU1',
	[string]$version =  'latest',
	[string]$Product = 'Dynamics',
	[string]$name = 'Pre-Req-AX7-Onebox-VSENT-RTWU1'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftDynamicsAX | Pre-Req-AX7-Onebox-VSENT-RTWU1"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftDynamicsAX Offer:Dynamics Sku:Pre-Req-AX7-Onebox-VSENT-RTWU1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Dy-Pre-Req-AX7-Onebox-VSENT-RTWU1-Preview
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftDynamicsAX',
	[string]$Offer = 'Dynamics',
	[string]$Skus = 'Pre-Req-AX7-Onebox-VSENT-RTWU1-Preview',
	[string]$version =  'latest',
	[string]$Product = 'Dynamics',
	[string]$name = 'Pre-Req-AX7-Onebox-VSENT-RTWU1-Preview'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftDynamicsAX | Pre-Req-AX7-Onebox-VSENT-RTWU1-Preview"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftDynamicsAX Offer:Dynamics Sku:Pre-Req-AX7-Onebox-VSENT-RTWU1-Preview Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Dy-Pre-Req-AX7-Onebox-VSENT-RTWU2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftDynamicsAX',
	[string]$Offer = 'Dynamics',
	[string]$Skus = 'Pre-Req-AX7-Onebox-VSENT-RTWU2',
	[string]$version =  'latest',
	[string]$Product = 'Dynamics',
	[string]$name = 'Pre-Req-AX7-Onebox-VSENT-RTWU2'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftDynamicsAX | Pre-Req-AX7-Onebox-VSENT-RTWU2"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftDynamicsAX Offer:Dynamics Sku:Pre-Req-AX7-Onebox-VSENT-RTWU2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Dy-Pre-Req-AX7-Onebox-VSENT-RTWU2-Preview
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftDynamicsAX',
	[string]$Offer = 'Dynamics',
	[string]$Skus = 'Pre-Req-AX7-Onebox-VSENT-RTWU2-Preview',
	[string]$version =  'latest',
	[string]$Product = 'Dynamics',
	[string]$name = 'Pre-Req-AX7-Onebox-VSENT-RTWU2-Preview'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftDynamicsAX | Pre-Req-AX7-Onebox-VSENT-RTWU2-Preview"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftDynamicsAX Offer:Dynamics Sku:Pre-Req-AX7-Onebox-VSENT-RTWU2-Preview Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Dy-Pre-Req-AX7-Onebox-VSENT-RTWU2-SN
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftDynamicsAX',
	[string]$Offer = 'Dynamics',
	[string]$Skus = 'Pre-Req-AX7-Onebox-VSENT-RTWU2-SN',
	[string]$version =  'latest',
	[string]$Product = 'Dynamics',
	[string]$name = 'Pre-Req-AX7-Onebox-VSENT-RTWU2-SN'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftDynamicsAX | Pre-Req-AX7-Onebox-VSENT-RTWU2-SN"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftDynamicsAX Offer:Dynamics Sku:Pre-Req-AX7-Onebox-VSENT-RTWU2-SN Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Dy-Pre-Req-AX7-Onebox-VSENT-U3
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftDynamicsAX',
	[string]$Offer = 'Dynamics',
	[string]$Skus = 'Pre-Req-AX7-Onebox-VSENT-U3',
	[string]$version =  'latest',
	[string]$Product = 'Dynamics',
	[string]$name = 'Pre-Req-AX7-Onebox-VSENT-U3'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftDynamicsAX | Pre-Req-AX7-Onebox-VSENT-U3"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftDynamicsAX Offer:Dynamics Sku:Pre-Req-AX7-Onebox-VSENT-U3 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Dy-Pre-Req-AX7-PowerApps
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftDynamicsAX',
	[string]$Offer = 'Dynamics',
	[string]$Skus = 'Pre-Req-AX7-PowerApps',
	[string]$version =  'latest',
	[string]$Product = 'Dynamics',
	[string]$name = 'Pre-Req-AX7-PowerApps'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftDynamicsAX | Pre-Req-AX7-PowerApps"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftDynamicsAX Offer:Dynamics Sku:Pre-Req-AX7-PowerApps Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Dy-Pre-Req-AX7-PowerApps-Preview
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftDynamicsAX',
	[string]$Offer = 'Dynamics',
	[string]$Skus = 'Pre-Req-AX7-PowerApps-Preview',
	[string]$version =  'latest',
	[string]$Product = 'Dynamics',
	[string]$name = 'Pre-Req-AX7-PowerApps-Preview'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftDynamicsAX | Pre-Req-AX7-PowerApps-Preview"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftDynamicsAX Offer:Dynamics Sku:Pre-Req-AX7-PowerApps-Preview Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Dy-Pre-Req-AX7-PowerApps-RTWU1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftDynamicsAX',
	[string]$Offer = 'Dynamics',
	[string]$Skus = 'Pre-Req-AX7-PowerApps-RTWU1',
	[string]$version =  'latest',
	[string]$Product = 'Dynamics',
	[string]$name = 'Pre-Req-AX7-PowerApps-RTWU1'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftDynamicsAX | Pre-Req-AX7-PowerApps-RTWU1"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftDynamicsAX Offer:Dynamics Sku:Pre-Req-AX7-PowerApps-RTWU1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Dy-Pre-Req-AX7-UT-RTWU1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftDynamicsAX',
	[string]$Offer = 'Dynamics',
	[string]$Skus = 'Pre-Req-AX7-UT-RTWU1',
	[string]$version =  'latest',
	[string]$Product = 'Dynamics',
	[string]$name = 'Pre-Req-AX7-UT-RTWU1'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftDynamicsAX | Pre-Req-AX7-UT-RTWU1"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftDynamicsAX Offer:Dynamics Sku:Pre-Req-AX7-UT-RTWU1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Dy-Pre-Req-2012-R3-AOS-Test
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftDynamicsAX',
	[string]$Offer = 'DynamicsAX',
	[string]$Skus = 'Pre-Req-2012-R3-AOS-Test',
	[string]$version =  'latest',
	[string]$Product = 'DynamicsAX',
	[string]$name = 'Pre-Req-2012-R3-AOS-Test'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftDynamicsAX | Pre-Req-2012-R3-AOS-Test"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftDynamicsAX Offer:DynamicsAX Sku:Pre-Req-2012-R3-AOS-Test Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Dy-Pre-Req-2012-R3-Client-Test
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftDynamicsAX',
	[string]$Offer = 'DynamicsAX',
	[string]$Skus = 'Pre-Req-2012-R3-Client-Test',
	[string]$version =  'latest',
	[string]$Product = 'DynamicsAX',
	[string]$name = 'Pre-Req-2012-R3-Client-Test'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftDynamicsAX | Pre-Req-2012-R3-Client-Test"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftDynamicsAX Offer:DynamicsAX Sku:Pre-Req-2012-R3-Client-Test Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Dy-Pre-Req-2012-R3-DatabaseServer
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftDynamicsAX',
	[string]$Offer = 'DynamicsAX',
	[string]$Skus = 'Pre-Req-2012-R3-DatabaseServer',
	[string]$version =  'latest',
	[string]$Product = 'DynamicsAX',
	[string]$name = 'Pre-Req-2012-R3-DatabaseServer'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftDynamicsAX | Pre-Req-2012-R3-DatabaseServer"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftDynamicsAX Offer:DynamicsAX Sku:Pre-Req-2012-R3-DatabaseServer Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Dy-Pre-Req-2012-R3-EnterprisePortal
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftDynamicsAX',
	[string]$Offer = 'DynamicsAX',
	[string]$Skus = 'Pre-Req-2012-R3-EnterprisePortal',
	[string]$version =  'latest',
	[string]$Product = 'DynamicsAX',
	[string]$name = 'Pre-Req-2012-R3-EnterprisePortal'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftDynamicsAX | Pre-Req-2012-R3-EnterprisePortal"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftDynamicsAX Offer:DynamicsAX Sku:Pre-Req-2012-R3-EnterprisePortal Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Dy-2013-Developer
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftDynamicsGP',
	[string]$Offer = 'Dynamics-GP',
	[string]$Skus = '2013-Developer',
	[string]$version =  'latest',
	[string]$Product = 'Dynamics-GP',
	[string]$name = '2013-Developer'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftDynamicsGP | 2013-Developer"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftDynamicsGP Offer:Dynamics-GP Sku:2013-Developer Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Dy-2013-R2-Developer
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftDynamicsGP',
	[string]$Offer = 'Dynamics-GP',
	[string]$Skus = '2013-R2-Developer',
	[string]$version =  'latest',
	[string]$Product = 'Dynamics-GP',
	[string]$name = '2013-R2-Developer'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftDynamicsGP | 2013-R2-Developer"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftDynamicsGP Offer:Dynamics-GP Sku:2013-R2-Developer Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Dy-2015-Developer
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftDynamicsGP',
	[string]$Offer = 'Dynamics-GP',
	[string]$Skus = '2015-Developer',
	[string]$version =  'latest',
	[string]$Product = 'Dynamics-GP',
	[string]$name = '2015-Developer'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftDynamicsGP | 2015-Developer"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftDynamicsGP Offer:Dynamics-GP Sku:2015-Developer Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Dy-2015
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftDynamicsNAV',
	[string]$Offer = 'DynamicsNAV',
	[string]$Skus = '2015',
	[string]$version =  'latest',
	[string]$Product = 'DynamicsNAV',
	[string]$name = '2015'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftDynamicsNAV | 2015"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftDynamicsNAV Offer:DynamicsNAV Sku:2015 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Dy-2016
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftDynamicsNAV',
	[string]$Offer = 'DynamicsNAV',
	[string]$Skus = '2016',
	[string]$version =  'latest',
	[string]$Product = 'DynamicsNAV',
	[string]$name = '2016'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftDynamicsNAV | 2016"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftDynamicsNAV Offer:DynamicsNAV Sku:2016 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-NA-1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftHybridCloudStorage',
	[string]$Offer = 'NA',
	[string]$Skus = '1',
	[string]$version =  'latest',
	[string]$Product = 'NA',
	[string]$name = '1'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftHybridCloudStorage | 1"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftHybridCloudStorage Offer:NA Sku:1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Pr-1.0.0
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftHybridCloudStorage',
	[string]$Offer = 'PremiumSVATesting',
	[string]$Skus = '1.0.0',
	[string]$version =  'latest',
	[string]$Product = 'PremiumSVATesting',
	[string]$name = '1.0.0'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftHybridCloudStorage | 1.0.0"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftHybridCloudStorage Offer:PremiumSVATesting Sku:1.0.0 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-St-StorSimple-8000-Series-Release
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftHybridCloudStorage',
	[string]$Offer = 'StorSimple',
	[string]$Skus = 'StorSimple-8000-Series-Release',
	[string]$version =  'latest',
	[string]$Product = 'StorSimple',
	[string]$name = 'StorSimple-8000-Series-Release'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftHybridCloudStorage | StorSimple-8000-Series-Release"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftHybridCloudStorage Offer:StorSimple Sku:StorSimple-8000-Series-Release Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-St-StorSimple-8000-Series-Update-0.3
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftHybridCloudStorage',
	[string]$Offer = 'StorSimple',
	[string]$Skus = 'StorSimple-8000-Series-Update-0.3',
	[string]$version =  'latest',
	[string]$Product = 'StorSimple',
	[string]$name = 'StorSimple-8000-Series-Update-0.3'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftHybridCloudStorage | StorSimple-8000-Series-Update-0.3"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftHybridCloudStorage Offer:StorSimple Sku:StorSimple-8000-Series-Update-0.3 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-St-StorSimple-Open-VM-2016-04-06-9600.17693.160317
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftHybridCloudStorage',
	[string]$Offer = 'StorSimpleOpenVM',
	[string]$Skus = 'StorSimple-Open-VM-2016-04-06-9600.17693.160317',
	[string]$version =  'latest',
	[string]$Product = 'StorSimpleOpenVM',
	[string]$name = 'StorSimple-Open-VM-2016-04-06-9600.17693.160317'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftHybridCloudStorage | StorSimple-Open-VM-2016-04-06-9600.17693.160317"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftHybridCloudStorage Offer:StorSimpleOpenVM Sku:StorSimple-Open-VM-2016-04-06-9600.17693.160317 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-St-StorSimpleUpdate2RC
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftHybridCloudStorage',
	[string]$Offer = 'StorSimpleVA',
	[string]$Skus = 'StorSimpleUpdate2RC',
	[string]$version =  'latest',
	[string]$Product = 'StorSimpleVA',
	[string]$name = 'StorSimpleUpdate2RC'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftHybridCloudStorage | StorSimpleUpdate2RC"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftHybridCloudStorage Offer:StorSimpleVA Sku:StorSimpleUpdate2RC Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-St-StorSimpleUpdate3RC
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftHybridCloudStorage',
	[string]$Offer = 'StorSimpleVA',
	[string]$Skus = 'StorSimpleUpdate3RC',
	[string]$version =  'latest',
	[string]$Product = 'StorSimpleVA',
	[string]$name = 'StorSimpleUpdate3RC'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftHybridCloudStorage | StorSimpleUpdate3RC"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftHybridCloudStorage Offer:StorSimpleVA Sku:StorSimpleUpdate3RC Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-St-StorSimpleUpdate2RC1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftHybridCloudStorage',
	[string]$Offer = 'StorSimpleVANovember',
	[string]$Skus = 'StorSimpleUpdate2RC1',
	[string]$version =  'latest',
	[string]$Product = 'StorSimpleVANovember',
	[string]$name = 'StorSimpleUpdate2RC1'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftHybridCloudStorage | StorSimpleUpdate2RC1"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftHybridCloudStorage Offer:StorSimpleVANovember Sku:StorSimpleUpdate2RC1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Te-1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftHybridCloudStorage',
	[string]$Offer = 'TestingOnlyToBeRemoved',
	[string]$Skus = '1',
	[string]$version =  'latest',
	[string]$Product = 'TestingOnlyToBeRemoved',
	[string]$name = '1'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftHybridCloudStorage | 1"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftHybridCloudStorage Offer:TestingOnlyToBeRemoved Sku:1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Te-2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftHybridCloudStorage',
	[string]$Offer = 'TestingPrivateBakedVHDPremiumStorage',
	[string]$Skus = '2',
	[string]$version =  'latest',
	[string]$Product = 'TestingPrivateBakedVHDPremiumStorage',
	[string]$name = '2'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftHybridCloudStorage | 2"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftHybridCloudStorage Offer:TestingPrivateBakedVHDPremiumStorage Sku:2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Fr-10.3
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftOSTC',
	[string]$Offer = 'FreeBSD',
	[string]$Skus = '10.3',
	[string]$version =  'latest',
	[string]$Product = 'FreeBSD',
	[string]$name = '10.3'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftOSTC | 10.3"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftOSTC Offer:FreeBSD Sku:10.3 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-RS-Enterprise
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftRServer',
	[string]$Offer = 'RServer-Linux',
	[string]$Skus = 'Enterprise',
	[string]$version =  'latest',
	[string]$Product = 'RServer-Linux',
	[string]$name = 'Enterprise'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftRServer | Enterprise"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftRServer Offer:RServer-Linux Sku:Enterprise Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-RS-Enterprise
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftRServer',
	[string]$Offer = 'RServer-WS2012R2',
	[string]$Skus = 'Enterprise',
	[string]$version =  'latest',
	[string]$Product = 'RServer-WS2012R2',
	[string]$name = 'Enterprise'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftRServer | Enterprise"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftRServer Offer:RServer-WS2012R2 Sku:Enterprise Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Mi-2013
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSharePoint',
	[string]$Offer = 'MicrosoftSharePointServer',
	[string]$Skus = '2013',
	[string]$version =  'latest',
	[string]$Product = 'MicrosoftSharePointServer',
	[string]$name = '2013'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSharePoint | 2013"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSharePoint Offer:MicrosoftSharePointServer Sku:2013 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Mi-2016
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSharePoint',
	[string]$Offer = 'MicrosoftSharePointServer',
	[string]$Skus = '2016',
	[string]$version =  'latest',
	[string]$Product = 'MicrosoftSharePointServer',
	[string]$name = '2016'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSharePoint | 2016"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSharePoint Offer:MicrosoftSharePointServer Sku:2016 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-Enterprise
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2008R2SP3-WS2008R2SP1',
	[string]$Skus = 'Enterprise',
	[string]$version =  'latest',
	[string]$Product = 'SQL2008R2SP3-WS2008R2SP1',
	[string]$name = 'Enterprise'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | Enterprise"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2008R2SP3-WS2008R2SP1 Sku:Enterprise Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-Standard
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2008R2SP3-WS2008R2SP1',
	[string]$Skus = 'Standard',
	[string]$version =  'latest',
	[string]$Product = 'SQL2008R2SP3-WS2008R2SP1',
	[string]$name = 'Standard'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | Standard"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2008R2SP3-WS2008R2SP1 Sku:Standard Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-Web
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2008R2SP3-WS2008R2SP1',
	[string]$Skus = 'Web',
	[string]$version =  'latest',
	[string]$Product = 'SQL2008R2SP3-WS2008R2SP1',
	[string]$name = 'Web'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | Web"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2008R2SP3-WS2008R2SP1 Sku:Web Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-Express
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2008R2SP3-WS2012',
	[string]$Skus = 'Express',
	[string]$version =  'latest',
	[string]$Product = 'SQL2008R2SP3-WS2012',
	[string]$name = 'Express'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | Express"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2008R2SP3-WS2012 Sku:Express Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-Enterprise
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2012SP2-WS2012',
	[string]$Skus = 'Enterprise',
	[string]$version =  'latest',
	[string]$Product = 'SQL2012SP2-WS2012',
	[string]$name = 'Enterprise'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | Enterprise"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2012SP2-WS2012 Sku:Enterprise Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-Enterprise-Optimized-for-DW
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2012SP2-WS2012',
	[string]$Skus = 'Enterprise-Optimized-for-DW',
	[string]$version =  'latest',
	[string]$Product = 'SQL2012SP2-WS2012',
	[string]$name = 'Enterprise-Optimized-for-DW'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | Enterprise-Optimized-for-DW"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2012SP2-WS2012 Sku:Enterprise-Optimized-for-DW Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-Enterprise-Optimized-for-OLTP
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2012SP2-WS2012',
	[string]$Skus = 'Enterprise-Optimized-for-OLTP',
	[string]$version =  'latest',
	[string]$Product = 'SQL2012SP2-WS2012',
	[string]$name = 'Enterprise-Optimized-for-OLTP'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | Enterprise-Optimized-for-OLTP"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2012SP2-WS2012 Sku:Enterprise-Optimized-for-OLTP Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-Express
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2012SP2-WS2012',
	[string]$Skus = 'Express',
	[string]$version =  'latest',
	[string]$Product = 'SQL2012SP2-WS2012',
	[string]$name = 'Express'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | Express"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2012SP2-WS2012 Sku:Express Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-Standard
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2012SP2-WS2012',
	[string]$Skus = 'Standard',
	[string]$version =  'latest',
	[string]$Product = 'SQL2012SP2-WS2012',
	[string]$name = 'Standard'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | Standard"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2012SP2-WS2012 Sku:Standard Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-Web
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2012SP2-WS2012',
	[string]$Skus = 'Web',
	[string]$version =  'latest',
	[string]$Product = 'SQL2012SP2-WS2012',
	[string]$name = 'Web'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | Web"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2012SP2-WS2012 Sku:Web Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-Enterprise
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2012SP2-WS2012R2',
	[string]$Skus = 'Enterprise',
	[string]$version =  'latest',
	[string]$Product = 'SQL2012SP2-WS2012R2',
	[string]$name = 'Enterprise'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | Enterprise"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2012SP2-WS2012R2 Sku:Enterprise Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-Enterprise-Optimized-for-DW
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2012SP2-WS2012R2',
	[string]$Skus = 'Enterprise-Optimized-for-DW',
	[string]$version =  'latest',
	[string]$Product = 'SQL2012SP2-WS2012R2',
	[string]$name = 'Enterprise-Optimized-for-DW'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | Enterprise-Optimized-for-DW"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2012SP2-WS2012R2 Sku:Enterprise-Optimized-for-DW Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-Enterprise-Optimized-for-OLTP
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2012SP2-WS2012R2',
	[string]$Skus = 'Enterprise-Optimized-for-OLTP',
	[string]$version =  'latest',
	[string]$Product = 'SQL2012SP2-WS2012R2',
	[string]$name = 'Enterprise-Optimized-for-OLTP'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | Enterprise-Optimized-for-OLTP"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2012SP2-WS2012R2 Sku:Enterprise-Optimized-for-OLTP Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-Standard
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2012SP2-WS2012R2',
	[string]$Skus = 'Standard',
	[string]$version =  'latest',
	[string]$Product = 'SQL2012SP2-WS2012R2',
	[string]$name = 'Standard'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | Standard"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2012SP2-WS2012R2 Sku:Standard Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-Web
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2012SP2-WS2012R2',
	[string]$Skus = 'Web',
	[string]$version =  'latest',
	[string]$Product = 'SQL2012SP2-WS2012R2',
	[string]$name = 'Web'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | Web"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2012SP2-WS2012R2 Sku:Web Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-Enterprise
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2012SP3-WS2012R2',
	[string]$Skus = 'Enterprise',
	[string]$version =  'latest',
	[string]$Product = 'SQL2012SP3-WS2012R2',
	[string]$name = 'Enterprise'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | Enterprise"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2012SP3-WS2012R2 Sku:Enterprise Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-Express
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2012SP3-WS2012R2',
	[string]$Skus = 'Express',
	[string]$version =  'latest',
	[string]$Product = 'SQL2012SP3-WS2012R2',
	[string]$name = 'Express'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | Express"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2012SP3-WS2012R2 Sku:Express Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-Standard
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2012SP3-WS2012R2',
	[string]$Skus = 'Standard',
	[string]$version =  'latest',
	[string]$Product = 'SQL2012SP3-WS2012R2',
	[string]$name = 'Standard'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | Standard"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2012SP3-WS2012R2 Sku:Standard Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-Web
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2012SP3-WS2012R2',
	[string]$Skus = 'Web',
	[string]$version =  'latest',
	[string]$Product = 'SQL2012SP3-WS2012R2',
	[string]$name = 'Web'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | Web"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2012SP3-WS2012R2 Sku:Web Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-Enterprise
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2012SP3-WS2012R2-BYOL',
	[string]$Skus = 'Enterprise',
	[string]$version =  'latest',
	[string]$Product = 'SQL2012SP3-WS2012R2-BYOL',
	[string]$name = 'Enterprise'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | Enterprise"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2012SP3-WS2012R2-BYOL Sku:Enterprise Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-Standard
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2012SP3-WS2012R2-BYOL',
	[string]$Skus = 'Standard',
	[string]$version =  'latest',
	[string]$Product = 'SQL2012SP3-WS2012R2-BYOL',
	[string]$name = 'Standard'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | Standard"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2012SP3-WS2012R2-BYOL Sku:Standard Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-Enterprise
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2014-WS2012R2',
	[string]$Skus = 'Enterprise',
	[string]$version =  'latest',
	[string]$Product = 'SQL2014-WS2012R2',
	[string]$name = 'Enterprise'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | Enterprise"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2014-WS2012R2 Sku:Enterprise Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-Enterprise-Optimized
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2014-WS2012R2',
	[string]$Skus = 'Enterprise-Optimized',
	[string]$version =  'latest',
	[string]$Product = 'SQL2014-WS2012R2',
	[string]$name = 'Enterprise-Optimized'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | Enterprise-Optimized"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2014-WS2012R2 Sku:Enterprise-Optimized Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-Enterprise-Optimized-for-DW
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2014-WS2012R2',
	[string]$Skus = 'Enterprise-Optimized-for-DW',
	[string]$version =  'latest',
	[string]$Product = 'SQL2014-WS2012R2',
	[string]$name = 'Enterprise-Optimized-for-DW'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | Enterprise-Optimized-for-DW"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2014-WS2012R2 Sku:Enterprise-Optimized-for-DW Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-Enterprise-Optimized-for-OLTP
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2014-WS2012R2',
	[string]$Skus = 'Enterprise-Optimized-for-OLTP',
	[string]$version =  'latest',
	[string]$Product = 'SQL2014-WS2012R2',
	[string]$name = 'Enterprise-Optimized-for-OLTP'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | Enterprise-Optimized-for-OLTP"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2014-WS2012R2 Sku:Enterprise-Optimized-for-OLTP Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-Standard
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2014-WS2012R2',
	[string]$Skus = 'Standard',
	[string]$version =  'latest',
	[string]$Product = 'SQL2014-WS2012R2',
	[string]$name = 'Standard'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | Standard"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2014-WS2012R2 Sku:Standard Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-Web
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2014-WS2012R2',
	[string]$Skus = 'Web',
	[string]$version =  'latest',
	[string]$Product = 'SQL2014-WS2012R2',
	[string]$name = 'Web'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | Web"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2014-WS2012R2 Sku:Web Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-Enterprise
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2014SP1-WS2012R2',
	[string]$Skus = 'Enterprise',
	[string]$version =  'latest',
	[string]$Product = 'SQL2014SP1-WS2012R2',
	[string]$name = 'Enterprise'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | Enterprise"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2014SP1-WS2012R2 Sku:Enterprise Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-Enterprise-Optimized-for-DW
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2014SP1-WS2012R2',
	[string]$Skus = 'Enterprise-Optimized-for-DW',
	[string]$version =  'latest',
	[string]$Product = 'SQL2014SP1-WS2012R2',
	[string]$name = 'Enterprise-Optimized-for-DW'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | Enterprise-Optimized-for-DW"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2014SP1-WS2012R2 Sku:Enterprise-Optimized-for-DW Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-Enterprise-Optimized-for-OLTP
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2014SP1-WS2012R2',
	[string]$Skus = 'Enterprise-Optimized-for-OLTP',
	[string]$version =  'latest',
	[string]$Product = 'SQL2014SP1-WS2012R2',
	[string]$name = 'Enterprise-Optimized-for-OLTP'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | Enterprise-Optimized-for-OLTP"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2014SP1-WS2012R2 Sku:Enterprise-Optimized-for-OLTP Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-Express
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2014SP1-WS2012R2',
	[string]$Skus = 'Express',
	[string]$version =  'latest',
	[string]$Product = 'SQL2014SP1-WS2012R2',
	[string]$name = 'Express'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | Express"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2014SP1-WS2012R2 Sku:Express Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-Standard
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2014SP1-WS2012R2',
	[string]$Skus = 'Standard',
	[string]$version =  'latest',
	[string]$Product = 'SQL2014SP1-WS2012R2',
	[string]$name = 'Standard'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | Standard"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2014SP1-WS2012R2 Sku:Standard Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-Web
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2014SP1-WS2012R2',
	[string]$Skus = 'Web',
	[string]$version =  'latest',
	[string]$Product = 'SQL2014SP1-WS2012R2',
	[string]$name = 'Web'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | Web"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2014SP1-WS2012R2 Sku:Web Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-Enterprise
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2014SP1-WS2012R2-BYOL',
	[string]$Skus = 'Enterprise',
	[string]$version =  'latest',
	[string]$Product = 'SQL2014SP1-WS2012R2-BYOL',
	[string]$name = 'Enterprise'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | Enterprise"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2014SP1-WS2012R2-BYOL Sku:Enterprise Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-Standard
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2014SP1-WS2012R2-BYOL',
	[string]$Skus = 'Standard',
	[string]$version =  'latest',
	[string]$Product = 'SQL2014SP1-WS2012R2-BYOL',
	[string]$name = 'Standard'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | Standard"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2014SP1-WS2012R2-BYOL Sku:Standard Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-Enterprise
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2014SP2-WS2012R2',
	[string]$Skus = 'Enterprise',
	[string]$version =  'latest',
	[string]$Product = 'SQL2014SP2-WS2012R2',
	[string]$name = 'Enterprise'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | Enterprise"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2014SP2-WS2012R2 Sku:Enterprise Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-Express
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2014SP2-WS2012R2',
	[string]$Skus = 'Express',
	[string]$version =  'latest',
	[string]$Product = 'SQL2014SP2-WS2012R2',
	[string]$name = 'Express'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | Express"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2014SP2-WS2012R2 Sku:Express Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-Standard
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2014SP2-WS2012R2',
	[string]$Skus = 'Standard',
	[string]$version =  'latest',
	[string]$Product = 'SQL2014SP2-WS2012R2',
	[string]$name = 'Standard'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | Standard"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2014SP2-WS2012R2 Sku:Standard Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-Web
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2014SP2-WS2012R2',
	[string]$Skus = 'Web',
	[string]$version =  'latest',
	[string]$Product = 'SQL2014SP2-WS2012R2',
	[string]$name = 'Web'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | Web"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2014SP2-WS2012R2 Sku:Web Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-Enterprise
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2016-WS2012R2',
	[string]$Skus = 'Enterprise',
	[string]$version =  'latest',
	[string]$Product = 'SQL2016-WS2012R2',
	[string]$name = 'Enterprise'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | Enterprise"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2016-WS2012R2 Sku:Enterprise Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-Express
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2016-WS2012R2',
	[string]$Skus = 'Express',
	[string]$version =  'latest',
	[string]$Product = 'SQL2016-WS2012R2',
	[string]$name = 'Express'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | Express"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2016-WS2012R2 Sku:Express Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-SQLDEV
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2016-WS2012R2',
	[string]$Skus = 'SQLDEV',
	[string]$version =  'latest',
	[string]$Product = 'SQL2016-WS2012R2',
	[string]$name = 'SQLDEV'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | SQLDEV"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2016-WS2012R2 Sku:SQLDEV Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-Standard
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2016-WS2012R2',
	[string]$Skus = 'Standard',
	[string]$version =  'latest',
	[string]$Product = 'SQL2016-WS2012R2',
	[string]$name = 'Standard'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | Standard"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2016-WS2012R2 Sku:Standard Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-Web
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2016-WS2012R2',
	[string]$Skus = 'Web',
	[string]$version =  'latest',
	[string]$Product = 'SQL2016-WS2012R2',
	[string]$name = 'Web'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | Web"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2016-WS2012R2 Sku:Web Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-Enterprise
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2016-WS2012R2-BYOL',
	[string]$Skus = 'Enterprise',
	[string]$version =  'latest',
	[string]$Product = 'SQL2016-WS2012R2-BYOL',
	[string]$name = 'Enterprise'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | Enterprise"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2016-WS2012R2-BYOL Sku:Enterprise Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-Standard
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2016-WS2012R2-BYOL',
	[string]$Skus = 'Standard',
	[string]$version =  'latest',
	[string]$Product = 'SQL2016-WS2012R2-BYOL',
	[string]$name = 'Standard'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | Standard"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2016-WS2012R2-BYOL Sku:Standard Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-Enterprise
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2016-WS2016',
	[string]$Skus = 'Enterprise',
	[string]$version =  'latest',
	[string]$Product = 'SQL2016-WS2016',
	[string]$name = 'Enterprise'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | Enterprise"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2016-WS2016 Sku:Enterprise Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-SQLDEV
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2016-WS2016',
	[string]$Skus = 'SQLDEV',
	[string]$version =  'latest',
	[string]$Product = 'SQL2016-WS2016',
	[string]$name = 'SQLDEV'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | SQLDEV"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2016-WS2016 Sku:SQLDEV Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-Standard
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2016-WS2016',
	[string]$Skus = 'Standard',
	[string]$version =  'latest',
	[string]$Product = 'SQL2016-WS2016',
	[string]$name = 'Standard'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | Standard"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2016-WS2016 Sku:Standard Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-Web
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2016-WS2016',
	[string]$Skus = 'Web',
	[string]$version =  'latest',
	[string]$Product = 'SQL2016-WS2016',
	[string]$name = 'Web'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | Web"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2016-WS2016 Sku:Web Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-Evaluation
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2016CTP3-WS2012R2',
	[string]$Skus = 'Evaluation',
	[string]$version =  'latest',
	[string]$Product = 'SQL2016CTP3-WS2012R2',
	[string]$name = 'Evaluation'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | Evaluation"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2016CTP3-WS2012R2 Sku:Evaluation Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-SQLENTCORE
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2016CTP3.1-WS2012R2',
	[string]$Skus = 'SQLENTCORE',
	[string]$version =  'latest',
	[string]$Product = 'SQL2016CTP3.1-WS2012R2',
	[string]$name = 'SQLENTCORE'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | SQLENTCORE"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2016CTP3.1-WS2012R2 Sku:SQLENTCORE Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-Evaluation
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2016CTP3.2-WS2012R2',
	[string]$Skus = 'Evaluation',
	[string]$version =  'latest',
	[string]$Product = 'SQL2016CTP3.2-WS2012R2',
	[string]$name = 'Evaluation'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | Evaluation"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2016CTP3.2-WS2012R2 Sku:Evaluation Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-SQ-Evaluation
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftSQLServer',
	[string]$Offer = 'SQL2016RC3-WS2012R2v2',
	[string]$Skus = 'Evaluation',
	[string]$version =  'latest',
	[string]$Product = 'SQL2016RC3-WS2012R2v2',
	[string]$name = 'Evaluation'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftSQLServer | Evaluation"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftSQLServer Offer:SQL2016RC3-WS2012R2v2 Sku:Evaluation Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Te-2013-Update4
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftVisualStudio',
	[string]$Offer = 'TeamFoundationServer',
	[string]$Skus = '2013-Update4',
	[string]$version =  'latest',
	[string]$Product = 'TeamFoundationServer',
	[string]$name = '2013-Update4'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftVisualStudio | 2013-Update4"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftVisualStudio Offer:TeamFoundationServer Sku:2013-Update4 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Te-Team-Foundation-Server-2013-Update4-WS2012R2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftVisualStudio',
	[string]$Offer = 'TeamFoundationServer',
	[string]$Skus = 'Team-Foundation-Server-2013-Update4-WS2012R2',
	[string]$version =  'latest',
	[string]$Product = 'TeamFoundationServer',
	[string]$name = 'Team-Foundation-Server-2013-Update4-WS2012R2'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftVisualStudio | Team-Foundation-Server-2013-Update4-WS2012R2"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftVisualStudio Offer:TeamFoundationServer Sku:Team-Foundation-Server-2013-Update4-WS2012R2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Vi-Jenkins272-Ubuntu1404LTS
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftVisualStudio',
	[string]$Offer = 'VisualStudio',
	[string]$Skus = 'Jenkins272-Ubuntu1404LTS',
	[string]$version =  'latest',
	[string]$Product = 'VisualStudio',
	[string]$name = 'Jenkins272-Ubuntu1404LTS'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftVisualStudio | Jenkins272-Ubuntu1404LTS"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftVisualStudio Offer:VisualStudio Sku:Jenkins272-Ubuntu1404LTS Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Vi-VS-2013-Comm-VSU5-AzureSDK-2.8-WS2012R2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftVisualStudio',
	[string]$Offer = 'VisualStudio',
	[string]$Skus = 'VS-2013-Comm-VSU5-AzureSDK-2.8-WS2012R2',
	[string]$version =  'latest',
	[string]$Product = 'VisualStudio',
	[string]$name = 'VS-2013-Comm-VSU5-AzureSDK-2.8-WS2012R2'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftVisualStudio | VS-2013-Comm-VSU5-AzureSDK-2.8-WS2012R2"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftVisualStudio Offer:VisualStudio Sku:VS-2013-Comm-VSU5-AzureSDK-2.8-WS2012R2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Vi-VS-2013-Prem-VSU5-AzureSDK-282-WS2012R2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftVisualStudio',
	[string]$Offer = 'VisualStudio',
	[string]$Skus = 'VS-2013-Prem-VSU5-AzureSDK-282-WS2012R2',
	[string]$version =  'latest',
	[string]$Product = 'VisualStudio',
	[string]$name = 'VS-2013-Prem-VSU5-AzureSDK-282-WS2012R2'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftVisualStudio | VS-2013-Prem-VSU5-AzureSDK-282-WS2012R2"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftVisualStudio Offer:VisualStudio Sku:VS-2013-Prem-VSU5-AzureSDK-282-WS2012R2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Vi-VS-2013-Ult-VSU5-AzureSDK-282-WS2012R2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftVisualStudio',
	[string]$Offer = 'VisualStudio',
	[string]$Skus = 'VS-2013-Ult-VSU5-AzureSDK-282-WS2012R2',
	[string]$version =  'latest',
	[string]$Product = 'VisualStudio',
	[string]$name = 'VS-2013-Ult-VSU5-AzureSDK-282-WS2012R2'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftVisualStudio | VS-2013-Ult-VSU5-AzureSDK-282-WS2012R2"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftVisualStudio Offer:VisualStudio Sku:VS-2013-Ult-VSU5-AzureSDK-282-WS2012R2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Vi-VS-2015-Comm-AzureSDK-2.9-W10T-Win10-N
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftVisualStudio',
	[string]$Offer = 'VisualStudio',
	[string]$Skus = 'VS-2015-Comm-AzureSDK-2.9-W10T-Win10-N',
	[string]$version =  'latest',
	[string]$Product = 'VisualStudio',
	[string]$name = 'VS-2015-Comm-AzureSDK-2.9-W10T-Win10-N'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftVisualStudio | VS-2015-Comm-AzureSDK-2.9-W10T-Win10-N"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftVisualStudio Offer:VisualStudio Sku:VS-2015-Comm-AzureSDK-2.9-W10T-Win10-N Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Vi-VS-2015-Comm-AzureSDK-2.9-WS2012R2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftVisualStudio',
	[string]$Offer = 'VisualStudio',
	[string]$Skus = 'VS-2015-Comm-AzureSDK-2.9-WS2012R2',
	[string]$version =  'latest',
	[string]$Product = 'VisualStudio',
	[string]$name = 'VS-2015-Comm-AzureSDK-2.9-WS2012R2'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftVisualStudio | VS-2015-Comm-AzureSDK-2.9-WS2012R2"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftVisualStudio Offer:VisualStudio Sku:VS-2015-Comm-AzureSDK-2.9-WS2012R2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Vi-VS-2015-Comm-VSU3-AzureSDK-291-Win10-N
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftVisualStudio',
	[string]$Offer = 'VisualStudio',
	[string]$Skus = 'VS-2015-Comm-VSU3-AzureSDK-291-Win10-N',
	[string]$version =  'latest',
	[string]$Product = 'VisualStudio',
	[string]$name = 'VS-2015-Comm-VSU3-AzureSDK-291-Win10-N'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftVisualStudio | VS-2015-Comm-VSU3-AzureSDK-291-Win10-N"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftVisualStudio Offer:VisualStudio Sku:VS-2015-Comm-VSU3-AzureSDK-291-Win10-N Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Vi-VS-2015-Comm-VSU3-AzureSDK-291-WS2012R2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftVisualStudio',
	[string]$Offer = 'VisualStudio',
	[string]$Skus = 'VS-2015-Comm-VSU3-AzureSDK-291-WS2012R2',
	[string]$version =  'latest',
	[string]$Product = 'VisualStudio',
	[string]$name = 'VS-2015-Comm-VSU3-AzureSDK-291-WS2012R2'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftVisualStudio | VS-2015-Comm-VSU3-AzureSDK-291-WS2012R2"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftVisualStudio Offer:VisualStudio Sku:VS-2015-Comm-VSU3-AzureSDK-291-WS2012R2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Vi-VS-2015-Ent-AzureSDK-2.9-WS2012R2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftVisualStudio',
	[string]$Offer = 'VisualStudio',
	[string]$Skus = 'VS-2015-Ent-AzureSDK-2.9-WS2012R2',
	[string]$version =  'latest',
	[string]$Product = 'VisualStudio',
	[string]$name = 'VS-2015-Ent-AzureSDK-2.9-WS2012R2'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftVisualStudio | VS-2015-Ent-AzureSDK-2.9-WS2012R2"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftVisualStudio Offer:VisualStudio Sku:VS-2015-Ent-AzureSDK-2.9-WS2012R2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Vi-VS-2015-Ent-AzureSDK-29-W10T-Win10-N
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftVisualStudio',
	[string]$Offer = 'VisualStudio',
	[string]$Skus = 'VS-2015-Ent-AzureSDK-29-W10T-Win10-N',
	[string]$version =  'latest',
	[string]$Product = 'VisualStudio',
	[string]$name = 'VS-2015-Ent-AzureSDK-29-W10T-Win10-N'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftVisualStudio | VS-2015-Ent-AzureSDK-29-W10T-Win10-N"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftVisualStudio Offer:VisualStudio Sku:VS-2015-Ent-AzureSDK-29-W10T-Win10-N Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Vi-VS-2015-Ent-VSU3-AzureSDK-291-Win10-N
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftVisualStudio',
	[string]$Offer = 'VisualStudio',
	[string]$Skus = 'VS-2015-Ent-VSU3-AzureSDK-291-Win10-N',
	[string]$version =  'latest',
	[string]$Product = 'VisualStudio',
	[string]$name = 'VS-2015-Ent-VSU3-AzureSDK-291-Win10-N'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftVisualStudio | VS-2015-Ent-VSU3-AzureSDK-291-Win10-N"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftVisualStudio Offer:VisualStudio Sku:VS-2015-Ent-VSU3-AzureSDK-291-Win10-N Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Vi-VS-2015-Ent-VSU3-AzureSDK-291-WS2012R2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftVisualStudio',
	[string]$Offer = 'VisualStudio',
	[string]$Skus = 'VS-2015-Ent-VSU3-AzureSDK-291-WS2012R2',
	[string]$version =  'latest',
	[string]$Product = 'VisualStudio',
	[string]$name = 'VS-2015-Ent-VSU3-AzureSDK-291-WS2012R2'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftVisualStudio | VS-2015-Ent-VSU3-AzureSDK-291-WS2012R2"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftVisualStudio Offer:VisualStudio Sku:VS-2015-Ent-VSU3-AzureSDK-291-WS2012R2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Vi-VS-Dev15-Preview3-Ent-AzureSDK-291-Win10-N
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftVisualStudio',
	[string]$Offer = 'VisualStudio',
	[string]$Skus = 'VS-Dev15-Preview3-Ent-AzureSDK-291-Win10-N',
	[string]$version =  'latest',
	[string]$Product = 'VisualStudio',
	[string]$name = 'VS-Dev15-Preview3-Ent-AzureSDK-291-Win10-N'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftVisualStudio | VS-Dev15-Preview3-Ent-AzureSDK-291-Win10-N"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftVisualStudio Offer:VisualStudio Sku:VS-Dev15-Preview3-Ent-AzureSDK-291-Win10-N Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Vi-VS-Dev15-Preview3-Ent-AzureSDK-291-WS2012R2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftVisualStudio',
	[string]$Offer = 'VisualStudio',
	[string]$Skus = 'VS-Dev15-Preview3-Ent-AzureSDK-291-WS2012R2',
	[string]$version =  'latest',
	[string]$Product = 'VisualStudio',
	[string]$name = 'VS-Dev15-Preview3-Ent-AzureSDK-291-WS2012R2'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftVisualStudio | VS-Dev15-Preview3-Ent-AzureSDK-291-WS2012R2"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftVisualStudio Offer:VisualStudio Sku:VS-Dev15-Preview3-Ent-AzureSDK-291-WS2012R2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Vi-VS-Dev15-Preview5-Ent-AzureSDK-291-Win10-N
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftVisualStudio',
	[string]$Offer = 'VisualStudio',
	[string]$Skus = 'VS-Dev15-Preview5-Ent-AzureSDK-291-Win10-N',
	[string]$version =  'latest',
	[string]$Product = 'VisualStudio',
	[string]$name = 'VS-Dev15-Preview5-Ent-AzureSDK-291-Win10-N'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftVisualStudio | VS-Dev15-Preview5-Ent-AzureSDK-291-Win10-N"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftVisualStudio Offer:VisualStudio Sku:VS-Dev15-Preview5-Ent-AzureSDK-291-Win10-N Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Vi-VS-Dev15-Preview5-Ent-AzureSDK-291-WS2012R2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftVisualStudio',
	[string]$Offer = 'VisualStudio',
	[string]$Skus = 'VS-Dev15-Preview5-Ent-AzureSDK-291-WS2012R2',
	[string]$version =  'latest',
	[string]$Product = 'VisualStudio',
	[string]$name = 'VS-Dev15-Preview5-Ent-AzureSDK-291-WS2012R2'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftVisualStudio | VS-Dev15-Preview5-Ent-AzureSDK-291-WS2012R2"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftVisualStudio Offer:VisualStudio Sku:VS-Dev15-Preview5-Ent-AzureSDK-291-WS2012R2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Wi-Win7-SP1-Ent-N
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftVisualStudio',
	[string]$Offer = 'Windows',
	[string]$Skus = 'Win7-SP1-Ent-N',
	[string]$version =  'latest',
	[string]$Product = 'Windows',
	[string]$name = 'Win7-SP1-Ent-N'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftVisualStudio | Win7-SP1-Ent-N"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftVisualStudio Offer:Windows Sku:Win7-SP1-Ent-N Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Wi-Win8.1-Ent-N
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftVisualStudio',
	[string]$Offer = 'Windows',
	[string]$Skus = 'Win8.1-Ent-N',
	[string]$version =  'latest',
	[string]$Product = 'Windows',
	[string]$name = 'Win8.1-Ent-N'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftVisualStudio | Win8.1-Ent-N"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftVisualStudio Offer:Windows Sku:Win8.1-Ent-N Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Wi-Windows-10-N-x64
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftVisualStudio',
	[string]$Offer = 'Windows',
	[string]$Skus = 'Windows-10-N-x64',
	[string]$version =  'latest',
	[string]$Product = 'Windows',
	[string]$name = 'Windows-10-N-x64'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftVisualStudio | Windows-10-N-x64"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftVisualStudio Offer:Windows Sku:Windows-10-N-x64 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Wi-2008-R2-SP1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftWindowsServer',
	[string]$Offer = 'WindowsServer',
	[string]$Skus = '2008-R2-SP1',
	[string]$version =  'latest',
	[string]$Product = 'WindowsServer',
	[string]$name = '2008-R2-SP1'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftWindowsServer | 2008-R2-SP1"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftWindowsServer Offer:WindowsServer Sku:2008-R2-SP1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Wi-2008-R2-SP1-BYOL
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftWindowsServer',
	[string]$Offer = 'WindowsServer',
	[string]$Skus = '2008-R2-SP1-BYOL',
	[string]$version =  'latest',
	[string]$Product = 'WindowsServer',
	[string]$name = '2008-R2-SP1-BYOL'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftWindowsServer | 2008-R2-SP1-BYOL"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftWindowsServer Offer:WindowsServer Sku:2008-R2-SP1-BYOL Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Wi-2012-Datacenter
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftWindowsServer',
	[string]$Offer = 'WindowsServer',
	[string]$Skus = '2012-Datacenter',
	[string]$version =  'latest',
	[string]$Product = 'WindowsServer',
	[string]$name = '2012-Datacenter'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftWindowsServer | 2012-Datacenter"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftWindowsServer Offer:WindowsServer Sku:2012-Datacenter Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Wi-2012-Datacenter-BYOL
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftWindowsServer',
	[string]$Offer = 'WindowsServer',
	[string]$Skus = '2012-Datacenter-BYOL',
	[string]$version =  'latest',
	[string]$Product = 'WindowsServer',
	[string]$name = '2012-Datacenter-BYOL'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftWindowsServer | 2012-Datacenter-BYOL"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftWindowsServer Offer:WindowsServer Sku:2012-Datacenter-BYOL Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Wi-2012-R2-Datacenter
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftWindowsServer',
	[string]$Offer = 'WindowsServer',
	[string]$Skus = '2012-R2-Datacenter',
	[string]$version =  'latest',
	[string]$Product = 'WindowsServer',
	[string]$name = '2012-R2-Datacenter'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftWindowsServer | 2012-R2-Datacenter"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftWindowsServer Offer:WindowsServer Sku:2012-R2-Datacenter Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Wi-2012-R2-Datacenter-BYOL
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftWindowsServer',
	[string]$Offer = 'WindowsServer',
	[string]$Skus = '2012-R2-Datacenter-BYOL',
	[string]$version =  'latest',
	[string]$Product = 'WindowsServer',
	[string]$name = '2012-R2-Datacenter-BYOL'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftWindowsServer | 2012-R2-Datacenter-BYOL"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftWindowsServer Offer:WindowsServer Sku:2012-R2-Datacenter-BYOL Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Wi-2016-Datacenter
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftWindowsServer',
	[string]$Offer = 'WindowsServer',
	[string]$Skus = '2016-Datacenter',
	[string]$version =  'latest',
	[string]$Product = 'WindowsServer',
	[string]$name = '2016-Datacenter'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftWindowsServer | 2016-Datacenter"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftWindowsServer Offer:WindowsServer Sku:2016-Datacenter Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Wi-2016-Nano-Server
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftWindowsServer',
	[string]$Offer = 'WindowsServer',
	[string]$Skus = '2016-Nano-Server',
	[string]$version =  'latest',
	[string]$Product = 'WindowsServer',
	[string]$name = '2016-Nano-Server'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftWindowsServer | 2016-Nano-Server"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftWindowsServer Offer:WindowsServer Sku:2016-Nano-Server Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Wi-2016-Nano-Server-Technical-Preview
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftWindowsServer',
	[string]$Offer = 'WindowsServer',
	[string]$Skus = '2016-Nano-Server-Technical-Preview',
	[string]$version =  'latest',
	[string]$Product = 'WindowsServer',
	[string]$name = '2016-Nano-Server-Technical-Preview'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftWindowsServer | 2016-Nano-Server-Technical-Preview"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftWindowsServer Offer:WindowsServer Sku:2016-Nano-Server-Technical-Preview Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Wi-2016-Technical-Preview-with-Containers
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftWindowsServer',
	[string]$Offer = 'WindowsServer',
	[string]$Skus = '2016-Technical-Preview-with-Containers',
	[string]$version =  'latest',
	[string]$Product = 'WindowsServer',
	[string]$name = '2016-Technical-Preview-with-Containers'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftWindowsServer | 2016-Technical-Preview-with-Containers"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftWindowsServer Offer:WindowsServer Sku:2016-Technical-Preview-with-Containers Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Wi-Windows-Server-Technical-Preview
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftWindowsServer',
	[string]$Offer = 'WindowsServer',
	[string]$Skus = 'Windows-Server-Technical-Preview',
	[string]$version =  'latest',
	[string]$Product = 'WindowsServer',
	[string]$name = 'Windows-Server-Technical-Preview'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftWindowsServer | Windows-Server-Technical-Preview"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftWindowsServer Offer:WindowsServer Sku:Windows-Server-Technical-Preview Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Wi-WindowsServerEssentials
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftWindowsServerEssentials',
	[string]$Offer = 'WindowsServerEssentials',
	[string]$Skus = 'WindowsServerEssentials',
	[string]$version =  'latest',
	[string]$Product = 'WindowsServerEssentials',
	[string]$name = 'WindowsServerEssentials'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftWindowsServerEssentials | WindowsServerEssentials"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftWindowsServerEssentials Offer:WindowsServerEssentials Sku:WindowsServerEssentials Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Wi-2012R2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftWindowsServerHPCPack',
	[string]$Offer = 'WindowsServerHPCPack',
	[string]$Skus = '2012R2',
	[string]$version =  'latest',
	[string]$Product = 'WindowsServerHPCPack',
	[string]$name = '2012R2'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftWindowsServerHPCPack | 2012R2"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftWindowsServerHPCPack Offer:WindowsServerHPCPack Sku:2012R2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Wi-2012R2CN
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftWindowsServerHPCPack',
	[string]$Offer = 'WindowsServerHPCPack',
	[string]$Skus = '2012R2CN',
	[string]$version =  'latest',
	[string]$Product = 'WindowsServerHPCPack',
	[string]$name = '2012R2CN'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftWindowsServerHPCPack | 2012R2CN"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftWindowsServerHPCPack Offer:WindowsServerHPCPack Sku:2012R2CN Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Wi-2012R2CNExcel
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftWindowsServerHPCPack',
	[string]$Offer = 'WindowsServerHPCPack',
	[string]$Skus = '2012R2CNExcel',
	[string]$version =  'latest',
	[string]$Product = 'WindowsServerHPCPack',
	[string]$name = '2012R2CNExcel'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftWindowsServerHPCPack | 2012R2CNExcel"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftWindowsServerHPCPack Offer:WindowsServerHPCPack Sku:2012R2CNExcel Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Wi-TechnicalPreview
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftWindowsServerHPCPack',
	[string]$Offer = 'WindowsServerHPCPack',
	[string]$Skus = 'TechnicalPreview',
	[string]$version =  'latest',
	[string]$Product = 'WindowsServerHPCPack',
	[string]$name = 'TechnicalPreview'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftWindowsServerHPCPack | TechnicalPreview"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftWindowsServerHPCPack Offer:WindowsServerHPCPack Sku:TechnicalPreview Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Wi-RDSH-Office13P
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftWindowsServerRemoteDesktop',
	[string]$Offer = 'WindowsServer',
	[string]$Skus = 'RDSH-Office13P',
	[string]$version =  'latest',
	[string]$Product = 'WindowsServer',
	[string]$name = 'RDSH-Office13P'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftWindowsServerRemoteDesktop | RDSH-Office13P"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftWindowsServerRemoteDesktop Offer:WindowsServer Sku:RDSH-Office13P Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Wi-RDSH-Office365P
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftWindowsServerRemoteDesktop',
	[string]$Offer = 'WindowsServer',
	[string]$Skus = 'RDSH-Office365P',
	[string]$version =  'latest',
	[string]$Product = 'WindowsServer',
	[string]$name = 'RDSH-Office365P'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftWindowsServerRemoteDesktop | RDSH-Office365P"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftWindowsServerRemoteDesktop Offer:WindowsServer Sku:RDSH-Office365P Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfowin_Mi-Wi-Remote-Desktop-Session-Host
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'MicrosoftWindowsServerRemoteDesktop',
	[string]$Offer = 'WindowsServer',
	[string]$Skus = 'Remote-Desktop-Session-Host',
	[string]$version =  'latest',
	[string]$Product = 'WindowsServer',
	[string]$name = 'Remote-Desktop-Session-Host'
)
Write-Host "Image Creation in Process - NoPlan Info Win - MicrosoftWindowsServerRemoteDesktop | Remote-Desktop-Session-Host"
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: MicrosoftWindowsServerRemoteDesktop Offer:WindowsServer Sku:Remote-Desktop-Session-Host Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_mi-we-midvision-ibm_was_base_edition-7_0_0
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'midvision',
	[string]$Offer = 'websphere-application-server-be',
	[string]$Skus = 'midvision-ibm_was_base_edition-7_0_0',
	[string]$version =  'latest',
	[string]$Product = 'websphere-application-server-be',
	[string]$name = 'midvision-ibm_was_base_edition-7_0_0'
)
Write-Host "Image Creation in Process - Plan Info - midvision | midvision-ibm_was_base_edition-7_0_0"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: midvision Offer:websphere-application-server-be Sku:midvision-ibm_was_base_edition-7_0_0 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_mi-we-midvision-ibm_was_base_edition-7_0_0_29
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'midvision',
	[string]$Offer = 'websphere-application-server-be',
	[string]$Skus = 'midvision-ibm_was_base_edition-7_0_0_29',
	[string]$version =  'latest',
	[string]$Product = 'websphere-application-server-be',
	[string]$name = 'midvision-ibm_was_base_edition-7_0_0_29'
)
Write-Host "Image Creation in Process - Plan Info - midvision | midvision-ibm_was_base_edition-7_0_0_29"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: midvision Offer:websphere-application-server-be Sku:midvision-ibm_was_base_edition-7_0_0_29 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_mi-we-midvision-ibm_was_base_edition-7_0_0_37
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'midvision',
	[string]$Offer = 'websphere-application-server-be',
	[string]$Skus = 'midvision-ibm_was_base_edition-7_0_0_37',
	[string]$version =  'latest',
	[string]$Product = 'websphere-application-server-be',
	[string]$name = 'midvision-ibm_was_base_edition-7_0_0_37'
)
Write-Host "Image Creation in Process - Plan Info - midvision | midvision-ibm_was_base_edition-7_0_0_37"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: midvision Offer:websphere-application-server-be Sku:midvision-ibm_was_base_edition-7_0_0_37 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_mi-we-midvision-ibm_was_base_edition-8_0_0
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'midvision',
	[string]$Offer = 'websphere-application-server-be',
	[string]$Skus = 'midvision-ibm_was_base_edition-8_0_0',
	[string]$version =  'latest',
	[string]$Product = 'websphere-application-server-be',
	[string]$name = 'midvision-ibm_was_base_edition-8_0_0'
)
Write-Host "Image Creation in Process - Plan Info - midvision | midvision-ibm_was_base_edition-8_0_0"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: midvision Offer:websphere-application-server-be Sku:midvision-ibm_was_base_edition-8_0_0 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_mi-we-midvision-ibm_was_base_edition-8_0_0_10
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'midvision',
	[string]$Offer = 'websphere-application-server-be',
	[string]$Skus = 'midvision-ibm_was_base_edition-8_0_0_10',
	[string]$version =  'latest',
	[string]$Product = 'websphere-application-server-be',
	[string]$name = 'midvision-ibm_was_base_edition-8_0_0_10'
)
Write-Host "Image Creation in Process - Plan Info - midvision | midvision-ibm_was_base_edition-8_0_0_10"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: midvision Offer:websphere-application-server-be Sku:midvision-ibm_was_base_edition-8_0_0_10 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_mi-we-midvision-ibm_was_base_edition-8_0_0_7
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'midvision',
	[string]$Offer = 'websphere-application-server-be',
	[string]$Skus = 'midvision-ibm_was_base_edition-8_0_0_7',
	[string]$version =  'latest',
	[string]$Product = 'websphere-application-server-be',
	[string]$name = 'midvision-ibm_was_base_edition-8_0_0_7'
)
Write-Host "Image Creation in Process - Plan Info - midvision | midvision-ibm_was_base_edition-8_0_0_7"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: midvision Offer:websphere-application-server-be Sku:midvision-ibm_was_base_edition-8_0_0_7 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_mi-we-midvision-ibm_was_base_edition-8_5_0
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'midvision',
	[string]$Offer = 'websphere-application-server-be',
	[string]$Skus = 'midvision-ibm_was_base_edition-8_5_0',
	[string]$version =  'latest',
	[string]$Product = 'websphere-application-server-be',
	[string]$name = 'midvision-ibm_was_base_edition-8_5_0'
)
Write-Host "Image Creation in Process - Plan Info - midvision | midvision-ibm_was_base_edition-8_5_0"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: midvision Offer:websphere-application-server-be Sku:midvision-ibm_was_base_edition-8_5_0 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_mi-we-midvision-ibm_was_base_edition-8_5_0_2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'midvision',
	[string]$Offer = 'websphere-application-server-be',
	[string]$Skus = 'midvision-ibm_was_base_edition-8_5_0_2',
	[string]$version =  'latest',
	[string]$Product = 'websphere-application-server-be',
	[string]$name = 'midvision-ibm_was_base_edition-8_5_0_2'
)
Write-Host "Image Creation in Process - Plan Info - midvision | midvision-ibm_was_base_edition-8_5_0_2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: midvision Offer:websphere-application-server-be Sku:midvision-ibm_was_base_edition-8_5_0_2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_mi-we-midvision-ibm_was_base_edition-8_5_5
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'midvision',
	[string]$Offer = 'websphere-application-server-be',
	[string]$Skus = 'midvision-ibm_was_base_edition-8_5_5',
	[string]$version =  'latest',
	[string]$Product = 'websphere-application-server-be',
	[string]$name = 'midvision-ibm_was_base_edition-8_5_5'
)
Write-Host "Image Creation in Process - Plan Info - midvision | midvision-ibm_was_base_edition-8_5_5"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: midvision Offer:websphere-application-server-be Sku:midvision-ibm_was_base_edition-8_5_5 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_mi-we-midvision-ibm_was_base_edition-8_5_5_1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'midvision',
	[string]$Offer = 'websphere-application-server-be',
	[string]$Skus = 'midvision-ibm_was_base_edition-8_5_5_1',
	[string]$version =  'latest',
	[string]$Product = 'websphere-application-server-be',
	[string]$name = 'midvision-ibm_was_base_edition-8_5_5_1'
)
Write-Host "Image Creation in Process - Plan Info - midvision | midvision-ibm_was_base_edition-8_5_5_1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: midvision Offer:websphere-application-server-be Sku:midvision-ibm_was_base_edition-8_5_5_1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_mi-we-midvision-ibm_was_base_edition-8_5_5_6
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'midvision',
	[string]$Offer = 'websphere-application-server-be',
	[string]$Skus = 'midvision-ibm_was_base_edition-8_5_5_6',
	[string]$version =  'latest',
	[string]$Product = 'websphere-application-server-be',
	[string]$name = 'midvision-ibm_was_base_edition-8_5_5_6'
)
Write-Host "Image Creation in Process - Plan Info - midvision | midvision-ibm_was_base_edition-8_5_5_6"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: midvision Offer:websphere-application-server-be Sku:midvision-ibm_was_base_edition-8_5_5_6 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_mi-we-midvision-ibm_was_liberty_profile-8_5_5_1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'midvision',
	[string]$Offer = 'websphere-application-server-lp',
	[string]$Skus = 'midvision-ibm_was_liberty_profile-8_5_5_1',
	[string]$version =  'latest',
	[string]$Product = 'websphere-application-server-lp',
	[string]$name = 'midvision-ibm_was_liberty_profile-8_5_5_1'
)
Write-Host "Image Creation in Process - Plan Info - midvision | midvision-ibm_was_liberty_profile-8_5_5_1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: midvision Offer:websphere-application-server-lp Sku:midvision-ibm_was_liberty_profile-8_5_5_1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_mi-we-midvision-ibm_was_liberty_profile-8_5_5_6
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'midvision',
	[string]$Offer = 'websphere-application-server-lp',
	[string]$Skus = 'midvision-ibm_was_liberty_profile-8_5_5_6',
	[string]$version =  'latest',
	[string]$Product = 'websphere-application-server-lp',
	[string]$name = 'midvision-ibm_was_liberty_profile-8_5_5_6'
)
Write-Host "Image Creation in Process - Plan Info - midvision | midvision-ibm_was_liberty_profile-8_5_5_6"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: midvision Offer:websphere-application-server-lp Sku:midvision-ibm_was_liberty_profile-8_5_5_6 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_mi-we-midvision-ibm_was_nd_edition-7_0_0_29
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'midvision',
	[string]$Offer = 'websphere-application-server-nde',
	[string]$Skus = 'midvision-ibm_was_nd_edition-7_0_0_29',
	[string]$version =  'latest',
	[string]$Product = 'websphere-application-server-nde',
	[string]$name = 'midvision-ibm_was_nd_edition-7_0_0_29'
)
Write-Host "Image Creation in Process - Plan Info - midvision | midvision-ibm_was_nd_edition-7_0_0_29"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: midvision Offer:websphere-application-server-nde Sku:midvision-ibm_was_nd_edition-7_0_0_29 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_mi-we-midvision-ibm_was_nd_edition-7_0_0_37
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'midvision',
	[string]$Offer = 'websphere-application-server-nde',
	[string]$Skus = 'midvision-ibm_was_nd_edition-7_0_0_37',
	[string]$version =  'latest',
	[string]$Product = 'websphere-application-server-nde',
	[string]$name = 'midvision-ibm_was_nd_edition-7_0_0_37'
)
Write-Host "Image Creation in Process - Plan Info - midvision | midvision-ibm_was_nd_edition-7_0_0_37"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: midvision Offer:websphere-application-server-nde Sku:midvision-ibm_was_nd_edition-7_0_0_37 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_mi-we-midvision-ibm_was_nd_edition-8_0_0_10
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'midvision',
	[string]$Offer = 'websphere-application-server-nde',
	[string]$Skus = 'midvision-ibm_was_nd_edition-8_0_0_10',
	[string]$version =  'latest',
	[string]$Product = 'websphere-application-server-nde',
	[string]$name = 'midvision-ibm_was_nd_edition-8_0_0_10'
)
Write-Host "Image Creation in Process - Plan Info - midvision | midvision-ibm_was_nd_edition-8_0_0_10"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: midvision Offer:websphere-application-server-nde Sku:midvision-ibm_was_nd_edition-8_0_0_10 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_mi-we-midvision-ibm_was_nd_edition-8_0_0_7
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'midvision',
	[string]$Offer = 'websphere-application-server-nde',
	[string]$Skus = 'midvision-ibm_was_nd_edition-8_0_0_7',
	[string]$version =  'latest',
	[string]$Product = 'websphere-application-server-nde',
	[string]$name = 'midvision-ibm_was_nd_edition-8_0_0_7'
)
Write-Host "Image Creation in Process - Plan Info - midvision | midvision-ibm_was_nd_edition-8_0_0_7"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: midvision Offer:websphere-application-server-nde Sku:midvision-ibm_was_nd_edition-8_0_0_7 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_mi-we-midvision-ibm_was_nd_edition-8_5_0_2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'midvision',
	[string]$Offer = 'websphere-application-server-nde',
	[string]$Skus = 'midvision-ibm_was_nd_edition-8_5_0_2',
	[string]$version =  'latest',
	[string]$Product = 'websphere-application-server-nde',
	[string]$name = 'midvision-ibm_was_nd_edition-8_5_0_2'
)
Write-Host "Image Creation in Process - Plan Info - midvision | midvision-ibm_was_nd_edition-8_5_0_2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: midvision Offer:websphere-application-server-nde Sku:midvision-ibm_was_nd_edition-8_5_0_2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_mi-we-midvision-ibm_was_nd_edition-8_5_5_1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'midvision',
	[string]$Offer = 'websphere-application-server-nde',
	[string]$Skus = 'midvision-ibm_was_nd_edition-8_5_5_1',
	[string]$version =  'latest',
	[string]$Product = 'websphere-application-server-nde',
	[string]$name = 'midvision-ibm_was_nd_edition-8_5_5_1'
)
Write-Host "Image Creation in Process - Plan Info - midvision | midvision-ibm_was_nd_edition-8_5_5_1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: midvision Offer:websphere-application-server-nde Sku:midvision-ibm_was_nd_edition-8_5_5_1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_mi-we-midvision-ibm_was_nd_edition-8_5_5_6
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'midvision',
	[string]$Offer = 'websphere-application-server-nde',
	[string]$Skus = 'midvision-ibm_was_nd_edition-8_5_5_6',
	[string]$version =  'latest',
	[string]$Product = 'websphere-application-server-nde',
	[string]$name = 'midvision-ibm_was_nd_edition-8_5_5_6'
)
Write-Host "Image Creation in Process - Plan Info - midvision | midvision-ibm_was_nd_edition-8_5_5_6"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: midvision Offer:websphere-application-server-nde Sku:midvision-ibm_was_nd_edition-8_5_5_6 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_mi-we-midvision-ibm_wmq-8_0_0_0
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'midvision',
	[string]$Offer = 'websphere-mq',
	[string]$Skus = 'midvision-ibm_wmq-8_0_0_0',
	[string]$version =  'latest',
	[string]$Product = 'websphere-mq',
	[string]$name = 'midvision-ibm_wmq-8_0_0_0'
)
Write-Host "Image Creation in Process - Plan Info - midvision | midvision-ibm_wmq-8_0_0_0"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: midvision Offer:websphere-mq Sku:midvision-ibm_wmq-8_0_0_0 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_mi-we-midvision-ibm_wmq-8_0_0_3
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'midvision',
	[string]$Offer = 'websphere-mq',
	[string]$Skus = 'midvision-ibm_wmq-8_0_0_3',
	[string]$version =  'latest',
	[string]$Product = 'websphere-mq',
	[string]$name = 'midvision-ibm_wmq-8_0_0_3'
)
Write-Host "Image Creation in Process - Plan Info - midvision | midvision-ibm_wmq-8_0_0_3"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: midvision Offer:websphere-mq Sku:midvision-ibm_wmq-8_0_0_3 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_mi-we-midvision-ibm_wmq-8_0_0_4
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'midvision',
	[string]$Offer = 'websphere-mq',
	[string]$Skus = 'midvision-ibm_wmq-8_0_0_4',
	[string]$version =  'latest',
	[string]$Product = 'websphere-mq',
	[string]$name = 'midvision-ibm_wmq-8_0_0_4'
)
Write-Host "Image Creation in Process - Plan Info - midvision | midvision-ibm_wmq-8_0_0_4"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: midvision Offer:websphere-mq Sku:midvision-ibm_wmq-8_0_0_4 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_mi-as-axs4sp5licazu
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'miraclelinux',
	[string]$Offer = 'asianux-server-4-sp5',
	[string]$Skus = 'axs4sp5licazu',
	[string]$version =  'latest',
	[string]$Product = 'asianux-server-4-sp5',
	[string]$name = 'axs4sp5licazu'
)
Write-Host "Image Creation in Process - Plan Info - miraclelinux | axs4sp5licazu"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: miraclelinux Offer:asianux-server-4-sp5 Sku:axs4sp5licazu Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_mi-as-axs7sp1licazu
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'miraclelinux',
	[string]$Offer = 'asianux-server-7-sp1',
	[string]$Skus = 'axs7sp1licazu',
	[string]$version =  'latest',
	[string]$Product = 'asianux-server-7-sp1',
	[string]$name = 'axs7sp1licazu'
)
Write-Host "Image Creation in Process - Plan Info - miraclelinux | axs7sp1licazu"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: miraclelinux Offer:asianux-server-7-sp1 Sku:axs7sp1licazu Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_mo-ma-magento_image
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'mobilab',
	[string]$Offer = 'magento-wirecard-checkout',
	[string]$Skus = 'magento_image',
	[string]$version =  'latest',
	[string]$Product = 'magento-wirecard-checkout',
	[string]$name = 'magento_image'
)
Write-Host "Image Creation in Process - Plan Info - mobilab | magento_image"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: mobilab Offer:magento-wirecard-checkout Sku:magento_image Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_mo-jo-joget-ee-v414
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'mokxa-technologies',
	[string]$Offer = 'joget-enterprise',
	[string]$Skus = 'joget-ee-v414',
	[string]$version =  'latest',
	[string]$Product = 'joget-enterprise',
	[string]$name = 'joget-ee-v414'
)
Write-Host "Image Creation in Process - Plan Info - mokxa-technologies | joget-ee-v414"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: mokxa-technologies Offer:joget-enterprise Sku:joget-ee-v414 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_mo-mo-moviemasher
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'moviemasher',
	[string]$Offer = 'moviemasher',
	[string]$Skus = 'moviemasher',
	[string]$version =  'latest',
	[string]$Product = 'moviemasher',
	[string]$name = 'moviemasher'
)
Write-Host "Image Creation in Process - Plan Info - moviemasher | moviemasher"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: moviemasher Offer:moviemasher Sku:moviemasher Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ms-ib-db2-10-5-0-4-aws
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'msopentech',
	[string]$Offer = 'ibm-db2-10-5',
	[string]$Skus = 'db2-10-5-0-4-aws',
	[string]$version =  'latest',
	[string]$Product = 'ibm-db2-10-5',
	[string]$name = 'db2-10-5-0-4-aws'
)
Write-Host "Image Creation in Process - Plan Info - msopentech | db2-10-5-0-4-aws"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: msopentech Offer:ibm-db2-10-5 Sku:db2-10-5-0-4-aws Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ms-mq-mq-v8-0-0-1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'msopentech',
	[string]$Offer = 'mq-v8-0',
	[string]$Skus = 'mq-v8-0-0-1',
	[string]$version =  'latest',
	[string]$Product = 'mq-v8-0',
	[string]$name = 'mq-v8-0-0-1'
)
Write-Host "Image Creation in Process - Plan Info - msopentech | mq-v8-0-0-1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: msopentech Offer:mq-v8-0 Sku:mq-v8-0-0-1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ms-wa-was-8-5-5-3
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'msopentech',
	[string]$Offer = 'was-8-5',
	[string]$Skus = 'was-8-5-5-3',
	[string]$version =  'latest',
	[string]$Product = 'was-8-5',
	[string]$name = 'was-8-5-5-3'
)
Write-Host "Image Creation in Process - Plan Info - msopentech | was-8-5-5-3"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: msopentech Offer:was-8-5 Sku:was-8-5-5-3 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_mv-ja-byol_x-num-servers_x-num-jobs
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'mvp-systems',
	[string]$Offer = 'jamsscheduler-single-instance',
	[string]$Skus = 'byol_x-num-servers_x-num-jobs',
	[string]$version =  'latest',
	[string]$Product = 'jamsscheduler-single-instance',
	[string]$name = 'byol_x-num-servers_x-num-jobs'
)
Write-Host "Image Creation in Process - Plan Info - mvp-systems | byol_x-num-servers_x-num-jobs"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: mvp-systems Offer:jamsscheduler-single-instance Sku:byol_x-num-servers_x-num-jobs Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_mx-ma-mxhm2c-10000pk-gdss-x
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'mxhero',
	[string]$Offer = 'mail2cloud',
	[string]$Skus = 'mxhm2c-10000pk-gdss-x',
	[string]$version =  'latest',
	[string]$Product = 'mail2cloud',
	[string]$name = 'mxhm2c-10000pk-gdss-x'
)
Write-Host "Image Creation in Process - Plan Info - mxhero | mxhm2c-10000pk-gdss-x"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: mxhero Offer:mail2cloud Sku:mxhm2c-10000pk-gdss-x Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_mx-ma-mxhm2c-1000pk-gdss-x
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'mxhero',
	[string]$Offer = 'mail2cloud',
	[string]$Skus = 'mxhm2c-1000pk-gdss-x',
	[string]$version =  'latest',
	[string]$Product = 'mail2cloud',
	[string]$name = 'mxhm2c-1000pk-gdss-x'
)
Write-Host "Image Creation in Process - Plan Info - mxhero | mxhm2c-1000pk-gdss-x"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: mxhero Offer:mail2cloud Sku:mxhm2c-1000pk-gdss-x Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_mx-ma-mxhm2c-100pk-gdss-x
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'mxhero',
	[string]$Offer = 'mail2cloud',
	[string]$Skus = 'mxhm2c-100pk-gdss-x',
	[string]$version =  'latest',
	[string]$Product = 'mail2cloud',
	[string]$name = 'mxhm2c-100pk-gdss-x'
)
Write-Host "Image Creation in Process - Plan Info - mxhero | mxhm2c-100pk-gdss-x"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: mxhero Offer:mail2cloud Sku:mxhm2c-100pk-gdss-x Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_mx-ma-mxhm2c-2500pk-gdss-x
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'mxhero',
	[string]$Offer = 'mail2cloud',
	[string]$Skus = 'mxhm2c-2500pk-gdss-x',
	[string]$version =  'latest',
	[string]$Product = 'mail2cloud',
	[string]$name = 'mxhm2c-2500pk-gdss-x'
)
Write-Host "Image Creation in Process - Plan Info - mxhero | mxhm2c-2500pk-gdss-x"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: mxhero Offer:mail2cloud Sku:mxhm2c-2500pk-gdss-x Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_mx-ma-mxhm2c-250pk-gdss-x
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'mxhero',
	[string]$Offer = 'mail2cloud',
	[string]$Skus = 'mxhm2c-250pk-gdss-x',
	[string]$version =  'latest',
	[string]$Product = 'mail2cloud',
	[string]$name = 'mxhm2c-250pk-gdss-x'
)
Write-Host "Image Creation in Process - Plan Info - mxhero | mxhm2c-250pk-gdss-x"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: mxhero Offer:mail2cloud Sku:mxhm2c-250pk-gdss-x Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_mx-ma-mxhm2c-500pk-gdss-x
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'mxhero',
	[string]$Offer = 'mail2cloud',
	[string]$Skus = 'mxhm2c-500pk-gdss-x',
	[string]$version =  'latest',
	[string]$Product = 'mail2cloud',
	[string]$name = 'mxhm2c-500pk-gdss-x'
)
Write-Host "Image Creation in Process - Plan Info - mxhero | mxhm2c-500pk-gdss-x"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: mxhero Offer:mail2cloud Sku:mxhm2c-500pk-gdss-x Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_mx-ma-mxhm2c-arc-1000pk-gdss-x
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'mxhero',
	[string]$Offer = 'mail2cloud',
	[string]$Skus = 'mxhm2c-arc-1000pk-gdss-x',
	[string]$version =  'latest',
	[string]$Product = 'mail2cloud',
	[string]$name = 'mxhm2c-arc-1000pk-gdss-x'
)
Write-Host "Image Creation in Process - Plan Info - mxhero | mxhm2c-arc-1000pk-gdss-x"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: mxhero Offer:mail2cloud Sku:mxhm2c-arc-1000pk-gdss-x Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_mx-ma-mxhm2c-arc-100pk-gdss-x
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'mxhero',
	[string]$Offer = 'mail2cloud',
	[string]$Skus = 'mxhm2c-arc-100pk-gdss-x',
	[string]$version =  'latest',
	[string]$Product = 'mail2cloud',
	[string]$name = 'mxhm2c-arc-100pk-gdss-x'
)
Write-Host "Image Creation in Process - Plan Info - mxhero | mxhm2c-arc-100pk-gdss-x"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: mxhero Offer:mail2cloud Sku:mxhm2c-arc-100pk-gdss-x Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_mx-ma-mxhm2c-arc-2500pk-gdss-x
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'mxhero',
	[string]$Offer = 'mail2cloud',
	[string]$Skus = 'mxhm2c-arc-2500pk-gdss-x',
	[string]$version =  'latest',
	[string]$Product = 'mail2cloud',
	[string]$name = 'mxhm2c-arc-2500pk-gdss-x'
)
Write-Host "Image Creation in Process - Plan Info - mxhero | mxhm2c-arc-2500pk-gdss-x"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: mxhero Offer:mail2cloud Sku:mxhm2c-arc-2500pk-gdss-x Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_mx-ma-mxhm2c-arc-250pk-gdss-x
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'mxhero',
	[string]$Offer = 'mail2cloud',
	[string]$Skus = 'mxhm2c-arc-250pk-gdss-x',
	[string]$version =  'latest',
	[string]$Product = 'mail2cloud',
	[string]$name = 'mxhm2c-arc-250pk-gdss-x'
)
Write-Host "Image Creation in Process - Plan Info - mxhero | mxhm2c-arc-250pk-gdss-x"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: mxhero Offer:mail2cloud Sku:mxhm2c-arc-250pk-gdss-x Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_mx-ma-mxhm2c-arc-5000pk-gdss-x
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'mxhero',
	[string]$Offer = 'mail2cloud',
	[string]$Skus = 'mxhm2c-arc-5000pk-gdss-x',
	[string]$version =  'latest',
	[string]$Product = 'mail2cloud',
	[string]$name = 'mxhm2c-arc-5000pk-gdss-x'
)
Write-Host "Image Creation in Process - Plan Info - mxhero | mxhm2c-arc-5000pk-gdss-x"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: mxhero Offer:mail2cloud Sku:mxhm2c-arc-5000pk-gdss-x Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_mx-ma-mxhm2c-arc-500pk-gdss-x
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'mxhero',
	[string]$Offer = 'mail2cloud',
	[string]$Skus = 'mxhm2c-arc-500pk-gdss-x',
	[string]$version =  'latest',
	[string]$Product = 'mail2cloud',
	[string]$name = 'mxhm2c-arc-500pk-gdss-x'
)
Write-Host "Image Creation in Process - Plan Info - mxhero | mxhm2c-arc-500pk-gdss-x"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: mxhero Offer:mail2cloud Sku:mxhm2c-arc-500pk-gdss-x Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_mx-ma-mxhm2c-arc-50pk-gdss-x
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'mxhero',
	[string]$Offer = 'mail2cloud',
	[string]$Skus = 'mxhm2c-arc-50pk-gdss-x',
	[string]$version =  'latest',
	[string]$Product = 'mail2cloud',
	[string]$name = 'mxhm2c-arc-50pk-gdss-x'
)
Write-Host "Image Creation in Process - Plan Info - mxhero | mxhm2c-arc-50pk-gdss-x"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: mxhero Offer:mail2cloud Sku:mxhm2c-arc-50pk-gdss-x Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_my-ta-tarantool
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'my-com',
	[string]$Offer = 'tarantool',
	[string]$Skus = 'tarantool',
	[string]$version =  'latest',
	[string]$Product = 'tarantool',
	[string]$name = 'tarantool'
)
Write-Host "Image Creation in Process - Plan Info - my-com | tarantool"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: my-com Offer:tarantool Sku:tarantool Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_na-na-nasuni_filer_v72a
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'nasuni',
	[string]$Offer = 'nasuni-filer',
	[string]$Skus = 'nasuni_filer_v72a',
	[string]$version =  'latest',
	[string]$Product = 'nasuni-filer',
	[string]$name = 'nasuni_filer_v72a'
)
Write-Host "Image Creation in Process - Plan Info - nasuni | nasuni_filer_v72a"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: nasuni Offer:nasuni-filer Sku:nasuni_filer_v72a Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_nc-nc-ncbi-blast-2-3-0
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'ncbi',
	[string]$Offer = 'ncbi-blast-2-3-0',
	[string]$Skus = 'ncbi-blast-2-3-0',
	[string]$version =  'latest',
	[string]$Product = 'ncbi-blast-2-3-0',
	[string]$name = 'ncbi-blast-2-3-0'
)
Write-Host "Image Creation in Process - Plan Info - ncbi | ncbi-blast-2-3-0"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: ncbi Offer:ncbi-blast-2-3-0 Sku:ncbi-blast-2-3-0 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_nc-nc-free
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'ncbi',
	[string]$Offer = 'ncbi-free-2-2-31',
	[string]$Skus = 'free',
	[string]$version =  'latest',
	[string]$Product = 'ncbi-free-2-2-31',
	[string]$name = 'free'
)
Write-Host "Image Creation in Process - Plan Info - ncbi | free"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: ncbi Offer:ncbi-free-2-2-31 Sku:free Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ne-ne-ava-c4
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'netapp',
	[string]$Offer = 'netapp-altavault-cloud-integrated-storage-solution',
	[string]$Skus = 'ava-c4',
	[string]$version =  'latest',
	[string]$Product = 'netapp-altavault-cloud-integrated-storage-solution',
	[string]$name = 'ava-c4'
)
Write-Host "Image Creation in Process - Plan Info - netapp | ava-c4"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: netapp Offer:netapp-altavault-cloud-integrated-storage-solution Sku:ava-c4 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ne-ne-pfsense-router-fw-vpn-225
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'netgate',
	[string]$Offer = 'netgate-pfsense-appliance',
	[string]$Skus = 'pfsense-router-fw-vpn-225',
	[string]$version =  'latest',
	[string]$Product = 'netgate-pfsense-appliance',
	[string]$name = 'pfsense-router-fw-vpn-225'
)
Write-Host "Image Creation in Process - Plan Info - netgate | pfsense-router-fw-vpn-225"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: netgate Offer:netgate-pfsense-appliance Sku:pfsense-router-fw-vpn-225 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ne-re-12_1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'netiq',
	[string]$Offer = 'replication_environment',
	[string]$Skus = '12_1',
	[string]$version =  'latest',
	[string]$Product = 'replication_environment',
	[string]$name = '12_1'
)
Write-Host "Image Creation in Process - Plan Info - netiq | 12_1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: netiq Offer:replication_environment Sku:12_1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ne-na-na_annual_1000_801
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'netwrix',
	[string]$Offer = 'na80v2',
	[string]$Skus = 'na_annual_1000_801',
	[string]$version =  'latest',
	[string]$Product = 'na80v2',
	[string]$name = 'na_annual_1000_801'
)
Write-Host "Image Creation in Process - Plan Info - netwrix | na_annual_1000_801"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: netwrix Offer:na80v2 Sku:na_annual_1000_801 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ne-na-na_annual_2500_801
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'netwrix',
	[string]$Offer = 'na80v2',
	[string]$Skus = 'na_annual_2500_801',
	[string]$version =  'latest',
	[string]$Product = 'na80v2',
	[string]$name = 'na_annual_2500_801'
)
Write-Host "Image Creation in Process - Plan Info - netwrix | na_annual_2500_801"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: netwrix Offer:na80v2 Sku:na_annual_2500_801 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ne-na-na_annual_5000_801
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'netwrix',
	[string]$Offer = 'na80v2',
	[string]$Skus = 'na_annual_5000_801',
	[string]$version =  'latest',
	[string]$Product = 'na80v2',
	[string]$name = 'na_annual_5000_801'
)
Write-Host "Image Creation in Process - Plan Info - netwrix | na_annual_5000_801"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: netwrix Offer:na80v2 Sku:na_annual_5000_801 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ne-na-na_annual_500_801
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'netwrix',
	[string]$Offer = 'na80v2',
	[string]$Skus = 'na_annual_500_801',
	[string]$version =  'latest',
	[string]$Product = 'na80v2',
	[string]$name = 'na_annual_500_801'
)
Write-Host "Image Creation in Process - Plan Info - netwrix | na_annual_500_801"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: netwrix Offer:na80v2 Sku:na_annual_500_801 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ne-na-na_byol_801
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'netwrix',
	[string]$Offer = 'na80v2',
	[string]$Skus = 'na_byol_801',
	[string]$version =  'latest',
	[string]$Product = 'na80v2',
	[string]$name = 'na_byol_801'
)
Write-Host "Image Creation in Process - Plan Info - netwrix | na_byol_801"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: netwrix Offer:na80v2 Sku:na_byol_801 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ne-ne-neusoft-nisg-va-byol-v1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'neusoft-neteye',
	[string]$Offer = 'neusoft-nisg-va-v1',
	[string]$Skus = 'neusoft-nisg-va-byol-v1',
	[string]$version =  'latest',
	[string]$Product = 'neusoft-nisg-va-v1',
	[string]$name = 'neusoft-nisg-va-byol-v1'
)
Write-Host "Image Creation in Process - Plan Info - neusoft-neteye | neusoft-nisg-va-byol-v1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: neusoft-neteye Offer:neusoft-nisg-va-v1 Sku:neusoft-nisg-va-byol-v1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ne-ne-neusoft-nisg-va-hourly-v1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'neusoft-neteye',
	[string]$Offer = 'neusoft-nisg-va-v1',
	[string]$Skus = 'neusoft-nisg-va-hourly-v1',
	[string]$version =  'latest',
	[string]$Product = 'neusoft-nisg-va-v1',
	[string]$name = 'neusoft-nisg-va-hourly-v1'
)
Write-Host "Image Creation in Process - Plan Info - neusoft-neteye | neusoft-nisg-va-hourly-v1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: neusoft-neteye Offer:neusoft-nisg-va-v1 Sku:neusoft-nisg-va-hourly-v1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ne-cl-igvmv1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'new-signature',
	[string]$Offer = 'cloud-management-portal',
	[string]$Skus = 'igvmv1',
	[string]$version =  'latest',
	[string]$Product = 'cloud-management-portal',
	[string]$name = 'igvmv1'
)
Write-Host "Image Creation in Process - Plan Info - new-signature | igvmv1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: new-signature Offer:cloud-management-portal Sku:igvmv1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ne-ma-maxwellrender-tpnetwork-0_8_3
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'nextlimit',
	[string]$Offer = 'maxwell-render-tp_network_0_8_3',
	[string]$Skus = 'maxwellrender-tpnetwork-0_8_3',
	[string]$version =  'latest',
	[string]$Product = 'maxwell-render-tp_network_0_8_3',
	[string]$name = 'maxwellrender-tpnetwork-0_8_3'
)
Write-Host "Image Creation in Process - Plan Info - nextlimit | maxwellrender-tpnetwork-0_8_3"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: nextlimit Offer:maxwell-render-tp_network_0_8_3 Sku:maxwellrender-tpnetwork-0_8_3 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ne-ma-maxwelltpnetwork084-2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'nextlimit',
	[string]$Offer = 'maxwell-render-v3-image',
	[string]$Skus = 'maxwelltpnetwork084-2',
	[string]$version =  'latest',
	[string]$Product = 'maxwell-render-v3-image',
	[string]$name = 'maxwelltpnetwork084-2'
)
Write-Host "Image Creation in Process - Plan Info - nextlimit | maxwelltpnetwork084-2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: nextlimit Offer:maxwell-render-v3-image Sku:maxwelltpnetwork084-2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ne-ne-nexuschameleon
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'nexus',
	[string]$Offer = 'nexus-chameleon-9',
	[string]$Skus = 'nexuschameleon',
	[string]$version =  'latest',
	[string]$Product = 'nexus-chameleon-9',
	[string]$name = 'nexuschameleon'
)
Write-Host "Image Creation in Process - Plan Info - nexus | nexuschameleon"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: nexus Offer:nexus-chameleon-9 Sku:nexuschameleon Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ng-ng-nginx-plus
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'nginxinc',
	[string]$Offer = 'nginx-plus-v1',
	[string]$Skus = 'nginx-plus',
	[string]$version =  'latest',
	[string]$Product = 'nginx-plus-v1',
	[string]$name = 'nginx-plus'
)
Write-Host "Image Creation in Process - Plan Info - nginxinc | nginx-plus"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: nginxinc Offer:nginx-plus-v1 Sku:nginx-plus Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ni-yo-youzana
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'nicepeopleatwork',
	[string]$Offer = 'youzana',
	[string]$Skus = 'youzana',
	[string]$version =  'latest',
	[string]$Product = 'youzana',
	[string]$name = 'youzana'
)
Write-Host "Image Creation in Process - Plan Info - nicepeopleatwork | youzana"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: nicepeopleatwork Offer:youzana Sku:youzana Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_no-no-professional
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'nodejsapi',
	[string]$Offer = 'node-js-api',
	[string]$Skus = 'professional',
	[string]$version =  'latest',
	[string]$Product = 'node-js-api',
	[string]$name = 'professional'
)
Write-Host "Image Creation in Process - Plan Info - nodejsapi | professional"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: nodejsapi Offer:node-js-api Sku:professional Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_no-no-standard
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'nodejsapi',
	[string]$Offer = 'node-js-api',
	[string]$Skus = 'standard',
	[string]$version =  'latest',
	[string]$Product = 'node-js-api',
	[string]$name = 'standard'
)
Write-Host "Image Creation in Process - Plan Info - nodejsapi | standard"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: nodejsapi Offer:node-js-api Sku:standard Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_no-no-starter
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'nodejsapi',
	[string]$Offer = 'node-js-api',
	[string]$Skus = 'starter',
	[string]$version =  'latest',
	[string]$Product = 'node-js-api',
	[string]$name = 'starter'
)
Write-Host "Image Creation in Process - Plan Info - nodejsapi | starter"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: nodejsapi Offer:node-js-api Sku:starter Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_nu-nu-nuxeo-6-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'nuxeo',
	[string]$Offer = 'nuxeo-6-lts',
	[string]$Skus = 'nuxeo-6-lts',
	[string]$version =  'latest',
	[string]$Product = 'nuxeo-6-lts',
	[string]$name = 'nuxeo-6-lts'
)
Write-Host "Image Creation in Process - Plan Info - nuxeo | nuxeo-6-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: nuxeo Offer:nuxeo-6-lts Sku:nuxeo-6-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_nu-nu-nuxeo-lts-2015
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'nuxeo',
	[string]$Offer = 'nuxeo-lts',
	[string]$Skus = 'nuxeo-lts-2015',
	[string]$version =  'latest',
	[string]$Product = 'nuxeo-lts',
	[string]$name = 'nuxeo-lts-2015'
)
Write-Host "Image Creation in Process - Plan Info - nuxeo | nuxeo-lts-2015"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: nuxeo Offer:nuxeo-lts Sku:nuxeo-lts-2015 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_of-of-officeclipsuite
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'officeclipsuite',
	[string]$Offer = 'officeclipsuite',
	[string]$Skus = 'officeclipsuite',
	[string]$version =  'latest',
	[string]$Product = 'officeclipsuite',
	[string]$name = 'officeclipsuite'
)
Write-Host "Image Creation in Process - Plan Info - officeclipsuite | officeclipsuite"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: officeclipsuite Offer:officeclipsuite Sku:officeclipsuite Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_om-od-ods_datastage
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'omega-software',
	[string]$Offer = 'ods_datastage',
	[string]$Skus = 'ods_datastage',
	[string]$version =  'latest',
	[string]$Product = 'ods_datastage',
	[string]$name = 'ods_datastage'
)
Write-Host "Image Creation in Process - Plan Info - omega-software | ods_datastage"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: omega-software Offer:ods_datastage Sku:ods_datastage Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_op-op-op5monitor
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'op5',
	[string]$Offer = 'op5-monitor',
	[string]$Skus = 'op5monitor',
	[string]$version =  'latest',
	[string]$Product = 'op5-monitor',
	[string]$name = 'op5monitor'
)
Write-Host "Image Creation in Process - Plan Info - op5 | op5monitor"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: op5 Offer:op5-monitor Sku:op5monitor Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_op-me-meveo
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'opencell',
	[string]$Offer = 'meveo',
	[string]$Skus = 'meveo',
	[string]$version =  'latest',
	[string]$Product = 'meveo',
	[string]$name = 'meveo'
)
Write-Host "Image Creation in Process - Plan Info - opencell | meveo"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: opencell Offer:meveo Sku:meveo Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_op-me-meveo
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'opencell',
	[string]$Offer = 'meveo403sp2',
	[string]$Skus = 'meveo',
	[string]$version =  'latest',
	[string]$Product = 'meveo403sp2',
	[string]$name = 'meveo'
)
Write-Host "Image Creation in Process - Plan Info - opencell | meveo"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: opencell Offer:meveo403sp2 Sku:meveo Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_op-op-opencell-4-1-3
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'opencell',
	[string]$Offer = 'opencell-4-1',
	[string]$Skus = 'opencell-4-1-3',
	[string]$version =  'latest',
	[string]$Product = 'opencell-4-1',
	[string]$name = 'opencell-4-1-3'
)
Write-Host "Image Creation in Process - Plan Info - opencell | opencell-4-1-3"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: opencell Offer:opencell-4-1 Sku:opencell-4-1-3 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Op-Ce-6.5
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'OpenLogic',
	[string]$Offer = 'CentOS',
	[string]$Skus = '6.5',
	[string]$version =  'latest',
	[string]$Product = 'CentOS',
	[string]$name = '6.5'
)
Write-Host "Image Creation in Process - Plan Info - OpenLogic | 6.5"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: OpenLogic Offer:CentOS Sku:6.5 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Op-Ce-6.6
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'OpenLogic',
	[string]$Offer = 'CentOS',
	[string]$Skus = '6.6',
	[string]$version =  'latest',
	[string]$Product = 'CentOS',
	[string]$name = '6.6'
)
Write-Host "Image Creation in Process - Plan Info - OpenLogic | 6.6"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: OpenLogic Offer:CentOS Sku:6.6 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Op-Ce-6.7
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'OpenLogic',
	[string]$Offer = 'CentOS',
	[string]$Skus = '6.7',
	[string]$version =  'latest',
	[string]$Product = 'CentOS',
	[string]$name = '6.7'
)
Write-Host "Image Creation in Process - Plan Info - OpenLogic | 6.7"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: OpenLogic Offer:CentOS Sku:6.7 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Op-Ce-6.8
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'OpenLogic',
	[string]$Offer = 'CentOS',
	[string]$Skus = '6.8',
	[string]$version =  'latest',
	[string]$Product = 'CentOS',
	[string]$name = '6.8'
)
Write-Host "Image Creation in Process - Plan Info - OpenLogic | 6.8"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: OpenLogic Offer:CentOS Sku:6.8 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Op-Ce-7.0
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'OpenLogic',
	[string]$Offer = 'CentOS',
	[string]$Skus = '7.0',
	[string]$version =  'latest',
	[string]$Product = 'CentOS',
	[string]$name = '7.0'
)
Write-Host "Image Creation in Process - Plan Info - OpenLogic | 7.0"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: OpenLogic Offer:CentOS Sku:7.0 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Op-Ce-7.1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'OpenLogic',
	[string]$Offer = 'CentOS',
	[string]$Skus = '7.1',
	[string]$version =  'latest',
	[string]$Product = 'CentOS',
	[string]$name = '7.1'
)
Write-Host "Image Creation in Process - Plan Info - OpenLogic | 7.1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: OpenLogic Offer:CentOS Sku:7.1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Op-Ce-7.2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'OpenLogic',
	[string]$Offer = 'CentOS',
	[string]$Skus = '7.2',
	[string]$version =  'latest',
	[string]$Product = 'CentOS',
	[string]$name = '7.2'
)
Write-Host "Image Creation in Process - Plan Info - OpenLogic | 7.2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: OpenLogic Offer:CentOS Sku:7.2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Op-Ce-7.2n
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'OpenLogic',
	[string]$Offer = 'CentOS',
	[string]$Skus = '7.2n',
	[string]$version =  'latest',
	[string]$Product = 'CentOS',
	[string]$name = '7.2n'
)
Write-Host "Image Creation in Process - Plan Info - OpenLogic | 7.2n"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: OpenLogic Offer:CentOS Sku:7.2n Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Op-Ce-6.5
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'OpenLogic',
	[string]$Offer = 'CentOS-HPC',
	[string]$Skus = '6.5',
	[string]$version =  'latest',
	[string]$Product = 'CentOS-HPC',
	[string]$name = '6.5'
)
Write-Host "Image Creation in Process - Plan Info - OpenLogic | 6.5"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: OpenLogic Offer:CentOS-HPC Sku:6.5 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Op-Ce-7.1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'OpenLogic',
	[string]$Offer = 'CentOS-HPC',
	[string]$Skus = '7.1',
	[string]$version =  'latest',
	[string]$Product = 'CentOS-HPC',
	[string]$name = '7.1'
)
Write-Host "Image Creation in Process - Plan Info - OpenLogic | 7.1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: OpenLogic Offer:CentOS-HPC Sku:7.1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_op-op-openmeap-1_5-windows
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'openmeap',
	[string]$Offer = 'openmeap',
	[string]$Skus = 'openmeap-1_5-windows',
	[string]$version =  'latest',
	[string]$Product = 'openmeap',
	[string]$name = 'openmeap-1_5-windows'
)
Write-Host "Image Creation in Process - Plan Info - openmeap | openmeap-1_5-windows"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: openmeap Offer:openmeap Sku:openmeap-1_5-windows Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_op-op-opennebula-sandbox
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'opennebulasystems',
	[string]$Offer = 'opennebula-sandbox',
	[string]$Skus = 'opennebula-sandbox',
	[string]$version =  'latest',
	[string]$Product = 'opennebula-sandbox',
	[string]$name = 'opennebula-sandbox'
)
Write-Host "Image Creation in Process - Plan Info - opennebulasystems | opennebula-sandbox"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: opennebulasystems Offer:opennebula-sandbox Sku:opennebula-sandbox Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_op-op-ot-cs16
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'opentext',
	[string]$Offer = 'opentext-content-server-16',
	[string]$Skus = 'ot-cs16',
	[string]$version =  'latest',
	[string]$Product = 'opentext-content-server-16',
	[string]$name = 'ot-cs16'
)
Write-Host "Image Creation in Process - Plan Info - opentext | ot-cs16"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: opentext Offer:opentext-content-server-16 Sku:ot-cs16 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_op-op-otmm
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'opentext',
	[string]$Offer = 'opentext-mediamanagement',
	[string]$Skus = 'otmm',
	[string]$version =  'latest',
	[string]$Product = 'opentext-mediamanagement',
	[string]$name = 'otmm'
)
Write-Host "Image Creation in Process - Plan Info - opentext | otmm"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: opentext Offer:opentext-mediamanagement Sku:otmm Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_op-op-ot-test-cs105
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'opentext',
	[string]$Offer = 'opentext_content-server_105',
	[string]$Skus = 'ot-test-cs105',
	[string]$version =  'latest',
	[string]$Product = 'opentext_content-server_105',
	[string]$name = 'ot-test-cs105'
)
Write-Host "Image Creation in Process - Plan Info - opentext | ot-test-cs105"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: opentext Offer:opentext_content-server_105 Sku:ot-test-cs105 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_op-ot-ot-cs-adb
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'opentext',
	[string]$Offer = 'ot-cs-azuredb',
	[string]$Skus = 'ot-cs-adb',
	[string]$version =  'latest',
	[string]$Product = 'ot-cs-azuredb',
	[string]$name = 'ot-cs-adb'
)
Write-Host "Image Creation in Process - Plan Info - opentext | ot-cs-adb"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: opentext Offer:ot-cs-azuredb Sku:ot-cs-adb Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Or-Or-12.1.0.2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Oracle',
	[string]$Offer = 'Oracle-Database-Se',
	[string]$Skus = '12.1.0.2',
	[string]$version =  'latest',
	[string]$Product = 'Oracle-Database-Se',
	[string]$name = '12.1.0.2'
)
Write-Host "Image Creation in Process - Plan Info - Oracle | 12.1.0.2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Oracle Offer:Oracle-Database-Se Sku:12.1.0.2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Or-Or-6.4
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Oracle',
	[string]$Offer = 'Oracle-Linux',
	[string]$Skus = '6.4',
	[string]$version =  'latest',
	[string]$Product = 'Oracle-Linux',
	[string]$name = '6.4'
)
Write-Host "Image Creation in Process - Plan Info - Oracle | 6.4"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Oracle Offer:Oracle-Linux Sku:6.4 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Or-Or-6.7
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Oracle',
	[string]$Offer = 'Oracle-Linux',
	[string]$Skus = '6.7',
	[string]$version =  'latest',
	[string]$Product = 'Oracle-Linux',
	[string]$name = '6.7'
)
Write-Host "Image Creation in Process - Plan Info - Oracle | 6.7"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Oracle Offer:Oracle-Linux Sku:6.7 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Or-Or-6.8
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Oracle',
	[string]$Offer = 'Oracle-Linux',
	[string]$Skus = '6.8',
	[string]$version =  'latest',
	[string]$Product = 'Oracle-Linux',
	[string]$name = '6.8'
)
Write-Host "Image Creation in Process - Plan Info - Oracle | 6.8"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Oracle Offer:Oracle-Linux Sku:6.8 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Or-Or-7.0
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Oracle',
	[string]$Offer = 'Oracle-Linux',
	[string]$Skus = '7.0',
	[string]$version =  'latest',
	[string]$Product = 'Oracle-Linux',
	[string]$name = '7.0'
)
Write-Host "Image Creation in Process - Plan Info - Oracle | 7.0"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Oracle Offer:Oracle-Linux Sku:7.0 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Or-Or-7.2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Oracle',
	[string]$Offer = 'Oracle-Linux',
	[string]$Skus = '7.2',
	[string]$version =  'latest',
	[string]$Product = 'Oracle-Linux',
	[string]$name = '7.2'
)
Write-Host "Image Creation in Process - Plan Info - Oracle | 7.2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Oracle Offer:Oracle-Linux Sku:7.2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Or-Or-Oracle-WebLogic-Server
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'Oracle',
	[string]$Offer = 'Oracle-WebLogic-Server',
	[string]$Skus = 'Oracle-WebLogic-Server',
	[string]$version =  'latest',
	[string]$Product = 'Oracle-WebLogic-Server',
	[string]$name = 'Oracle-WebLogic-Server'
)
Write-Host "Image Creation in Process - Plan Info - Oracle | Oracle-WebLogic-Server"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: Oracle Offer:Oracle-WebLogic-Server Sku:Oracle-WebLogic-Server Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_or-or-orientdb-community-edition-2_0_10
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'orientdb',
	[string]$Offer = 'orientdb-community-edition',
	[string]$Skus = 'orientdb-community-edition-2_0_10',
	[string]$version =  'latest',
	[string]$Product = 'orientdb-community-edition',
	[string]$name = 'orientdb-community-edition-2_0_10'
)
Write-Host "Image Creation in Process - Plan Info - orientdb | orientdb-community-edition-2_0_10"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: orientdb Offer:orientdb-community-edition Sku:orientdb-community-edition-2_0_10 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ou-ou-outsystems_azure_intro
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'outsystems',
	[string]$Offer = 'outsystems',
	[string]$Skus = 'outsystems_azure_intro',
	[string]$version =  'latest',
	[string]$Product = 'outsystems',
	[string]$name = 'outsystems_azure_intro'
)
Write-Host "Image Creation in Process - Plan Info - outsystems | outsystems_azure_intro"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: outsystems Offer:outsystems Sku:outsystems_azure_intro Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ou-ou-baseline
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'outsystems',
	[string]$Offer = 'outsystems-baseline',
	[string]$Skus = 'baseline',
	[string]$version =  'latest',
	[string]$Product = 'outsystems-baseline',
	[string]$name = 'baseline'
)
Write-Host "Image Creation in Process - Plan Info - outsystems | baseline"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: outsystems Offer:outsystems-baseline Sku:baseline Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ou-pl-additional_environment
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'outsystems',
	[string]$Offer = 'platform',
	[string]$Skus = 'additional_environment',
	[string]$version =  'latest',
	[string]$Product = 'platform',
	[string]$name = 'additional_environment'
)
Write-Host "Image Creation in Process - Plan Info - outsystems | additional_environment"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: outsystems Offer:platform Sku:additional_environment Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ou-pl-enterprise
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'outsystems',
	[string]$Offer = 'platform',
	[string]$Skus = 'enterprise',
	[string]$version =  'latest',
	[string]$Product = 'platform',
	[string]$name = 'enterprise'
)
Write-Host "Image Creation in Process - Plan Info - outsystems | enterprise"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: outsystems Offer:platform Sku:enterprise Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ou-pl-enterprise_byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'outsystems',
	[string]$Offer = 'platform',
	[string]$Skus = 'enterprise_byol',
	[string]$version =  'latest',
	[string]$Product = 'platform',
	[string]$name = 'enterprise_byol'
)
Write-Host "Image Creation in Process - Plan Info - outsystems | enterprise_byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: outsystems Offer:platform Sku:enterprise_byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_pa-vm-bundle1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'paloaltonetworks',
	[string]$Offer = 'vmseries1',
	[string]$Skus = 'bundle1',
	[string]$version =  'latest',
	[string]$Product = 'vmseries1',
	[string]$name = 'bundle1'
)
Write-Host "Image Creation in Process - Plan Info - paloaltonetworks | bundle1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: paloaltonetworks Offer:vmseries1 Sku:bundle1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_pa-vm-bundle2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'paloaltonetworks',
	[string]$Offer = 'vmseries1',
	[string]$Skus = 'bundle2',
	[string]$version =  'latest',
	[string]$Product = 'vmseries1',
	[string]$name = 'bundle2'
)
Write-Host "Image Creation in Process - Plan Info - paloaltonetworks | bundle2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: paloaltonetworks Offer:vmseries1 Sku:bundle2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_pa-vm-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'paloaltonetworks',
	[string]$Offer = 'vmseries1',
	[string]$Skus = 'byol',
	[string]$version =  'latest',
	[string]$Product = 'vmseries1',
	[string]$name = 'byol'
)
Write-Host "Image Creation in Process - Plan Info - paloaltonetworks | byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: paloaltonetworks Offer:vmseries1 Sku:byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_pa-pa-panorama-necto-0228
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'panorama-necto',
	[string]$Offer = 'panorama-necto-business-intelligence',
	[string]$Skus = 'panorama-necto-0228',
	[string]$version =  'latest',
	[string]$Product = 'panorama-necto-business-intelligence',
	[string]$name = 'panorama-necto-0228'
)
Write-Host "Image Creation in Process - Plan Info - panorama-necto | panorama-necto-0228"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: panorama-necto Offer:panorama-necto-business-intelligence Sku:panorama-necto-0228 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_pa-pz-pza-1500-grw
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'panzura-file-system',
	[string]$Offer = 'pza-1500-grw',
	[string]$Skus = 'pza-1500-grw',
	[string]$version =  'latest',
	[string]$Product = 'pza-1500-grw',
	[string]$name = 'pza-1500-grw'
)
Write-Host "Image Creation in Process - Plan Info - panzura-file-system | pza-1500-grw"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: panzura-file-system Offer:pza-1500-grw Sku:pza-1500-grw Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_po-po-pointmatter-csvhub
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'pointmatter',
	[string]$Offer = 'pointmatter-csvhub',
	[string]$Skus = 'pointmatter-csvhub',
	[string]$version =  'latest',
	[string]$Product = 'pointmatter-csvhub',
	[string]$name = 'pointmatter-csvhub'
)
Write-Host "Image Creation in Process - Plan Info - pointmatter | pointmatter-csvhub"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: pointmatter Offer:pointmatter-csvhub Sku:pointmatter-csvhub Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_po-sk-skysync-tier1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'portalarchitects',
	[string]$Offer = 'skysync-tier1',
	[string]$Skus = 'skysync-tier1',
	[string]$version =  'latest',
	[string]$Product = 'skysync-tier1',
	[string]$name = 'skysync-tier1'
)
Write-Host "Image Creation in Process - Plan Info - portalarchitects | skysync-tier1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: portalarchitects Offer:skysync-tier1 Sku:skysync-tier1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_po-sk-skysync_for_o365_onedrive_sharepoint
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'portalarchitects',
	[string]$Offer = 'skysync_for_o365_onedrive_and_sharepoint',
	[string]$Skus = 'skysync_for_o365_onedrive_sharepoint',
	[string]$version =  'latest',
	[string]$Product = 'skysync_for_o365_onedrive_and_sharepoint',
	[string]$name = 'skysync_for_o365_onedrive_sharepoint'
)
Write-Host "Image Creation in Process - Plan Info - portalarchitects | skysync_for_o365_onedrive_sharepoint"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: portalarchitects Offer:skysync_for_o365_onedrive_and_sharepoint Sku:skysync_for_o365_onedrive_sharepoint Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_po-sk-skysync_for_syncplicity
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'portalarchitects',
	[string]$Offer = 'skysync_for_syncplicity',
	[string]$Skus = 'skysync_for_syncplicity',
	[string]$version =  'latest',
	[string]$Product = 'skysync_for_syncplicity',
	[string]$name = 'skysync_for_syncplicity'
)
Write-Host "Image Creation in Process - Plan Info - portalarchitects | skysync_for_syncplicity"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: portalarchitects Offer:skysync_for_syncplicity Sku:skysync_for_syncplicity Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_pr-pr-r-only
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'predixion',
	[string]$Offer = 'predixion-insight-2015-02-feb',
	[string]$Skus = 'r-only',
	[string]$version =  'latest',
	[string]$Product = 'predixion-insight-2015-02-feb',
	[string]$name = 'r-only'
)
Write-Host "Image Creation in Process - Plan Info - predixion | r-only"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: predixion Offer:predixion-insight-2015-02-feb Sku:r-only Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_pr-pr-prestashopdev
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'prestashop',
	[string]$Offer = 'prestashop16-lamp',
	[string]$Skus = 'prestashopdev',
	[string]$version =  'latest',
	[string]$Product = 'prestashop16-lamp',
	[string]$name = 'prestashopdev'
)
Write-Host "Image Creation in Process - Plan Info - prestashop | prestashopdev"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: prestashop Offer:prestashop16-lamp Sku:prestashopdev Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_pr-ub-ubuntu_base
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'prestashop',
	[string]$Offer = 'ubuntu-base-for-prestashop',
	[string]$Skus = 'ubuntu_base',
	[string]$version =  'latest',
	[string]$Product = 'ubuntu-base-for-prestashop',
	[string]$name = 'ubuntu_base'
)
Write-Host "Image Creation in Process - Plan Info - prestashop | ubuntu_base"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: prestashop Offer:ubuntu-base-for-prestashop Sku:ubuntu_base Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_pr-ub-ubuntu_base_16_04
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'prestashop',
	[string]$Offer = 'ubuntu-base-for-prestashop',
	[string]$Skus = 'ubuntu_base_16_04',
	[string]$version =  'latest',
	[string]$Product = 'ubuntu-base-for-prestashop',
	[string]$name = 'ubuntu_base_16_04'
)
Write-Host "Image Creation in Process - Plan Info - prestashop | ubuntu_base_16_04"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: prestashop Offer:ubuntu-base-for-prestashop Sku:ubuntu_base_16_04 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_pr-ub-ubuntu_base_16_04_no_price
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'prestashop',
	[string]$Offer = 'ubuntu-base-for-prestashop',
	[string]$Skus = 'ubuntu_base_16_04_no_price',
	[string]$version =  'latest',
	[string]$Product = 'ubuntu-base-for-prestashop',
	[string]$name = 'ubuntu_base_16_04_no_price'
)
Write-Host "Image Creation in Process - Plan Info - prestashop | ubuntu_base_16_04_no_price"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: prestashop Offer:ubuntu-base-for-prestashop Sku:ubuntu_base_16_04_no_price Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_pr-ku-leastversion
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'prime-strategy',
	[string]$Offer = 'kusanagi-77',
	[string]$Skus = 'leastversion',
	[string]$version =  'latest',
	[string]$Product = 'kusanagi-77',
	[string]$name = 'leastversion'
)
Write-Host "Image Creation in Process - Plan Info - prime-strategy | leastversion"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: prime-strategy Offer:kusanagi-77 Sku:leastversion Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_pr-xc-xchange_media_cloud_10_users
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'primestream',
	[string]$Offer = 'xchange_media_cloud_10_users',
	[string]$Skus = 'xchange_media_cloud_10_users',
	[string]$version =  'latest',
	[string]$Product = 'xchange_media_cloud_10_users',
	[string]$name = 'xchange_media_cloud_10_users'
)
Write-Host "Image Creation in Process - Plan Info - primestream | xchange_media_cloud_10_users"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: primestream Offer:xchange_media_cloud_10_users Sku:xchange_media_cloud_10_users Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_pr-ej-ejabberd-simple-1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'process-one',
	[string]$Offer = 'ejabberd-community-edition',
	[string]$Skus = 'ejabberd-simple-1',
	[string]$version =  'latest',
	[string]$Product = 'ejabberd-community-edition',
	[string]$name = 'ejabberd-simple-1'
)
Write-Host "Image Creation in Process - Plan Info - process-one | ejabberd-simple-1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: process-one Offer:ejabberd-community-edition Sku:ejabberd-simple-1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_pr-ma-maestrosibase
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'profisee',
	[string]$Offer = 'maestro-base-server',
	[string]$Skus = 'maestrosibase',
	[string]$version =  'latest',
	[string]$Product = 'maestro-base-server',
	[string]$name = 'maestrosibase'
)
Write-Host "Image Creation in Process - Plan Info - profisee | maestrosibase"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: profisee Offer:maestro-base-server Sku:maestrosibase Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_pr-li-standard1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'progelspa',
	[string]$Offer = 'libra-esva-antispam',
	[string]$Skus = 'standard1',
	[string]$version =  'latest',
	[string]$Product = 'libra-esva-antispam',
	[string]$name = 'standard1'
)
Write-Host "Image Creation in Process - Plan Info - progelspa | standard1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: progelspa Offer:libra-esva-antispam Sku:standard1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_pt-pt-win_northamerica_one_eighteen
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'ptv_group',
	[string]$Offer = 'ptv_xserver',
	[string]$Skus = 'win_northamerica_one_eighteen',
	[string]$version =  'latest',
	[string]$Product = 'ptv_xserver',
	[string]$name = 'win_northamerica_one_eighteen'
)
Write-Host "Image Creation in Process - Plan Info - ptv_group | win_northamerica_one_eighteen"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: ptv_group Offer:ptv_xserver Sku:win_northamerica_one_eighteen Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_pt-pt-win_southamerica_one_eighteen
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'ptv_group',
	[string]$Offer = 'ptv_xserver',
	[string]$Skus = 'win_southamerica_one_eighteen',
	[string]$version =  'latest',
	[string]$Product = 'ptv_xserver',
	[string]$name = 'win_southamerica_one_eighteen'
)
Write-Host "Image Creation in Process - Plan Info - ptv_group | win_southamerica_one_eighteen"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: ptv_group Offer:ptv_xserver Sku:win_southamerica_one_eighteen Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_pu-pu-2016-1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'puppet',
	[string]$Offer = 'puppet-enterprise',
	[string]$Skus = '2016-1',
	[string]$version =  'latest',
	[string]$Product = 'puppet-enterprise',
	[string]$name = '2016-1'
)
Write-Host "Image Creation in Process - Plan Info - puppet | 2016-1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: puppet Offer:puppet-enterprise Sku:2016-1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Pu-Pu-2015.3
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'PuppetLabs',
	[string]$Offer = 'PuppetEnterprise',
	[string]$Skus = '2015.3',
	[string]$version =  'latest',
	[string]$Product = 'PuppetEnterprise',
	[string]$name = '2015.3'
)
Write-Host "Image Creation in Process - Plan Info - PuppetLabs | 2015.3"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: PuppetLabs Offer:PuppetEnterprise Sku:2015.3 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Pu-Pu-3.2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'PuppetLabs',
	[string]$Offer = 'PuppetEnterprise',
	[string]$Skus = '3.2',
	[string]$version =  'latest',
	[string]$Product = 'PuppetEnterprise',
	[string]$name = '3.2'
)
Write-Host "Image Creation in Process - Plan Info - PuppetLabs | 3.2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: PuppetLabs Offer:PuppetEnterprise Sku:3.2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Pu-Pu-3.7
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'PuppetLabs',
	[string]$Offer = 'PuppetEnterprise',
	[string]$Skus = '3.7',
	[string]$version =  'latest',
	[string]$Product = 'PuppetEnterprise',
	[string]$name = '3.7'
)
Write-Host "Image Creation in Process - Plan Info - PuppetLabs | 3.7"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: PuppetLabs Offer:PuppetEnterprise Sku:3.7 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_px-px-pxlportalmarketplaceedition2015
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'pxlag_swiss',
	[string]$Offer = 'pxl-portal-marketplace-edition',
	[string]$Skus = 'pxlportalmarketplaceedition2015',
	[string]$version =  'latest',
	[string]$Product = 'pxl-portal-marketplace-edition',
	[string]$name = 'pxlportalmarketplaceedition2015'
)
Write-Host "Image Creation in Process - Plan Info - pxlag_swiss | pxlportalmarketplaceedition2015"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: pxlag_swiss Offer:pxl-portal-marketplace-edition Sku:pxlportalmarketplaceedition2015 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_qu-qu-quales1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'quales',
	[string]$Offer = 'quales',
	[string]$Skus = 'quales1',
	[string]$version =  'latest',
	[string]$Product = 'quales',
	[string]$name = 'quales1'
)
Write-Host "Image Creation in Process - Plan Info - quales | quales1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: quales Offer:quales Sku:quales1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_qu-qu-qvsa-23
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'qualysguard',
	[string]$Offer = 'qualys-virtual-scanner-v23b',
	[string]$Skus = 'qvsa-23',
	[string]$version =  'latest',
	[string]$Product = 'qualys-virtual-scanner-v23b',
	[string]$name = 'qvsa-23'
)
Write-Host "Image Creation in Process - Plan Info - qualysguard | qvsa-23"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: qualysguard Offer:qualys-virtual-scanner-v23b Sku:qvsa-23 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_qu-qu-node
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'quasardb',
	[string]$Offer = 'quasardb',
	[string]$Skus = 'node',
	[string]$version =  'latest',
	[string]$Product = 'quasardb',
	[string]$name = 'node'
)
Write-Host "Image Creation in Process - Plan Info - quasardb | node"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: quasardb Offer:quasardb Sku:node Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_qu-qu-node-community
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'quasardb',
	[string]$Offer = 'quasardb',
	[string]$Skus = 'node-community',
	[string]$version =  'latest',
	[string]$Product = 'quasardb',
	[string]$name = 'node-community'
)
Write-Host "Image Creation in Process - Plan Info - quasardb | node-community"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: quasardb Offer:quasardb Sku:node-community Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_qu-qu-testbox
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'quasardb',
	[string]$Offer = 'quasardb',
	[string]$Skus = 'testbox',
	[string]$version =  'latest',
	[string]$Product = 'quasardb',
	[string]$name = 'testbox'
)
Write-Host "Image Creation in Process - Plan Info - quasardb | testbox"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: quasardb Offer:quasardb Sku:testbox Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_qu-qb-01-img
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'qubole',
	[string]$Offer = 'qbol-azure',
	[string]$Skus = '01-img',
	[string]$version =  'latest',
	[string]$Product = 'qbol-azure',
	[string]$name = '01-img'
)
Write-Host "Image Creation in Process - Plan Info - qubole | 01-img"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: qubole Offer:qbol-azure Sku:01-img Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ra-ra-radware-alteon-ng-va-adc
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'radware',
	[string]$Offer = 'radware-alteon-va',
	[string]$Skus = 'radware-alteon-ng-va-adc',
	[string]$version =  'latest',
	[string]$Product = 'radware-alteon-va',
	[string]$name = 'radware-alteon-ng-va-adc'
)
Write-Host "Image Creation in Process - Plan Info - radware | radware-alteon-ng-va-adc"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: radware Offer:radware-alteon-va Sku:radware-alteon-ng-va-adc Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ra-ra-os
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'rancher',
	[string]$Offer = 'rancheros',
	[string]$Skus = 'os',
	[string]$version =  'latest',
	[string]$Product = 'rancheros',
	[string]$name = 'os'
)
Write-Host "Image Creation in Process - Plan Info - rancher | os"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: rancher Offer:rancheros Sku:os Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ra-ne-nexpose-scan-engine
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'rapid7',
	[string]$Offer = 'nexpose-scan-engine',
	[string]$Skus = 'nexpose-scan-engine',
	[string]$version =  'latest',
	[string]$Product = 'nexpose-scan-engine',
	[string]$name = 'nexpose-scan-engine'
)
Write-Host "Image Creation in Process - Plan Info - rapid7 | nexpose-scan-engine"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: rapid7 Offer:nexpose-scan-engine Sku:nexpose-scan-engine Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfolin_Re-RH-6.7
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'RedHat',
	[string]$Offer = 'RHEL',
	[string]$Skus = '6.7',
	[string]$version =  'latest',
	[string]$Product = 'RHEL',
	[string]$name = '6.7'
)
Write-Host "Image Creation in Process - No Plan Info Linux - RedHat | 6.7"
$script:VirtualMachine = $script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: RedHat Offer:RHEL Sku:6.7 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfolin_Re-RH-6.8
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'RedHat',
	[string]$Offer = 'RHEL',
	[string]$Skus = '6.8',
	[string]$version =  'latest',
	[string]$Product = 'RHEL',
	[string]$name = '6.8'
)
Write-Host "Image Creation in Process - No Plan Info Linux - RedHat | 6.8"
$script:VirtualMachine = $script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: RedHat Offer:RHEL Sku:6.8 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfolin_Re-RH-7.2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'RedHat',
	[string]$Offer = 'RHEL',
	[string]$Skus = '7.2',
	[string]$version =  'latest',
	[string]$Product = 'RHEL',
	[string]$name = '7.2'
)
Write-Host "Image Creation in Process - No Plan Info Linux - RedHat | 7.2"
$script:VirtualMachine = $script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: RedHat Offer:RHEL Sku:7.2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_re-re-rpi
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'redpoint-global',
	[string]$Offer = 'redpoint-interaction',
	[string]$Skus = 'rpi',
	[string]$version =  'latest',
	[string]$Product = 'redpoint-interaction',
	[string]$name = 'rpi'
)
Write-Host "Image Creation in Process - Plan Info - redpoint-global | rpi"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: redpoint-global Offer:redpoint-interaction Sku:rpi Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_re-re-rpdm
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'redpoint-global',
	[string]$Offer = 'redpoint-rpdm',
	[string]$Skus = 'rpdm',
	[string]$version =  'latest',
	[string]$Product = 'redpoint-rpdm',
	[string]$name = 'rpdm'
)
Write-Host "Image Creation in Process - Plan Info - redpoint-global | rpdm"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: redpoint-global Offer:redpoint-rpdm Sku:rpdm Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_re-rl-rlcatalyst
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'relevance-lab',
	[string]$Offer = 'rlcatalyst',
	[string]$Skus = 'rlcatalyst',
	[string]$version =  'latest',
	[string]$Product = 'rlcatalyst',
	[string]$name = 'rlcatalyst'
)
Write-Host "Image Creation in Process - Plan Info - relevance-lab | rlcatalyst"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: relevance-lab Offer:rlcatalyst Sku:rlcatalyst Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_re-fu-version27
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'remotelearner',
	[string]$Offer = 'fully-supported-moodle',
	[string]$Skus = 'version27',
	[string]$version =  'latest',
	[string]$Product = 'fully-supported-moodle',
	[string]$name = 'version27'
)
Write-Host "Image Creation in Process - Plan Info - remotelearner | version27"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: remotelearner Offer:fully-supported-moodle Sku:version27 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_re-re-rre74-centos65
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'revolution-analytics',
	[string]$Offer = 'revolution-r-enterprise',
	[string]$Skus = 'rre74-centos65',
	[string]$version =  'latest',
	[string]$Product = 'revolution-r-enterprise',
	[string]$name = 'rre74-centos65'
)
Write-Host "Image Creation in Process - Plan Info - revolution-analytics | rre74-centos65"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: revolution-analytics Offer:revolution-r-enterprise Sku:rre74-centos65 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_re-re-rre74-win2012r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'revolution-analytics',
	[string]$Offer = 'revolution-r-enterprise',
	[string]$Skus = 'rre74-win2012r2',
	[string]$version =  'latest',
	[string]$Product = 'revolution-r-enterprise',
	[string]$name = 'rre74-win2012r2'
)
Write-Host "Image Creation in Process - Plan Info - revolution-analytics | rre74-win2012r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: revolution-analytics Offer:revolution-r-enterprise Sku:rre74-win2012r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ri-Ri-6
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'RightScaleLinux',
	[string]$Offer = 'RightImage-CentOS',
	[string]$Skus = '6',
	[string]$version =  'latest',
	[string]$Product = 'RightImage-CentOS',
	[string]$name = '6'
)
Write-Host "Image Creation in Process - Plan Info - RightScaleLinux | 6"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: RightScaleLinux Offer:RightImage-CentOS Sku:6 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ri-Ri-7
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'RightScaleLinux',
	[string]$Offer = 'RightImage-CentOS',
	[string]$Skus = '7',
	[string]$version =  'latest',
	[string]$Product = 'RightImage-CentOS',
	[string]$name = '7'
)
Write-Host "Image Creation in Process - Plan Info - RightScaleLinux | 7"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: RightScaleLinux Offer:RightImage-CentOS Sku:7 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ri-Ri-12.04
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'RightScaleLinux',
	[string]$Offer = 'RightImage-Ubuntu',
	[string]$Skus = '12.04',
	[string]$version =  'latest',
	[string]$Product = 'RightImage-Ubuntu',
	[string]$name = '12.04'
)
Write-Host "Image Creation in Process - Plan Info - RightScaleLinux | 12.04"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: RightScaleLinux Offer:RightImage-Ubuntu Sku:12.04 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ri-Ri-14.04
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'RightScaleLinux',
	[string]$Offer = 'RightImage-Ubuntu',
	[string]$Skus = '14.04',
	[string]$version =  'latest',
	[string]$Product = 'RightImage-Ubuntu',
	[string]$name = '14.04'
)
Write-Host "Image Creation in Process - Plan Info - RightScaleLinux | 14.04"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: RightScaleLinux Offer:RightImage-Ubuntu Sku:14.04 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ri-Ri-2008-R2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'RightScaleWindowsServer',
	[string]$Offer = 'RightImage-WindowsServer',
	[string]$Skus = '2008-R2',
	[string]$version =  'latest',
	[string]$Product = 'RightImage-WindowsServer',
	[string]$name = '2008-R2'
)
Write-Host "Image Creation in Process - Plan Info - RightScaleWindowsServer | 2008-R2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: RightScaleWindowsServer Offer:RightImage-WindowsServer Sku:2008-R2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ri-Ri-2008-R2-SP1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'RightScaleWindowsServer',
	[string]$Offer = 'RightImage-WindowsServer',
	[string]$Skus = '2008-R2-SP1',
	[string]$version =  'latest',
	[string]$Product = 'RightImage-WindowsServer',
	[string]$name = '2008-R2-SP1'
)
Write-Host "Image Creation in Process - Plan Info - RightScaleWindowsServer | 2008-R2-SP1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: RightScaleWindowsServer Offer:RightImage-WindowsServer Sku:2008-R2-SP1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ri-Ri-2008-R2-SP1-with-IIS-7
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'RightScaleWindowsServer',
	[string]$Offer = 'RightImage-WindowsServer',
	[string]$Skus = '2008-R2-SP1-with-IIS-7',
	[string]$version =  'latest',
	[string]$Product = 'RightImage-WindowsServer',
	[string]$name = '2008-R2-SP1-with-IIS-7'
)
Write-Host "Image Creation in Process - Plan Info - RightScaleWindowsServer | 2008-R2-SP1-with-IIS-7"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: RightScaleWindowsServer Offer:RightImage-WindowsServer Sku:2008-R2-SP1-with-IIS-7 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ri-Ri-2008-R2-SP1-with-SQL-2012
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'RightScaleWindowsServer',
	[string]$Offer = 'RightImage-WindowsServer',
	[string]$Skus = '2008-R2-SP1-with-SQL-2012',
	[string]$version =  'latest',
	[string]$Product = 'RightImage-WindowsServer',
	[string]$name = '2008-R2-SP1-with-SQL-2012'
)
Write-Host "Image Creation in Process - Plan Info - RightScaleWindowsServer | 2008-R2-SP1-with-SQL-2012"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: RightScaleWindowsServer Offer:RightImage-WindowsServer Sku:2008-R2-SP1-with-SQL-2012 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ri-Ri-2008-R2-with-IIS-7
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'RightScaleWindowsServer',
	[string]$Offer = 'RightImage-WindowsServer',
	[string]$Skus = '2008-R2-with-IIS-7',
	[string]$version =  'latest',
	[string]$Product = 'RightImage-WindowsServer',
	[string]$name = '2008-R2-with-IIS-7'
)
Write-Host "Image Creation in Process - Plan Info - RightScaleWindowsServer | 2008-R2-with-IIS-7"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: RightScaleWindowsServer Offer:RightImage-WindowsServer Sku:2008-R2-with-IIS-7 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ri-Ri-2008-R2-with-SQL-2008-R2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'RightScaleWindowsServer',
	[string]$Offer = 'RightImage-WindowsServer',
	[string]$Skus = '2008-R2-with-SQL-2008-R2',
	[string]$version =  'latest',
	[string]$Product = 'RightImage-WindowsServer',
	[string]$name = '2008-R2-with-SQL-2008-R2'
)
Write-Host "Image Creation in Process - Plan Info - RightScaleWindowsServer | 2008-R2-with-SQL-2008-R2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: RightScaleWindowsServer Offer:RightImage-WindowsServer Sku:2008-R2-with-SQL-2008-R2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ri-Ri-2008-R2-with-SQL-2008-R2-Ent
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'RightScaleWindowsServer',
	[string]$Offer = 'RightImage-WindowsServer',
	[string]$Skus = '2008-R2-with-SQL-2008-R2-Ent',
	[string]$version =  'latest',
	[string]$Product = 'RightImage-WindowsServer',
	[string]$name = '2008-R2-with-SQL-2008-R2-Ent'
)
Write-Host "Image Creation in Process - Plan Info - RightScaleWindowsServer | 2008-R2-with-SQL-2008-R2-Ent"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: RightScaleWindowsServer Offer:RightImage-WindowsServer Sku:2008-R2-with-SQL-2008-R2-Ent Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ri-Ri-2008-R2-with-SQL-2012
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'RightScaleWindowsServer',
	[string]$Offer = 'RightImage-WindowsServer',
	[string]$Skus = '2008-R2-with-SQL-2012',
	[string]$version =  'latest',
	[string]$Product = 'RightImage-WindowsServer',
	[string]$name = '2008-R2-with-SQL-2012'
)
Write-Host "Image Creation in Process - Plan Info - RightScaleWindowsServer | 2008-R2-with-SQL-2012"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: RightScaleWindowsServer Offer:RightImage-WindowsServer Sku:2008-R2-with-SQL-2012 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ri-Ri-2008-R2-with-SQL-2012-Ent
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'RightScaleWindowsServer',
	[string]$Offer = 'RightImage-WindowsServer',
	[string]$Skus = '2008-R2-with-SQL-2012-Ent',
	[string]$version =  'latest',
	[string]$Product = 'RightImage-WindowsServer',
	[string]$name = '2008-R2-with-SQL-2012-Ent'
)
Write-Host "Image Creation in Process - Plan Info - RightScaleWindowsServer | 2008-R2-with-SQL-2012-Ent"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: RightScaleWindowsServer Offer:RightImage-WindowsServer Sku:2008-R2-with-SQL-2012-Ent Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ri-Ri-2012-Datacenter
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'RightScaleWindowsServer',
	[string]$Offer = 'RightImage-WindowsServer',
	[string]$Skus = '2012-Datacenter',
	[string]$version =  'latest',
	[string]$Product = 'RightImage-WindowsServer',
	[string]$name = '2012-Datacenter'
)
Write-Host "Image Creation in Process - Plan Info - RightScaleWindowsServer | 2012-Datacenter"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: RightScaleWindowsServer Offer:RightImage-WindowsServer Sku:2012-Datacenter Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ri-Ri-2012-Datacenter-with-IIS-8
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'RightScaleWindowsServer',
	[string]$Offer = 'RightImage-WindowsServer',
	[string]$Skus = '2012-Datacenter-with-IIS-8',
	[string]$version =  'latest',
	[string]$Product = 'RightImage-WindowsServer',
	[string]$name = '2012-Datacenter-with-IIS-8'
)
Write-Host "Image Creation in Process - Plan Info - RightScaleWindowsServer | 2012-Datacenter-with-IIS-8"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: RightScaleWindowsServer Offer:RightImage-WindowsServer Sku:2012-Datacenter-with-IIS-8 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ri-Ri-2012-Datacenter-with-SQL-2012
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'RightScaleWindowsServer',
	[string]$Offer = 'RightImage-WindowsServer',
	[string]$Skus = '2012-Datacenter-with-SQL-2012',
	[string]$version =  'latest',
	[string]$Product = 'RightImage-WindowsServer',
	[string]$name = '2012-Datacenter-with-SQL-2012'
)
Write-Host "Image Creation in Process - Plan Info - RightScaleWindowsServer | 2012-Datacenter-with-SQL-2012"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: RightScaleWindowsServer Offer:RightImage-WindowsServer Sku:2012-Datacenter-with-SQL-2012 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ri-Ri-2012-Datacenter-with-SQL-2012-Ent
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'RightScaleWindowsServer',
	[string]$Offer = 'RightImage-WindowsServer',
	[string]$Skus = '2012-Datacenter-with-SQL-2012-Ent',
	[string]$version =  'latest',
	[string]$Product = 'RightImage-WindowsServer',
	[string]$name = '2012-Datacenter-with-SQL-2012-Ent'
)
Write-Host "Image Creation in Process - Plan Info - RightScaleWindowsServer | 2012-Datacenter-with-SQL-2012-Ent"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: RightScaleWindowsServer Offer:RightImage-WindowsServer Sku:2012-Datacenter-with-SQL-2012-Ent Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ri-Ri-2012-R2-Datacenter
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'RightScaleWindowsServer',
	[string]$Offer = 'RightImage-WindowsServer',
	[string]$Skus = '2012-R2-Datacenter',
	[string]$version =  'latest',
	[string]$Product = 'RightImage-WindowsServer',
	[string]$name = '2012-R2-Datacenter'
)
Write-Host "Image Creation in Process - Plan Info - RightScaleWindowsServer | 2012-R2-Datacenter"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: RightScaleWindowsServer Offer:RightImage-WindowsServer Sku:2012-R2-Datacenter Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ri-ri-ai_byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'riverbed',
	[string]$Offer = 'riverbed-steelcentral-appinternals',
	[string]$Skus = 'ai_byol',
	[string]$version =  'latest',
	[string]$Product = 'riverbed-steelcentral-appinternals',
	[string]$name = 'ai_byol'
)
Write-Host "Image Creation in Process - Plan Info - riverbed | ai_byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: riverbed Offer:riverbed-steelcentral-appinternals Sku:ai_byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ri-ri-ai_large
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'riverbed',
	[string]$Offer = 'riverbed-steelcentral-appinternals',
	[string]$Skus = 'ai_large',
	[string]$version =  'latest',
	[string]$Product = 'riverbed-steelcentral-appinternals',
	[string]$name = 'ai_large'
)
Write-Host "Image Creation in Process - Plan Info - riverbed | ai_large"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: riverbed Offer:riverbed-steelcentral-appinternals Sku:ai_large Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ri-ri-ai_medium
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'riverbed',
	[string]$Offer = 'riverbed-steelcentral-appinternals',
	[string]$Skus = 'ai_medium',
	[string]$version =  'latest',
	[string]$Product = 'riverbed-steelcentral-appinternals',
	[string]$name = 'ai_medium'
)
Write-Host "Image Creation in Process - Plan Info - riverbed | ai_medium"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: riverbed Offer:riverbed-steelcentral-appinternals Sku:ai_medium Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ri-ri-ai_small
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'riverbed',
	[string]$Offer = 'riverbed-steelcentral-appinternals',
	[string]$Skus = 'ai_small',
	[string]$version =  'latest',
	[string]$Product = 'riverbed-steelcentral-appinternals',
	[string]$name = 'ai_small'
)
Write-Host "Image Creation in Process - Plan Info - riverbed | ai_small"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: riverbed Offer:riverbed-steelcentral-appinternals Sku:ai_small Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ri-ri-ai_testing_json
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'riverbed',
	[string]$Offer = 'riverbed-steelcentral-appinternals',
	[string]$Skus = 'ai_testing_json',
	[string]$version =  'latest',
	[string]$Product = 'riverbed-steelcentral-appinternals',
	[string]$name = 'ai_testing_json'
)
Write-Host "Image Creation in Process - Plan Info - riverbed | ai_testing_json"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: riverbed Offer:riverbed-steelcentral-appinternals Sku:ai_testing_json Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ri-ri-ai_testing_qa
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'riverbed',
	[string]$Offer = 'riverbed-steelcentral-appinternals',
	[string]$Skus = 'ai_testing_qa',
	[string]$version =  'latest',
	[string]$Product = 'riverbed-steelcentral-appinternals',
	[string]$name = 'ai_testing_qa'
)
Write-Host "Image Creation in Process - Plan Info - riverbed | ai_testing_qa"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: riverbed Offer:riverbed-steelcentral-appinternals Sku:ai_testing_qa Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ri-ri-steelhead-9-1-1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'riverbed',
	[string]$Offer = 'riverbed-steelhead-9-1-0',
	[string]$Skus = 'steelhead-9-1-1',
	[string]$version =  'latest',
	[string]$Product = 'riverbed-steelhead-9-1-0',
	[string]$name = 'steelhead-9-1-1'
)
Write-Host "Image Creation in Process - Plan Info - riverbed | steelhead-9-1-1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: riverbed Offer:riverbed-steelhead-9-1-0 Sku:steelhead-9-1-1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ri-ri-steelhead-9-1-3
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'riverbed',
	[string]$Offer = 'riverbed-steelhead-9-1-3',
	[string]$Skus = 'steelhead-9-1-3',
	[string]$version =  'latest',
	[string]$Product = 'riverbed-steelhead-9-1-3',
	[string]$name = 'steelhead-9-1-3'
)
Write-Host "Image Creation in Process - Plan Info - riverbed | steelhead-9-1-3"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: riverbed Offer:riverbed-steelhead-9-1-3 Sku:steelhead-9-1-3 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ri-ri-riverbed-steelhead-9-2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'riverbed',
	[string]$Offer = 'riverbed-steelhead-9-2',
	[string]$Skus = 'riverbed-steelhead-9-2',
	[string]$version =  'latest',
	[string]$Product = 'riverbed-steelhead-9-2',
	[string]$name = 'riverbed-steelhead-9-2'
)
Write-Host "Image Creation in Process - Plan Info - riverbed | riverbed-steelhead-9-2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: riverbed Offer:riverbed-steelhead-9-2 Sku:riverbed-steelhead-9-2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ri-st-stm_dev_64_byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'riverbed',
	[string]$Offer = 'steelapp_traffic_manager',
	[string]$Skus = 'stm_dev_64_byol',
	[string]$version =  'latest',
	[string]$Product = 'steelapp_traffic_manager',
	[string]$name = 'stm_dev_64_byol'
)
Write-Host "Image Creation in Process - Plan Info - riverbed | stm_dev_64_byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: riverbed Offer:steelapp_traffic_manager Sku:stm_dev_64_byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_Ri-st-stm_dev_64_byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'RiverbedTechnology',
	[string]$Offer = 'steelapp_traffic_manager',
	[string]$Skus = 'stm_dev_64_byol',
	[string]$version =  'latest',
	[string]$Product = 'steelapp_traffic_manager',
	[string]$name = 'stm_dev_64_byol'
)
Write-Host "Image Creation in Process - Plan Info - RiverbedTechnology | stm_dev_64_byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: RiverbedTechnology Offer:steelapp_traffic_manager Sku:stm_dev_64_byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ro-ro-rocketdiscoverlinux
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'rocketsoftware',
	[string]$Offer = 'rocket-discover',
	[string]$Skus = 'rocketdiscoverlinux',
	[string]$version =  'latest',
	[string]$Product = 'rocket-discover',
	[string]$name = 'rocketdiscoverlinux'
)
Write-Host "Image Creation in Process - Plan Info - rocketsoftware | rocketdiscoverlinux"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: rocketsoftware Offer:rocket-discover Sku:rocketdiscoverlinux Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_rp-re-trial
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'rp',
	[string]$Offer = 'recordpoint',
	[string]$Skus = 'trial',
	[string]$version =  'latest',
	[string]$Product = 'recordpoint',
	[string]$name = 'trial'
)
Write-Host "Image Creation in Process - Plan Info - rp | trial"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: rp Offer:recordpoint Sku:trial Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_sa-fl-patientexperience
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'saama',
	[string]$Offer = 'fluidanalyticsengine',
	[string]$Skus = 'patientexperience',
	[string]$version =  'latest',
	[string]$Product = 'fluidanalyticsengine',
	[string]$name = 'patientexperience'
)
Write-Host "Image Creation in Process - Plan Info - saama | patientexperience"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: saama Offer:fluidanalyticsengine Sku:patientexperience Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_sa-in-insurancefraud
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'saama',
	[string]$Offer = 'insurancefraudanalytics',
	[string]$Skus = 'insurancefraud',
	[string]$version =  'latest',
	[string]$Product = 'insurancefraudanalytics',
	[string]$name = 'insurancefraud'
)
Write-Host "Image Creation in Process - Plan Info - saama | insurancefraud"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: saama Offer:insurancefraudanalytics Sku:insurancefraud Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_sa-re-treatmentpathways
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'saama',
	[string]$Offer = 'realworldevidence',
	[string]$Skus = 'treatmentpathways',
	[string]$version =  'latest',
	[string]$Product = 'realworldevidence',
	[string]$name = 'treatmentpathways'
)
Write-Host "Image Creation in Process - Plan Info - saama | treatmentpathways"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: saama Offer:realworldevidence Sku:treatmentpathways Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_sa-ce-sse-01
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'saltstack',
	[string]$Offer = 'centos65saltstackenterprise',
	[string]$Skus = 'sse-01',
	[string]$version =  'latest',
	[string]$Product = 'centos65saltstackenterprise',
	[string]$name = 'sse-01'
)
Write-Host "Image Creation in Process - Plan Info - saltstack | sse-01"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: saltstack Offer:centos65saltstackenterprise Sku:sse-01 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_sa-ce-cello-loading-optimizer-50-windows
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'samsungsds-cello',
	[string]$Offer = 'cello-loading-optimizer-50-windows',
	[string]$Skus = 'cello-loading-optimizer-50-windows',
	[string]$version =  'latest',
	[string]$Product = 'cello-loading-optimizer-50-windows',
	[string]$name = 'cello-loading-optimizer-50-windows'
)
Write-Host "Image Creation in Process - Plan Info - samsungsds-cello | cello-loading-optimizer-50-windows"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: samsungsds-cello Offer:cello-loading-optimizer-50-windows Sku:cello-loading-optimizer-50-windows Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_sa-ce-cello-virtual-warehouse-50-windows
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'samsungsds-cello',
	[string]$Offer = 'cello-virtual-warehouse-50-windows',
	[string]$Skus = 'cello-virtual-warehouse-50-windows',
	[string]$version =  'latest',
	[string]$Product = 'cello-virtual-warehouse-50-windows',
	[string]$name = 'cello-virtual-warehouse-50-windows'
)
Write-Host "Image Creation in Process - Plan Info - samsungsds-cello | cello-virtual-warehouse-50-windows"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: samsungsds-cello Offer:cello-virtual-warehouse-50-windows Sku:cello-virtual-warehouse-50-windows Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_sa-as-ase_byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'sap',
	[string]$Offer = 'ase',
	[string]$Skus = 'ase_byol',
	[string]$version =  'latest',
	[string]$Product = 'ase',
	[string]$name = 'ase_byol'
)
Write-Host "Image Creation in Process - Plan Info - sap | ase_byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: sap Offer:ase Sku:ase_byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_sa-as-ase_hourly
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'sap',
	[string]$Offer = 'ase',
	[string]$Skus = 'ase_hourly',
	[string]$version =  'latest',
	[string]$Product = 'ase',
	[string]$name = 'ase_hourly'
)
Write-Host "Image Creation in Process - Plan Info - sap | ase_hourly"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: sap Offer:ase Sku:ase_hourly Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_sc-sc-byol_mysql
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'scalearc',
	[string]$Offer = 'scalearc_mysql-server',
	[string]$Skus = 'byol_mysql',
	[string]$version =  'latest',
	[string]$Product = 'scalearc_mysql-server',
	[string]$name = 'byol_mysql'
)
Write-Host "Image Creation in Process - Plan Info - scalearc | byol_mysql"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: scalearc Offer:scalearc_mysql-server Sku:byol_mysql Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_sc-sc-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'scalearc',
	[string]$Offer = 'scalearc_oracle',
	[string]$Skus = 'byol',
	[string]$version =  'latest',
	[string]$Product = 'scalearc_oracle',
	[string]$name = 'byol'
)
Write-Host "Image Creation in Process - Plan Info - scalearc | byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: scalearc Offer:scalearc_oracle Sku:byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_sc-sc-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'scalearc',
	[string]$Offer = 'scalearc_sql_server',
	[string]$Skus = 'byol',
	[string]$version =  'latest',
	[string]$Product = 'scalearc_sql_server',
	[string]$name = 'byol'
)
Write-Host "Image Creation in Process - Plan Info - scalearc | byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: scalearc Offer:scalearc_sql_server Sku:byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_sc-ce-celf_v1b_sku_scsk_jp
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'scsk',
	[string]$Offer = 'celf_v1b_oi_scsk_jp',
	[string]$Skus = 'celf_v1b_sku_scsk_jp',
	[string]$version =  'latest',
	[string]$Product = 'celf_v1b_oi_scsk_jp',
	[string]$name = 'celf_v1b_sku_scsk_jp'
)
Write-Host "Image Creation in Process - Plan Info - scsk | celf_v1b_sku_scsk_jp"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: scsk Offer:celf_v1b_oi_scsk_jp Sku:celf_v1b_sku_scsk_jp Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_se-ba-014-141-001
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'seagate',
	[string]$Offer = 'backup',
	[string]$Skus = '014-141-001',
	[string]$version =  'latest',
	[string]$Product = 'backup',
	[string]$name = '014-141-001'
)
Write-Host "Image Creation in Process - Plan Info - seagate | 014-141-001"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: seagate Offer:backup Sku:014-141-001 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_se-se-searchblox_win_version82
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'searchblox',
	[string]$Offer = 'searchblox_server_v82',
	[string]$Skus = 'searchblox_win_version82',
	[string]$version =  'latest',
	[string]$Product = 'searchblox_server_v82',
	[string]$name = 'searchblox_win_version82'
)
Write-Host "Image Creation in Process - Plan Info - searchblox | searchblox_win_version82"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: searchblox Offer:searchblox_server_v82 Sku:searchblox_win_version82 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_se-se-servoy-7-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'servoy',
	[string]$Offer = 'servoy-v7',
	[string]$Skus = 'servoy-7-byol',
	[string]$version =  'latest',
	[string]$Product = 'servoy-v7',
	[string]$name = 'servoy-7-byol'
)
Write-Host "Image Creation in Process - Plan Info - servoy | servoy-7-byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: servoy Offer:servoy-v7 Sku:servoy-7-byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_sh-sh-sharefile-storagezones-controller
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'sharefile',
	[string]$Offer = 'sharefile-storagezones-controller',
	[string]$Skus = 'sharefile-storagezones-controller',
	[string]$version =  'latest',
	[string]$Product = 'sharefile-storagezones-controller',
	[string]$name = 'sharefile-storagezones-controller'
)
Write-Host "Image Creation in Process - Plan Info - sharefile | sharefile-storagezones-controller"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: sharefile Offer:sharefile-storagezones-controller Sku:sharefile-storagezones-controller Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_sh-sh-sharefile-storagezone-controller
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'sharefile',
	[string]$Offer = 'sharefile-storagezones-controller-3-4-0',
	[string]$Skus = 'sharefile-storagezone-controller',
	[string]$version =  'latest',
	[string]$Product = 'sharefile-storagezones-controller-3-4-0',
	[string]$name = 'sharefile-storagezone-controller'
)
Write-Host "Image Creation in Process - Plan Info - sharefile | sharefile-storagezone-controller"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: sharefile Offer:sharefile-storagezones-controller-3-4-0 Sku:sharefile-storagezone-controller Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_sh-sh-shavlik_protect_azure_standard_commercial
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'shavlik',
	[string]$Offer = 'shavlik-protect-azure-standard',
	[string]$Skus = 'shavlik_protect_azure_standard_commercial',
	[string]$version =  'latest',
	[string]$Product = 'shavlik-protect-azure-standard',
	[string]$name = 'shavlik_protect_azure_standard_commercial'
)
Write-Host "Image Creation in Process - Plan Info - shavlik | shavlik_protect_azure_standard_commercial"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: shavlik Offer:shavlik-protect-azure-standard Sku:shavlik_protect_azure_standard_commercial Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_si-si-dtap-sightapps
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'sightapps',
	[string]$Offer = 'sightapps',
	[string]$Skus = 'dtap-sightapps',
	[string]$version =  'latest',
	[string]$Product = 'sightapps',
	[string]$name = 'dtap-sightapps'
)
Write-Host "Image Creation in Process - Plan Info - sightapps | dtap-sightapps"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: sightapps Offer:sightapps Sku:dtap-sightapps Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_si-si-silver_peak_edgeconnect
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'silver-peak-systems',
	[string]$Offer = 'silver_peak_edgeconnect',
	[string]$Skus = 'silver_peak_edgeconnect',
	[string]$version =  'latest',
	[string]$Product = 'silver_peak_edgeconnect',
	[string]$name = 'silver_peak_edgeconnect'
)
Write-Host "Image Creation in Process - Plan Info - silver-peak-systems | silver_peak_edgeconnect"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: silver-peak-systems Offer:silver_peak_edgeconnect Sku:silver_peak_edgeconnect Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_si-si-silver-peak-vx
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'silver-peak-systems',
	[string]$Offer = 'silver_peak_vx',
	[string]$Skus = 'silver-peak-vx',
	[string]$version =  'latest',
	[string]$Product = 'silver_peak_vx',
	[string]$name = 'silver-peak-vx'
)
Write-Host "Image Creation in Process - Plan Info - silver-peak-systems | silver-peak-vx"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: silver-peak-systems Offer:silver_peak_vx Sku:silver-peak-vx Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_si-si-simmachines_vm
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'simmachinesinc',
	[string]$Offer = 'simmachines_vm',
	[string]$Skus = 'simmachines_vm',
	[string]$version =  'latest',
	[string]$Product = 'simmachines_vm',
	[string]$name = 'simmachines_vm'
)
Write-Host "Image Creation in Process - Plan Info - simmachinesinc | simmachines_vm"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: simmachinesinc Offer:simmachines_vm Sku:simmachines_vm Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_si-si-sf-va-msa
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'sinefa',
	[string]$Offer = 'sinefa-probe',
	[string]$Skus = 'sf-va-msa',
	[string]$version =  'latest',
	[string]$Product = 'sinefa-probe',
	[string]$name = 'sf-va-msa'
)
Write-Host "Image Creation in Process - Plan Info - sinefa | sf-va-msa"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: sinefa Offer:sinefa-probe Sku:sf-va-msa Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_si-br-bring_your_own_license_dkce_and_sql
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'sios_datakeeper',
	[string]$Offer = 'bring_your_own_license_dkce_and_sql',
	[string]$Skus = 'bring_your_own_license_dkce_and_sql',
	[string]$version =  'latest',
	[string]$Product = 'bring_your_own_license_dkce_and_sql',
	[string]$name = 'bring_your_own_license_dkce_and_sql'
)
Write-Host "Image Creation in Process - Plan Info - sios_datakeeper | bring_your_own_license_dkce_and_sql"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: sios_datakeeper Offer:bring_your_own_license_dkce_and_sql Sku:bring_your_own_license_dkce_and_sql Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_si-si-bring_your_own_license
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'sios_datakeeper',
	[string]$Offer = 'sios-datakeeper-8',
	[string]$Skus = 'bring_your_own_license',
	[string]$version =  'latest',
	[string]$Product = 'sios-datakeeper-8',
	[string]$name = 'bring_your_own_license'
)
Write-Host "Image Creation in Process - Plan Info - sios_datakeeper | bring_your_own_license"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: sios_datakeeper Offer:sios-datakeeper-8 Sku:bring_your_own_license Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_si-si-sisense_byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'sisense',
	[string]$Offer = 'sisense_byol',
	[string]$Skus = 'sisense_byol',
	[string]$version =  'latest',
	[string]$Product = 'sisense_byol',
	[string]$name = 'sisense_byol'
)
Write-Host "Image Creation in Process - Plan Info - sisense | sisense_byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: sisense Offer:sisense_byol Sku:sisense_byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_sn-sn-plex-azure-win
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'snaplogic',
	[string]$Offer = 'snaplogic-elastic-integration-windows',
	[string]$Skus = 'plex-azure-win',
	[string]$version =  'latest',
	[string]$Product = 'snaplogic-elastic-integration-windows',
	[string]$name = 'plex-azure-win'
)
Write-Host "Image Creation in Process - Plan Info - snaplogic | plex-azure-win"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: snaplogic Offer:snaplogic-elastic-integration-windows Sku:plex-azure-win Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_sn-sn-s2c-company
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'snip2code',
	[string]$Offer = 'snip2codeprivateinstance',
	[string]$Skus = 's2c-company',
	[string]$version =  'latest',
	[string]$Product = 'snip2codeprivateinstance',
	[string]$name = 's2c-company'
)
Write-Host "Image Creation in Process - Plan Info - snip2code | s2c-company"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: snip2code Offer:snip2codeprivateinstance Sku:s2c-company Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_sn-sn-s2c-starter
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'snip2code',
	[string]$Offer = 'snip2codeprivateinstance',
	[string]$Skus = 's2c-starter',
	[string]$version =  'latest',
	[string]$Product = 'snip2codeprivateinstance',
	[string]$name = 's2c-starter'
)
Write-Host "Image Creation in Process - Plan Info - snip2code | s2c-starter"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: snip2code Offer:snip2codeprivateinstance Sku:s2c-starter Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_sn-sn-s2c-team
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'snip2code',
	[string]$Offer = 'snip2codeprivateinstance',
	[string]$Skus = 's2c-team',
	[string]$version =  'latest',
	[string]$Product = 'snip2codeprivateinstance',
	[string]$name = 's2c-team'
)
Write-Host "Image Creation in Process - Plan Info - snip2code | s2c-team"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: snip2code Offer:snip2codeprivateinstance Sku:s2c-team Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_so-cl-cloudtest-lite
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'soasta',
	[string]$Offer = 'cloudtest-lite',
	[string]$Skus = 'cloudtest-lite',
	[string]$version =  'latest',
	[string]$Product = 'cloudtest-lite',
	[string]$name = 'cloudtest-lite'
)
Write-Host "Image Creation in Process - Plan Info - soasta | cloudtest-lite"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: soasta Offer:cloudtest-lite Sku:cloudtest-lite Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_so-so-express_subscription
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'softnas',
	[string]$Offer = 'softnas-cloud',
	[string]$Skus = 'express_subscription',
	[string]$version =  'latest',
	[string]$Product = 'softnas-cloud',
	[string]$name = 'express_subscription'
)
Write-Host "Image Creation in Process - Plan Info - softnas | express_subscription"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: softnas Offer:softnas-cloud Sku:express_subscription Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_so-so-standard_byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'softnas',
	[string]$Offer = 'softnas-cloud',
	[string]$Skus = 'standard_byol',
	[string]$version =  'latest',
	[string]$Product = 'softnas-cloud',
	[string]$name = 'standard_byol'
)
Write-Host "Image Creation in Process - Plan Info - softnas | standard_byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: softnas Offer:softnas-cloud Sku:standard_byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_so-so-standard_subscription
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'softnas',
	[string]$Offer = 'softnas-cloud',
	[string]$Skus = 'standard_subscription',
	[string]$version =  'latest',
	[string]$Product = 'softnas-cloud',
	[string]$name = 'standard_subscription'
)
Write-Host "Image Creation in Process - Plan Info - softnas | standard_subscription"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: softnas Offer:softnas-cloud Sku:standard_subscription Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_so-so-soha_cloud_basic_plan
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'soha',
	[string]$Offer = 'soha-cloud',
	[string]$Skus = 'soha_cloud_basic_plan',
	[string]$version =  'latest',
	[string]$Product = 'soha-cloud',
	[string]$name = 'soha_cloud_basic_plan'
)
Write-Host "Image Creation in Process - Plan Info - soha | soha_cloud_basic_plan"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: soha Offer:soha-cloud Sku:soha_cloud_basic_plan Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_so-so-soha_cloud_free_plan
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'soha',
	[string]$Offer = 'soha-cloud',
	[string]$Skus = 'soha_cloud_free_plan',
	[string]$version =  'latest',
	[string]$Product = 'soha-cloud',
	[string]$name = 'soha_cloud_free_plan'
)
Write-Host "Image Creation in Process - Plan Info - soha | soha_cloud_free_plan"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: soha Offer:soha-cloud Sku:soha_cloud_free_plan Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_so-so-soha_cloud_premium_plan
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'soha',
	[string]$Offer = 'soha-cloud',
	[string]$Skus = 'soha_cloud_premium_plan',
	[string]$version =  'latest',
	[string]$Product = 'soha-cloud',
	[string]$name = 'soha_cloud_premium_plan'
)
Write-Host "Image Creation in Process - Plan Info - soha | soha_cloud_premium_plan"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: soha Offer:soha-cloud Sku:soha_cloud_premium_plan Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_so-so-soha_cloud_standard_plan
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'soha',
	[string]$Offer = 'soha-cloud',
	[string]$Skus = 'soha_cloud_standard_plan',
	[string]$version =  'latest',
	[string]$Product = 'soha-cloud',
	[string]$name = 'soha_cloud_standard_plan'
)
Write-Host "Image Creation in Process - Plan Info - soha | soha_cloud_standard_plan"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: soha Offer:soha-cloud Sku:soha_cloud_standard_plan Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_so-so-soha_cloud_vpn
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'soha',
	[string]$Offer = 'soha-cloud',
	[string]$Skus = 'soha_cloud_vpn',
	[string]$version =  'latest',
	[string]$Product = 'soha-cloud',
	[string]$name = 'soha_cloud_vpn'
)
Write-Host "Image Creation in Process - Plan Info - soha | soha_cloud_vpn"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: soha Offer:soha-cloud Sku:soha_cloud_vpn Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_so-so-20150603
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'solanolabs',
	[string]$Offer = 'solano-ci-private-beta',
	[string]$Skus = '20150603',
	[string]$version =  'latest',
	[string]$Product = 'solano-ci-private-beta',
	[string]$name = '20150603'
)
Write-Host "Image Creation in Process - Plan Info - solanolabs | 20150603"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: solanolabs Offer:solano-ci-private-beta Sku:20150603 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_so-so-dpa-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'solarwinds',
	[string]$Offer = 'solarwinds-database-performance-analyzer',
	[string]$Skus = 'dpa-byol',
	[string]$version =  'latest',
	[string]$Product = 'solarwinds-database-performance-analyzer',
	[string]$name = 'dpa-byol'
)
Write-Host "Image Creation in Process - Plan Info - solarwinds | dpa-byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: solarwinds Offer:solarwinds-database-performance-analyzer Sku:dpa-byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_so-so-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'sophos',
	[string]$Offer = 'sophos-xg',
	[string]$Skus = 'byol',
	[string]$version =  'latest',
	[string]$Product = 'sophos-xg',
	[string]$name = 'byol'
)
Write-Host "Image Creation in Process - Plan Info - sophos | byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: sophos Offer:sophos-xg Sku:byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_sp-sp-sc-qs
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'spacecurve',
	[string]$Offer = 'spacecurve-quickstart',
	[string]$Skus = 'sc-qs',
	[string]$version =  'latest',
	[string]$Product = 'spacecurve-quickstart',
	[string]$name = 'sc-qs'
)
Write-Host "Image Creation in Process - Plan Info - spacecurve | sc-qs"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: spacecurve Offer:spacecurve-quickstart Sku:sc-qs Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_sp-sp-spagobi_ubuntu_14_04_lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'spagobi',
	[string]$Offer = 'spagobi',
	[string]$Skus = 'spagobi_ubuntu_14_04_lts',
	[string]$version =  'latest',
	[string]$Product = 'spagobi',
	[string]$name = 'spagobi_ubuntu_14_04_lts'
)
Write-Host "Image Creation in Process - Plan Info - spagobi | spagobi_ubuntu_14_04_lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: spagobi Offer:spagobi Sku:spagobi_ubuntu_14_04_lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_sp-gl-g-series-standard-hourly
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'sphere3d',
	[string]$Offer = 'glassware',
	[string]$Skus = 'g-series-standard-hourly',
	[string]$version =  'latest',
	[string]$Product = 'glassware',
	[string]$name = 'g-series-standard-hourly'
)
Write-Host "Image Creation in Process - Plan Info - sphere3d | g-series-standard-hourly"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: sphere3d Offer:glassware Sku:g-series-standard-hourly Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_sp-sn-snapbyol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'sphere3d',
	[string]$Offer = 'snapcloud-byol',
	[string]$Skus = 'snapbyol',
	[string]$version =  'latest',
	[string]$Product = 'snapcloud-byol',
	[string]$name = 'snapbyol'
)
Write-Host "Image Creation in Process - Plan Info - sphere3d | snapbyol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: sphere3d Offer:snapcloud-byol Sku:snapbyol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_sp-sn-snapcloud-standard
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'sphere3d',
	[string]$Offer = 'snapcloud-standard',
	[string]$Skus = 'snapcloud-standard',
	[string]$version =  'latest',
	[string]$Product = 'snapcloud-standard',
	[string]$name = 'snapcloud-standard'
)
Write-Host "Image Creation in Process - Plan Info - sphere3d | snapcloud-standard"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: sphere3d Offer:snapcloud-standard Sku:snapcloud-standard Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_sp-sp-splunk-on-ubuntu-14-04-lts
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'splunk',
	[string]$Offer = 'splunk-enterprise-base-image',
	[string]$Skus = 'splunk-on-ubuntu-14-04-lts',
	[string]$version =  'latest',
	[string]$Product = 'splunk-enterprise-base-image',
	[string]$name = 'splunk-on-ubuntu-14-04-lts'
)
Write-Host "Image Creation in Process - Plan Info - splunk | splunk-on-ubuntu-14-04-lts"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: splunk Offer:splunk-enterprise-base-image Sku:splunk-on-ubuntu-14-04-lts Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_sq-sq-eval
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'sqlsentry',
	[string]$Offer = 'sqlsentryplatform',
	[string]$Skus = 'eval',
	[string]$version =  'latest',
	[string]$Product = 'sqlsentryplatform',
	[string]$name = 'eval'
)
Write-Host "Image Creation in Process - Plan Info - sqlsentry | eval"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: sqlsentry Offer:sqlsentryplatform Sku:eval Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_st-ac-stackato36
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'stackato-platform-as-a-service',
	[string]$Offer = 'activestate-stackato',
	[string]$Skus = 'stackato36',
	[string]$version =  'latest',
	[string]$Product = 'activestate-stackato',
	[string]$name = 'stackato36'
)
Write-Host "Image Creation in Process - Plan Info - stackato-platform-as-a-service | stackato36"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: stackato-platform-as-a-service Offer:activestate-stackato Sku:stackato36 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_st-st-scu-1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'stackstorm',
	[string]$Offer = 'stackstorm-2015-1',
	[string]$Skus = 'scu-1',
	[string]$version =  'latest',
	[string]$Product = 'stackstorm-2015-1',
	[string]$name = 'scu-1'
)
Write-Host "Image Creation in Process - Plan Info - stackstorm | scu-1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: stackstorm Offer:stackstorm-2015-1 Sku:scu-1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_st-st-starwindbyol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'starwind',
	[string]$Offer = 'starwindvirtualsan',
	[string]$Skus = 'starwindbyol',
	[string]$version =  'latest',
	[string]$Product = 'starwindvirtualsan',
	[string]$name = 'starwindbyol'
)
Write-Host "Image Creation in Process - Plan Info - starwind | starwindbyol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: starwind Offer:starwindvirtualsan Sku:starwindbyol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_st-st-starwindperhour
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'starwind',
	[string]$Offer = 'starwindvirtualsan',
	[string]$Skus = 'starwindperhour',
	[string]$version =  'latest',
	[string]$Product = 'starwindvirtualsan',
	[string]$name = 'starwindperhour'
)
Write-Host "Image Creation in Process - Plan Info - starwind | starwindperhour"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: starwind Offer:starwindvirtualsan Sku:starwindperhour Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_st-st-starwindvtl
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'starwind',
	[string]$Offer = 'starwindvtl',
	[string]$Skus = 'starwindvtl',
	[string]$version =  'latest',
	[string]$Product = 'starwindvtl',
	[string]$name = 'starwindvtl'
)
Write-Host "Image Creation in Process - Plan Info - starwind | starwindvtl"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: starwind Offer:starwindvtl Sku:starwindvtl Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_st-st-steelhive_carbon_10_users
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'steelhive',
	[string]$Offer = 'steelhive_carbon',
	[string]$Skus = 'steelhive_carbon_10_users',
	[string]$version =  'latest',
	[string]$Product = 'steelhive_carbon',
	[string]$name = 'steelhive_carbon_10_users'
)
Write-Host "Image Creation in Process - Plan Info - steelhive | steelhive_carbon_10_users"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: steelhive Offer:steelhive_carbon Sku:steelhive_carbon_10_users Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_st-st-steelhive_carbon_15plus_users
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'steelhive',
	[string]$Offer = 'steelhive_carbon',
	[string]$Skus = 'steelhive_carbon_15plus_users',
	[string]$version =  'latest',
	[string]$Product = 'steelhive_carbon',
	[string]$name = 'steelhive_carbon_15plus_users'
)
Write-Host "Image Creation in Process - Plan Info - steelhive | steelhive_carbon_15plus_users"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: steelhive Offer:steelhive_carbon Sku:steelhive_carbon_15plus_users Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_st-st-steelhive_carbon_5_users
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'steelhive',
	[string]$Offer = 'steelhive_carbon',
	[string]$Skus = 'steelhive_carbon_5_users',
	[string]$version =  'latest',
	[string]$Product = 'steelhive_carbon',
	[string]$name = 'steelhive_carbon_5_users'
)
Write-Host "Image Creation in Process - Plan Info - steelhive | steelhive_carbon_5_users"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: steelhive Offer:steelhive_carbon Sku:steelhive_carbon_5_users Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_st-st-hourly_iscsi
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'stonefly',
	[string]$Offer = 'stonefly-cloud-drive',
	[string]$Skus = 'hourly_iscsi',
	[string]$version =  'latest',
	[string]$Product = 'stonefly-cloud-drive',
	[string]$name = 'hourly_iscsi'
)
Write-Host "Image Creation in Process - Plan Info - stonefly | hourly_iscsi"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: stonefly Offer:stonefly-cloud-drive Sku:hourly_iscsi Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_st-st-hourly_iscsi_nas_plus_the_works
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'stonefly',
	[string]$Offer = 'stonefly-cloud-drive',
	[string]$Skus = 'hourly_iscsi_nas_plus_the_works',
	[string]$version =  'latest',
	[string]$Product = 'stonefly-cloud-drive',
	[string]$name = 'hourly_iscsi_nas_plus_the_works'
)
Write-Host "Image Creation in Process - Plan Info - stonefly | hourly_iscsi_nas_plus_the_works"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: stonefly Offer:stonefly-cloud-drive Sku:hourly_iscsi_nas_plus_the_works Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_st-st-hourly_nas
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'stonefly',
	[string]$Offer = 'stonefly-cloud-drive',
	[string]$Skus = 'hourly_nas',
	[string]$version =  'latest',
	[string]$Product = 'stonefly-cloud-drive',
	[string]$name = 'hourly_nas'
)
Write-Host "Image Creation in Process - Plan Info - stonefly | hourly_nas"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: stonefly Offer:stonefly-cloud-drive Sku:hourly_nas Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_st-st-byol-single-instance
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'stormshield',
	[string]$Offer = 'stormshield-network-security-for-cloud',
	[string]$Skus = 'byol-single-instance',
	[string]$version =  'latest',
	[string]$Product = 'stormshield-network-security-for-cloud',
	[string]$name = 'byol-single-instance'
)
Write-Host "Image Creation in Process - Plan Info - stormshield | byol-single-instance"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: stormshield Offer:stormshield-network-security-for-cloud Sku:byol-single-instance Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_st-st-byol-single-instance
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'stormshield',
	[string]$Offer = 'stormshield-network-security-for-cloud-xl',
	[string]$Skus = 'byol-single-instance',
	[string]$version =  'latest',
	[string]$Product = 'stormshield-network-security-for-cloud-xl',
	[string]$name = 'byol-single-instance'
)
Write-Host "Image Creation in Process - Plan Info - stormshield | byol-single-instance"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: stormshield Offer:stormshield-network-security-for-cloud-xl Sku:byol-single-instance Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_st-st-storreduce-large
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'storreduce',
	[string]$Offer = 'storreduce',
	[string]$Skus = 'storreduce-large',
	[string]$version =  'latest',
	[string]$Product = 'storreduce',
	[string]$name = 'storreduce-large'
)
Write-Host "Image Creation in Process - Plan Info - storreduce | storreduce-large"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: storreduce Offer:storreduce Sku:storreduce-large Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_st-st-storreduce-medium
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'storreduce',
	[string]$Offer = 'storreduce',
	[string]$Skus = 'storreduce-medium',
	[string]$version =  'latest',
	[string]$Product = 'storreduce',
	[string]$name = 'storreduce-medium'
)
Write-Host "Image Creation in Process - Plan Info - storreduce | storreduce-medium"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: storreduce Offer:storreduce Sku:storreduce-medium Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_st-st-storreduce-xlarge
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'storreduce',
	[string]$Offer = 'storreduce',
	[string]$Skus = 'storreduce-xlarge',
	[string]$version =  'latest',
	[string]$Product = 'storreduce',
	[string]$name = 'storreduce-xlarge'
)
Write-Host "Image Creation in Process - Plan Info - storreduce | storreduce-xlarge"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: storreduce Offer:storreduce Sku:storreduce-xlarge Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_st-st-streamsets-data-collector-for-hadoop
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'streamsets',
	[string]$Offer = 'streamsets-data-collector',
	[string]$Skus = 'streamsets-data-collector-for-hadoop',
	[string]$version =  'latest',
	[string]$Product = 'streamsets-data-collector',
	[string]$name = 'streamsets-data-collector-for-hadoop'
)
Write-Host "Image Creation in Process - Plan Info - streamsets | streamsets-data-collector-for-hadoop"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: streamsets Offer:streamsets-data-collector Sku:streamsets-data-collector-for-hadoop Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_su-su-sumologic-collector-windows-vm
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'sumologic',
	[string]$Offer = 'sumologic-collector-windows-vm',
	[string]$Skus = 'sumologic-collector-windows-vm',
	[string]$version =  'latest',
	[string]$Product = 'sumologic-collector-windows-vm',
	[string]$name = 'sumologic-collector-windows-vm'
)
Write-Host "Image Creation in Process - Plan Info - sumologic | sumologic-collector-windows-vm"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: sumologic Offer:sumologic-collector-windows-vm Sku:sumologic-collector-windows-vm Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_su-su-sunview_changegear_change_management_byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'sunview-software',
	[string]$Offer = 'sunview_changegear_change_management',
	[string]$Skus = 'sunview_changegear_change_management_byol',
	[string]$version =  'latest',
	[string]$Product = 'sunview_changegear_change_management',
	[string]$name = 'sunview_changegear_change_management_byol'
)
Write-Host "Image Creation in Process - Plan Info - sunview-software | sunview_changegear_change_management_byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: sunview-software Offer:sunview_changegear_change_management Sku:sunview_changegear_change_management_byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_su-su-sunview-software-chnage-gear-service-desk
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'sunview-software',
	[string]$Offer = 'sunview_changegear_service_desk',
	[string]$Skus = 'sunview-software-chnage-gear-service-desk',
	[string]$version =  'latest',
	[string]$Product = 'sunview_changegear_service_desk',
	[string]$name = 'sunview-software-chnage-gear-service-desk'
)
Write-Host "Image Creation in Process - Plan Info - sunview-software | sunview-software-chnage-gear-service-desk"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: sunview-software Offer:sunview_changegear_service_desk Sku:sunview-software-chnage-gear-service-desk Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfolin_SU-op-13.2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'SUSE',
	[string]$Offer = 'openSUSE',
	[string]$Skus = '13.2',
	[string]$version =  'latest',
	[string]$Product = 'openSUSE',
	[string]$name = '13.2'
)
Write-Host "Image Creation in Process - No Plan Info Linux - SUSE | 13.2"
$script:VirtualMachine = $script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: SUSE Offer:openSUSE Sku:13.2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfolin_SU-op-42.1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'SUSE',
	[string]$Offer = 'openSUSE-Leap',
	[string]$Skus = '42.1',
	[string]$version =  'latest',
	[string]$Product = 'openSUSE-Leap',
	[string]$name = '42.1'
)
Write-Host "Image Creation in Process - No Plan Info Linux - SUSE | 42.1"
$script:VirtualMachine = $script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: SUSE Offer:openSUSE-Leap Sku:42.1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfolin_SU-SL-11-SP4
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'SUSE',
	[string]$Offer = 'SLES',
	[string]$Skus = '11-SP4',
	[string]$version =  'latest',
	[string]$Product = 'SLES',
	[string]$name = '11-SP4'
)
Write-Host "Image Creation in Process - No Plan Info Linux - SUSE | 11-SP4"
$script:VirtualMachine = $script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: SUSE Offer:SLES Sku:11-SP4 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfolin_SU-SL-12-SP1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'SUSE',
	[string]$Offer = 'SLES',
	[string]$Skus = '12-SP1',
	[string]$version =  'latest',
	[string]$Product = 'SLES',
	[string]$name = '12-SP1'
)
Write-Host "Image Creation in Process - No Plan Info Linux - SUSE | 12-SP1"
$script:VirtualMachine = $script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: SUSE Offer:SLES Sku:12-SP1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfolin_SU-SL-12
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'SUSE',
	[string]$Offer = 'SLES-HPC',
	[string]$Skus = '12',
	[string]$version =  'latest',
	[string]$Product = 'SLES-HPC',
	[string]$name = '12'
)
Write-Host "Image Creation in Process - No Plan Info Linux - SUSE | 12"
$script:VirtualMachine = $script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: SUSE Offer:SLES-HPC Sku:12 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfolin_SU-SL-12-SP1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'SUSE',
	[string]$Offer = 'SLES-HPC',
	[string]$Skus = '12-SP1',
	[string]$version =  'latest',
	[string]$Product = 'SLES-HPC',
	[string]$name = '12-SP1'
)
Write-Host "Image Creation in Process - No Plan Info Linux - SUSE | 12-SP1"
$script:VirtualMachine = $script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: SUSE Offer:SLES-HPC Sku:12-SP1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfolin_SU-SL-12
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'SUSE',
	[string]$Offer = 'SLES-HPC-Priority',
	[string]$Skus = '12',
	[string]$version =  'latest',
	[string]$Product = 'SLES-HPC-Priority',
	[string]$name = '12'
)
Write-Host "Image Creation in Process - No Plan Info Linux - SUSE | 12"
$script:VirtualMachine = $script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: SUSE Offer:SLES-HPC-Priority Sku:12 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfolin_SU-SL-12-SP1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'SUSE',
	[string]$Offer = 'SLES-HPC-Priority',
	[string]$Skus = '12-SP1',
	[string]$version =  'latest',
	[string]$Product = 'SLES-HPC-Priority',
	[string]$name = '12-SP1'
)
Write-Host "Image Creation in Process - No Plan Info Linux - SUSE | 12-SP1"
$script:VirtualMachine = $script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: SUSE Offer:SLES-HPC-Priority Sku:12-SP1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfolin_SU-SL-11-SP4
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'SUSE',
	[string]$Offer = 'SLES-Priority',
	[string]$Skus = '11-SP4',
	[string]$version =  'latest',
	[string]$Product = 'SLES-Priority',
	[string]$name = '11-SP4'
)
Write-Host "Image Creation in Process - No Plan Info Linux - SUSE | 11-SP4"
$script:VirtualMachine = $script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: SUSE Offer:SLES-Priority Sku:11-SP4 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfolin_SU-SL-12-SP1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'SUSE',
	[string]$Offer = 'SLES-Priority',
	[string]$Skus = '12-SP1',
	[string]$version =  'latest',
	[string]$Product = 'SLES-Priority',
	[string]$name = '12-SP1'
)
Write-Host "Image Creation in Process - No Plan Info Linux - SUSE | 12-SP1"
$script:VirtualMachine = $script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: SUSE Offer:SLES-Priority Sku:12-SP1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfolin_SU-SL-11-SP3
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'SUSE',
	[string]$Offer = 'SLES-SAPCAL',
	[string]$Skus = '11-SP3',
	[string]$version =  'latest',
	[string]$Product = 'SLES-SAPCAL',
	[string]$name = '11-SP3'
)
Write-Host "Image Creation in Process - No Plan Info Linux - SUSE | 11-SP3"
$script:VirtualMachine = $script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: SUSE Offer:SLES-SAPCAL Sku:11-SP3 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfolin_SU-SL-11-SP4
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'SUSE',
	[string]$Offer = 'SLES-SAPCAL',
	[string]$Skus = '11-SP4',
	[string]$version =  'latest',
	[string]$Product = 'SLES-SAPCAL',
	[string]$name = '11-SP4'
)
Write-Host "Image Creation in Process - No Plan Info Linux - SUSE | 11-SP4"
$script:VirtualMachine = $script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: SUSE Offer:SLES-SAPCAL Sku:11-SP4 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfolin_SU-SL-12-SP1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'SUSE',
	[string]$Offer = 'SLES-SAPCAL',
	[string]$Skus = '12-SP1',
	[string]$version =  'latest',
	[string]$Product = 'SLES-SAPCAL',
	[string]$name = '12-SP1'
)
Write-Host "Image Creation in Process - No Plan Info Linux - SUSE | 12-SP1"
$script:VirtualMachine = $script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: SUSE Offer:SLES-SAPCAL Sku:12-SP1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfolin_SU-SU-SMT
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'SUSE',
	[string]$Offer = 'SUSE-Infrastructure',
	[string]$Skus = 'SMT',
	[string]$version =  'latest',
	[string]$Product = 'SUSE-Infrastructure',
	[string]$name = 'SMT'
)
Write-Host "Image Creation in Process - No Plan Info Linux - SUSE | SMT"
$script:VirtualMachine = $script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: SUSE Offer:SUSE-Infrastructure Sku:SMT Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfolin_su-sl-11-sp4
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'suse-byos',
	[string]$Offer = 'sles-byos',
	[string]$Skus = '11-sp4',
	[string]$version =  'latest',
	[string]$Product = 'sles-byos',
	[string]$name = '11-sp4'
)
Write-Host "Image Creation in Process - No Plan Info Linux - suse-byos | 11-sp4"
$script:VirtualMachine = $script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: suse-byos Offer:sles-byos Sku:11-sp4 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfolin_su-sl-12-sp1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'suse-byos',
	[string]$Offer = 'sles-byos',
	[string]$Skus = '12-sp1',
	[string]$version =  'latest',
	[string]$Product = 'sles-byos',
	[string]$name = '12-sp1'
)
Write-Host "Image Creation in Process - No Plan Info Linux - suse-byos | 12-sp1"
$script:VirtualMachine = $script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: suse-byos Offer:sles-byos Sku:12-sp1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimagenoinfolin_su-sl-12-sp1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'suse-byos',
	[string]$Offer = 'sles-for-sap-byos',
	[string]$Skus = '12-sp1',
	[string]$version =  'latest',
	[string]$Product = 'sles-for-sap-byos',
	[string]$name = '12-sp1'
)
Write-Host "Image Creation in Process - No Plan Info Linux - suse-byos | 12-sp1"
$script:VirtualMachine = $script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: suse-byos Offer:sles-for-sap-byos Sku:12-sp1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_sy-az-syncfusionbigdataplatform
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'syncfusionbigdataplatfor',
	[string]$Offer = 'azure-automation',
	[string]$Skus = 'syncfusionbigdataplatform',
	[string]$version =  'latest',
	[string]$Product = 'azure-automation',
	[string]$name = 'syncfusionbigdataplatform'
)
Write-Host "Image Creation in Process - Plan Info - syncfusionbigdataplatfor | syncfusionbigdataplatform"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: syncfusionbigdataplatfor Offer:azure-automation Sku:syncfusionbigdataplatform Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ta-ta-bring-your-own-license
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'tableau',
	[string]$Offer = 'tableau-server',
	[string]$Skus = 'bring-your-own-license',
	[string]$version =  'latest',
	[string]$Product = 'tableau-server',
	[string]$name = 'bring-your-own-license'
)
Write-Host "Image Creation in Process - Plan Info - tableau | bring-your-own-license"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: tableau Offer:tableau-server Sku:bring-your-own-license Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ta-ta-tactic-workflow-v001
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'tactic',
	[string]$Offer = 'tactic-workflow-v001',
	[string]$Skus = 'tactic-workflow-v001',
	[string]$version =  'latest',
	[string]$Product = 'tactic-workflow-v001',
	[string]$name = 'tactic-workflow-v001'
)
Write-Host "Image Creation in Process - Plan Info - tactic | tactic-workflow-v001"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: tactic Offer:tactic-workflow-v001 Sku:tactic-workflow-v001 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ta-cl-talon-azurestorage-00005tbh
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'talon',
	[string]$Offer = 'cloudfast-azurefiles',
	[string]$Skus = 'talon-azurestorage-00005tbh',
	[string]$version =  'latest',
	[string]$Product = 'cloudfast-azurefiles',
	[string]$name = 'talon-azurestorage-00005tbh'
)
Write-Host "Image Creation in Process - Plan Info - talon | talon-azurestorage-00005tbh"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: talon Offer:cloudfast-azurefiles Sku:talon-azurestorage-00005tbh Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ta-cl-talon-azurestorage-00010tbh
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'talon',
	[string]$Offer = 'cloudfast-azurefiles',
	[string]$Skus = 'talon-azurestorage-00010tbh',
	[string]$version =  'latest',
	[string]$Product = 'cloudfast-azurefiles',
	[string]$name = 'talon-azurestorage-00010tbh'
)
Write-Host "Image Creation in Process - Plan Info - talon | talon-azurestorage-00010tbh"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: talon Offer:cloudfast-azurefiles Sku:talon-azurestorage-00010tbh Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ta-cl-talon-azurestorage-00015tbh
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'talon',
	[string]$Offer = 'cloudfast-azurefiles',
	[string]$Skus = 'talon-azurestorage-00015tbh',
	[string]$version =  'latest',
	[string]$Product = 'cloudfast-azurefiles',
	[string]$name = 'talon-azurestorage-00015tbh'
)
Write-Host "Image Creation in Process - Plan Info - talon | talon-azurestorage-00015tbh"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: talon Offer:cloudfast-azurefiles Sku:talon-azurestorage-00015tbh Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ta-cl-talon-azurestorage-00020tbh
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'talon',
	[string]$Offer = 'cloudfast-azurefiles',
	[string]$Skus = 'talon-azurestorage-00020tbh',
	[string]$version =  'latest',
	[string]$Product = 'cloudfast-azurefiles',
	[string]$name = 'talon-azurestorage-00020tbh'
)
Write-Host "Image Creation in Process - Plan Info - talon | talon-azurestorage-00020tbh"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: talon Offer:cloudfast-azurefiles Sku:talon-azurestorage-00020tbh Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ta-cl-talon-azurestorage-00025tbh
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'talon',
	[string]$Offer = 'cloudfast-azurefiles',
	[string]$Skus = 'talon-azurestorage-00025tbh',
	[string]$version =  'latest',
	[string]$Product = 'cloudfast-azurefiles',
	[string]$name = 'talon-azurestorage-00025tbh'
)
Write-Host "Image Creation in Process - Plan Info - talon | talon-azurestorage-00025tbh"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: talon Offer:cloudfast-azurefiles Sku:talon-azurestorage-00025tbh Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ta-cl-talon_cloudfast_core
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'talon',
	[string]$Offer = 'cloudfast-for-azure-files',
	[string]$Skus = 'talon_cloudfast_core',
	[string]$version =  'latest',
	[string]$Product = 'cloudfast-for-azure-files',
	[string]$name = 'talon_cloudfast_core'
)
Write-Host "Image Creation in Process - Plan Info - talon | talon_cloudfast_core"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: talon Offer:cloudfast-for-azure-files Sku:talon_cloudfast_core Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ta-cl-talon-storsimple-00025tbh
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'talon',
	[string]$Offer = 'cloudfast-storsimple',
	[string]$Skus = 'talon-storsimple-00025tbh',
	[string]$version =  'latest',
	[string]$Product = 'cloudfast-storsimple',
	[string]$name = 'talon-storsimple-00025tbh'
)
Write-Host "Image Creation in Process - Plan Info - talon | talon-storsimple-00025tbh"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: talon Offer:cloudfast-storsimple Sku:talon-storsimple-00025tbh Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ta-cl-talon-storsimple-00050tbh
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'talon',
	[string]$Offer = 'cloudfast-storsimple',
	[string]$Skus = 'talon-storsimple-00050tbh',
	[string]$version =  'latest',
	[string]$Product = 'cloudfast-storsimple',
	[string]$name = 'talon-storsimple-00050tbh'
)
Write-Host "Image Creation in Process - Plan Info - talon | talon-storsimple-00050tbh"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: talon Offer:cloudfast-storsimple Sku:talon-storsimple-00050tbh Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ta-cl-talon-storsimple-00100tbh
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'talon',
	[string]$Offer = 'cloudfast-storsimple',
	[string]$Skus = 'talon-storsimple-00100tbh',
	[string]$version =  'latest',
	[string]$Product = 'cloudfast-storsimple',
	[string]$name = 'talon-storsimple-00100tbh'
)
Write-Host "Image Creation in Process - Plan Info - talon | talon-storsimple-00100tbh"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: talon Offer:cloudfast-storsimple Sku:talon-storsimple-00100tbh Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ta-cl-talon-storsimple-00200tbh
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'talon',
	[string]$Offer = 'cloudfast-storsimple',
	[string]$Skus = 'talon-storsimple-00200tbh',
	[string]$version =  'latest',
	[string]$Product = 'cloudfast-storsimple',
	[string]$name = 'talon-storsimple-00200tbh'
)
Write-Host "Image Creation in Process - Plan Info - talon | talon-storsimple-00200tbh"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: talon Offer:cloudfast-storsimple Sku:talon-storsimple-00200tbh Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ta-cl-talon-storsimple-00300tbh
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'talon',
	[string]$Offer = 'cloudfast-storsimple',
	[string]$Skus = 'talon-storsimple-00300tbh',
	[string]$version =  'latest',
	[string]$Product = 'cloudfast-storsimple',
	[string]$name = 'talon-storsimple-00300tbh'
)
Write-Host "Image Creation in Process - Plan Info - talon | talon-storsimple-00300tbh"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: talon Offer:cloudfast-storsimple Sku:talon-storsimple-00300tbh Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ta-cl-talon-storsimple-00400tbh
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'talon',
	[string]$Offer = 'cloudfast-storsimple',
	[string]$Skus = 'talon-storsimple-00400tbh',
	[string]$version =  'latest',
	[string]$Product = 'cloudfast-storsimple',
	[string]$name = 'talon-storsimple-00400tbh'
)
Write-Host "Image Creation in Process - Plan Info - talon | talon-storsimple-00400tbh"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: talon Offer:cloudfast-storsimple Sku:talon-storsimple-00400tbh Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ta-cl-talon-storsimple-00500tbh
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'talon',
	[string]$Offer = 'cloudfast-storsimple',
	[string]$Skus = 'talon-storsimple-00500tbh',
	[string]$version =  'latest',
	[string]$Product = 'cloudfast-storsimple',
	[string]$name = 'talon-storsimple-00500tbh'
)
Write-Host "Image Creation in Process - Plan Info - talon | talon-storsimple-00500tbh"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: talon Offer:cloudfast-storsimple Sku:talon-storsimple-00500tbh Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ta-cl-talon-storsimple-00600tbh
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'talon',
	[string]$Offer = 'cloudfast-storsimple',
	[string]$Skus = 'talon-storsimple-00600tbh',
	[string]$version =  'latest',
	[string]$Product = 'cloudfast-storsimple',
	[string]$name = 'talon-storsimple-00600tbh'
)
Write-Host "Image Creation in Process - Plan Info - talon | talon-storsimple-00600tbh"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: talon Offer:cloudfast-storsimple Sku:talon-storsimple-00600tbh Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ta-cl-talon-storsimple-00700tbh
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'talon',
	[string]$Offer = 'cloudfast-storsimple',
	[string]$Skus = 'talon-storsimple-00700tbh',
	[string]$version =  'latest',
	[string]$Product = 'cloudfast-storsimple',
	[string]$name = 'talon-storsimple-00700tbh'
)
Write-Host "Image Creation in Process - Plan Info - talon | talon-storsimple-00700tbh"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: talon Offer:cloudfast-storsimple Sku:talon-storsimple-00700tbh Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ta-cl-talon-storsimple-00800tbh
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'talon',
	[string]$Offer = 'cloudfast-storsimple',
	[string]$Skus = 'talon-storsimple-00800tbh',
	[string]$version =  'latest',
	[string]$Product = 'cloudfast-storsimple',
	[string]$name = 'talon-storsimple-00800tbh'
)
Write-Host "Image Creation in Process - Plan Info - talon | talon-storsimple-00800tbh"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: talon Offer:cloudfast-storsimple Sku:talon-storsimple-00800tbh Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ta-cl-talon-storsimple-00900tbh
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'talon',
	[string]$Offer = 'cloudfast-storsimple',
	[string]$Skus = 'talon-storsimple-00900tbh',
	[string]$version =  'latest',
	[string]$Product = 'cloudfast-storsimple',
	[string]$name = 'talon-storsimple-00900tbh'
)
Write-Host "Image Creation in Process - Plan Info - talon | talon-storsimple-00900tbh"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: talon Offer:cloudfast-storsimple Sku:talon-storsimple-00900tbh Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ta-cl-talon-storsimple-01000tbh
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'talon',
	[string]$Offer = 'cloudfast-storsimple',
	[string]$Skus = 'talon-storsimple-01000tbh',
	[string]$version =  'latest',
	[string]$Product = 'cloudfast-storsimple',
	[string]$name = 'talon-storsimple-01000tbh'
)
Write-Host "Image Creation in Process - Plan Info - talon | talon-storsimple-01000tbh"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: talon Offer:cloudfast-storsimple Sku:talon-storsimple-01000tbh Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ta-ta-targit-2014-byol-sql2014std
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'targit',
	[string]$Offer = 'targit-decision-suite',
	[string]$Skus = 'targit-2014-byol-sql2014std',
	[string]$version =  'latest',
	[string]$Product = 'targit-decision-suite',
	[string]$name = 'targit-2014-byol-sql2014std'
)
Write-Host "Image Creation in Process - Plan Info - targit | targit-2014-byol-sql2014std"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: targit Offer:targit-decision-suite Sku:targit-2014-byol-sql2014std Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ta-cr-free
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'tavendo',
	[string]$Offer = 'crossbar_on_azure_ubuntu1404',
	[string]$Skus = 'free',
	[string]$version =  'latest',
	[string]$Product = 'crossbar_on_azure_ubuntu1404',
	[string]$name = 'free'
)
Write-Host "Image Creation in Process - Plan Info - tavendo | free"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: tavendo Offer:crossbar_on_azure_ubuntu1404 Sku:free Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_te-ap-appserver-io-pe
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'techdivision',
	[string]$Offer = 'appserver-io-pe',
	[string]$Skus = 'appserver-io-pe',
	[string]$version =  'latest',
	[string]$Product = 'appserver-io-pe',
	[string]$name = 'appserver-io-pe'
)
Write-Host "Image Creation in Process - Plan Info - techdivision | appserver-io-pe"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: techdivision Offer:appserver-io-pe Sku:appserver-io-pe Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_te-fr-free
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'telepat',
	[string]$Offer = 'free',
	[string]$Skus = 'free',
	[string]$version =  'latest',
	[string]$Product = 'free',
	[string]$name = 'free'
)
Write-Host "Image Creation in Process - Plan Info - telepat | free"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: telepat Offer:free Sku:free Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_te-te-serv-nes-byol-azure
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'tenable',
	[string]$Offer = 'tenable-nessus-byol',
	[string]$Skus = 'serv-nes-byol-azure',
	[string]$version =  'latest',
	[string]$Product = 'tenable-nessus-byol',
	[string]$name = 'serv-nes-byol-azure'
)
Write-Host "Image Creation in Process - Plan Info - tenable | serv-nes-byol-azure"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: tenable Offer:tenable-nessus-byol Sku:serv-nes-byol-azure Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_te-te-byol-single-instance
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'tenable',
	[string]$Offer = 'tenable-nessus-professional',
	[string]$Skus = 'byol-single-instance',
	[string]$version =  'latest',
	[string]$Product = 'tenable-nessus-professional',
	[string]$name = 'byol-single-instance'
)
Write-Host "Image Creation in Process - Plan Info - tenable | byol-single-instance"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: tenable Offer:tenable-nessus-professional Sku:byol-single-instance Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_te-we-websql-server-x64-hourly
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'tentity',
	[string]$Offer = 'websql-server',
	[string]$Skus = 'websql-server-x64-hourly',
	[string]$version =  'latest',
	[string]$Product = 'websql-server',
	[string]$name = 'websql-server-x64-hourly'
)
Write-Host "Image Creation in Process - Plan Info - tentity | websql-server-x64-hourly"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: tentity Offer:websql-server Sku:websql-server-x64-hourly Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_th-de-deadline-single-vm-linux
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'thinkboxsoftware',
	[string]$Offer = 'deadline-single-vm',
	[string]$Skus = 'deadline-single-vm-linux',
	[string]$version =  'latest',
	[string]$Product = 'deadline-single-vm',
	[string]$name = 'deadline-single-vm-linux'
)
Write-Host "Image Creation in Process - Plan Info - thinkboxsoftware | deadline-single-vm-linux"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: thinkboxsoftware Offer:deadline-single-vm Sku:deadline-single-vm-linux Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_th-de-deadline-single-vm-windows
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'thinkboxsoftware',
	[string]$Offer = 'deadline-single-vm',
	[string]$Skus = 'deadline-single-vm-windows',
	[string]$version =  'latest',
	[string]$Product = 'deadline-single-vm',
	[string]$name = 'deadline-single-vm-windows'
)
Write-Host "Image Creation in Process - Plan Info - thinkboxsoftware | deadline-single-vm-windows"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: thinkboxsoftware Offer:deadline-single-vm Sku:deadline-single-vm-windows Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_th-de-deadline-repository-7-2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'thinkboxsoftware',
	[string]$Offer = 'deadline7-2',
	[string]$Skus = 'deadline-repository-7-2',
	[string]$version =  'latest',
	[string]$Product = 'deadline7-2',
	[string]$name = 'deadline-repository-7-2'
)
Write-Host "Image Creation in Process - Plan Info - thinkboxsoftware | deadline-repository-7-2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: thinkboxsoftware Offer:deadline7-2 Sku:deadline-repository-7-2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_th-de-deadline-slave-7-2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'thinkboxsoftware',
	[string]$Offer = 'deadline7-2',
	[string]$Skus = 'deadline-slave-7-2',
	[string]$version =  'latest',
	[string]$Product = 'deadline7-2',
	[string]$name = 'deadline-slave-7-2'
)
Write-Host "Image Creation in Process - Plan Info - thinkboxsoftware | deadline-slave-7-2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: thinkboxsoftware Offer:deadline7-2 Sku:deadline-slave-7-2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ti-gr-gs620-u14042
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'tibco-software',
	[string]$Offer = 'grid-server-engine',
	[string]$Skus = 'gs620-u14042',
	[string]$version =  'latest',
	[string]$Product = 'grid-server-engine',
	[string]$name = 'gs620-u14042'
)
Write-Host "Image Creation in Process - Plan Info - tibco-software | gs620-u14042"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: tibco-software Offer:grid-server-engine Sku:gs620-u14042 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ti-ba-linuxbackupasaservice
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'tig',
	[string]$Offer = 'backup-as-a-service',
	[string]$Skus = 'linuxbackupasaservice',
	[string]$version =  'latest',
	[string]$Product = 'backup-as-a-service',
	[string]$name = 'linuxbackupasaservice'
)
Write-Host "Image Creation in Process - Plan Info - tig | linuxbackupasaservice"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: tig Offer:backup-as-a-service Sku:linuxbackupasaservice Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ti-ba-windowsbackupasaservice
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'tig',
	[string]$Offer = 'backup-as-a-service',
	[string]$Skus = 'windowsbackupasaservice',
	[string]$version =  'latest',
	[string]$Product = 'backup-as-a-service',
	[string]$name = 'windowsbackupasaservice'
)
Write-Host "Image Creation in Process - Plan Info - tig | windowsbackupasaservice"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: tig Offer:backup-as-a-service Sku:windowsbackupasaservice Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_to-to-demonstration_account
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'topdesk',
	[string]$Offer = 'topdesk-demonstration',
	[string]$Skus = 'demonstration_account',
	[string]$version =  'latest',
	[string]$Product = 'topdesk-demonstration',
	[string]$name = 'demonstration_account'
)
Write-Host "Image Creation in Process - Plan Info - topdesk | demonstration_account"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: topdesk Offer:topdesk-demonstration Sku:demonstration_account Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_to-to-100_operator_license
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'topdesk',
	[string]$Offer = 'topdesk-itsm-software',
	[string]$Skus = '100_operator_license',
	[string]$version =  'latest',
	[string]$Product = 'topdesk-itsm-software',
	[string]$name = '100_operator_license'
)
Write-Host "Image Creation in Process - Plan Info - topdesk | 100_operator_license"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: topdesk Offer:topdesk-itsm-software Sku:100_operator_license Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_to-to-10_operator_license
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'topdesk',
	[string]$Offer = 'topdesk-itsm-software',
	[string]$Skus = '10_operator_license',
	[string]$version =  'latest',
	[string]$Product = 'topdesk-itsm-software',
	[string]$name = '10_operator_license'
)
Write-Host "Image Creation in Process - Plan Info - topdesk | 10_operator_license"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: topdesk Offer:topdesk-itsm-software Sku:10_operator_license Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_to-to-50_operator_license
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'topdesk',
	[string]$Offer = 'topdesk-itsm-software',
	[string]$Skus = '50_operator_license',
	[string]$version =  'latest',
	[string]$Product = 'topdesk-itsm-software',
	[string]$name = '50_operator_license'
)
Write-Host "Image Creation in Process - Plan Info - topdesk | 50_operator_license"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: topdesk Offer:topdesk-itsm-software Sku:50_operator_license Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_to-to-5_operator_license
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'topdesk',
	[string]$Offer = 'topdesk-itsm-software',
	[string]$Skus = '5_operator_license',
	[string]$version =  'latest',
	[string]$Product = 'topdesk-itsm-software',
	[string]$name = '5_operator_license'
)
Write-Host "Image Creation in Process - Plan Info - topdesk | 5_operator_license"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: topdesk Offer:topdesk-itsm-software Sku:5_operator_license Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_to-to-topdesk_service_management_byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'topdesk',
	[string]$Offer = 'topdesk_byol',
	[string]$Skus = 'topdesk_service_management_byol',
	[string]$version =  'latest',
	[string]$Product = 'topdesk_byol',
	[string]$name = 'topdesk_service_management_byol'
)
Write-Host "Image Creation in Process - Plan Info - topdesk | topdesk_service_management_byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: topdesk Offer:topdesk_byol Sku:topdesk_service_management_byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_to-sp-speedus_lite_free-ubuntu
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'torusware',
	[string]$Offer = 'speedus-lite-ubuntu',
	[string]$Skus = 'speedus_lite_free-ubuntu',
	[string]$version =  'latest',
	[string]$Product = 'speedus-lite-ubuntu',
	[string]$name = 'speedus_lite_free-ubuntu'
)
Write-Host "Image Creation in Process - Plan Info - torusware | speedus_lite_free-ubuntu"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: torusware Offer:speedus-lite-ubuntu Sku:speedus_lite_free-ubuntu Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_to-al-260-150-400
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'townsend-security',
	[string]$Offer = 'alliance-key-manager',
	[string]$Skus = '260-150-400',
	[string]$version =  'latest',
	[string]$Product = 'alliance-key-manager',
	[string]$name = '260-150-400'
)
Write-Host "Image Creation in Process - Plan Info - townsend-security | 260-150-400"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: townsend-security Offer:alliance-key-manager Sku:260-150-400 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_to-al-260-150-545
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'townsend-security',
	[string]$Offer = 'alliance-key-manager',
	[string]$Skus = '260-150-545',
	[string]$version =  'latest',
	[string]$Product = 'alliance-key-manager',
	[string]$name = '260-150-545'
)
Write-Host "Image Creation in Process - Plan Info - townsend-security | 260-150-545"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: townsend-security Offer:alliance-key-manager Sku:260-150-545 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_to-al-260-150-546
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'townsend-security',
	[string]$Offer = 'alliance-key-manager',
	[string]$Skus = '260-150-546',
	[string]$version =  'latest',
	[string]$Product = 'alliance-key-manager',
	[string]$name = '260-150-546'
)
Write-Host "Image Creation in Process - Plan Info - townsend-security | 260-150-546"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: townsend-security Offer:alliance-key-manager Sku:260-150-546 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_tr-sp-sprint_3_0
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'transvault',
	[string]$Offer = 'sprint_3_0',
	[string]$Skus = 'sprint_3_0',
	[string]$version =  'latest',
	[string]$Product = 'sprint_3_0',
	[string]$name = 'sprint_3_0'
)
Write-Host "Image Creation in Process - Plan Info - transvault | sprint_3_0"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: transvault Offer:sprint_3_0 Sku:sprint_3_0 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_tr-de-dxxn100d4v2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'trendmicro',
	[string]$Offer = 'deep-security-vm',
	[string]$Skus = 'dxxn100d4v2',
	[string]$version =  'latest',
	[string]$Product = 'deep-security-vm',
	[string]$name = 'dxxn100d4v2'
)
Write-Host "Image Creation in Process - Plan Info - trendmicro | dxxn100d4v2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: trendmicro Offer:deep-security-vm Sku:dxxn100d4v2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_tr-de-dxxn200d5v2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'trendmicro',
	[string]$Offer = 'deep-security-vm',
	[string]$Skus = 'dxxn200d5v2',
	[string]$version =  'latest',
	[string]$Product = 'deep-security-vm',
	[string]$name = 'dxxn200d5v2'
)
Write-Host "Image Creation in Process - Plan Info - trendmicro | dxxn200d5v2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: trendmicro Offer:deep-security-vm Sku:dxxn200d5v2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_tr-de-dxxn25d2v2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'trendmicro',
	[string]$Offer = 'deep-security-vm',
	[string]$Skus = 'dxxn25d2v2',
	[string]$version =  'latest',
	[string]$Product = 'deep-security-vm',
	[string]$name = 'dxxn25d2v2'
)
Write-Host "Image Creation in Process - Plan Info - trendmicro | dxxn25d2v2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: trendmicro Offer:deep-security-vm Sku:dxxn25d2v2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_tr-de-dxxn50d3v2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'trendmicro',
	[string]$Offer = 'deep-security-vm',
	[string]$Skus = 'dxxn50d3v2',
	[string]$version =  'latest',
	[string]$Product = 'deep-security-vm',
	[string]$name = 'dxxn50d3v2'
)
Write-Host "Image Creation in Process - Plan Info - trendmicro | dxxn50d3v2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: trendmicro Offer:deep-security-vm Sku:dxxn50d3v2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_tr-de-dxxnbyol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'trendmicro',
	[string]$Offer = 'deep-security-vm-byol',
	[string]$Skus = 'dxxnbyol',
	[string]$version =  'latest',
	[string]$Product = 'deep-security-vm-byol',
	[string]$name = 'dxxnbyol'
)
Write-Host "Image Creation in Process - Plan Info - trendmicro | dxxnbyol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: trendmicro Offer:deep-security-vm-byol Sku:dxxnbyol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_tr-in-imsva90
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'trendmicro',
	[string]$Offer = 'interscan-messaging-security-va',
	[string]$Skus = 'imsva90',
	[string]$version =  'latest',
	[string]$Product = 'interscan-messaging-security-va',
	[string]$name = 'imsva90'
)
Write-Host "Image Creation in Process - Plan Info - trendmicro | imsva90"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: trendmicro Offer:interscan-messaging-security-va Sku:imsva90 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_tr-wf-wfbs90sp1advanced
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'trendmicro',
	[string]$Offer = 'wfbs-90sp1-std-adv',
	[string]$Skus = 'wfbs90sp1advanced',
	[string]$version =  'latest',
	[string]$Product = 'wfbs-90sp1-std-adv',
	[string]$name = 'wfbs90sp1advanced'
)
Write-Host "Image Creation in Process - Plan Info - trendmicro | wfbs90sp1advanced"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: trendmicro Offer:wfbs-90sp1-std-adv Sku:wfbs90sp1advanced Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_tr-wf-wfbs90sp1standard
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'trendmicro',
	[string]$Offer = 'wfbs-90sp1-std-adv',
	[string]$Skus = 'wfbs90sp1standard',
	[string]$version =  'latest',
	[string]$Product = 'wfbs-90sp1-std-adv',
	[string]$name = 'wfbs90sp1standard'
)
Write-Host "Image Creation in Process - Plan Info - trendmicro | wfbs90sp1standard"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: trendmicro Offer:wfbs-90sp1-std-adv Sku:wfbs90sp1standard Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ts-ck-basepackage
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'tsa-public-service',
	[string]$Offer = 'ckan-server',
	[string]$Skus = 'basepackage',
	[string]$version =  'latest',
	[string]$Product = 'ckan-server',
	[string]$name = 'basepackage'
)
Write-Host "Image Creation in Process - Plan Info - tsa-public-service | basepackage"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: tsa-public-service Offer:ckan-server Sku:basepackage Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ty-ty-typesafe-reactive-maps-demo
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'typesafe',
	[string]$Offer = 'typesafe-reactive-maps-demo',
	[string]$Skus = 'typesafe-reactive-maps-demo',
	[string]$version =  'latest',
	[string]$Product = 'typesafe-reactive-maps-demo',
	[string]$name = 'typesafe-reactive-maps-demo'
)
Write-Host "Image Creation in Process - Plan Info - typesafe | typesafe-reactive-maps-demo"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: typesafe Offer:typesafe-reactive-maps-demo Sku:typesafe-reactive-maps-demo Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ub-co-comsol-multiphysics-5-2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'ubercloud',
	[string]$Offer = 'comsol-multiphysics-v5-2',
	[string]$Skus = 'comsol-multiphysics-5-2',
	[string]$version =  'latest',
	[string]$Product = 'comsol-multiphysics-v5-2',
	[string]$name = 'comsol-multiphysics-5-2'
)
Write-Host "Image Creation in Process - Plan Info - ubercloud | comsol-multiphysics-5-2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: ubercloud Offer:comsol-multiphysics-v5-2 Sku:comsol-multiphysics-5-2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ub-op-openfoam-23-centos6
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'ubercloud',
	[string]$Offer = 'openfoam-v2dot3-centos-v6',
	[string]$Skus = 'openfoam-23-centos6',
	[string]$version =  'latest',
	[string]$Product = 'openfoam-v2dot3-centos-v6',
	[string]$name = 'openfoam-23-centos6'
)
Write-Host "Image Creation in Process - Plan Info - ubercloud | openfoam-23-centos6"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: ubercloud Offer:openfoam-v2dot3-centos-v6 Sku:openfoam-23-centos6 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ub-op-trial
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'ubercloud',
	[string]$Offer = 'openfoam-v2dot3-centos-v6',
	[string]$Skus = 'trial',
	[string]$version =  'latest',
	[string]$Product = 'openfoam-v2dot3-centos-v6',
	[string]$name = 'trial'
)
Write-Host "Image Creation in Process - Plan Info - ubercloud | trial"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: ubercloud Offer:openfoam-v2dot3-centos-v6 Sku:trial Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ub-st-starccm-10_04
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'ubercloud',
	[string]$Offer = 'star-ccm-v10-04',
	[string]$Skus = 'starccm-10_04',
	[string]$version =  'latest',
	[string]$Product = 'star-ccm-v10-04',
	[string]$name = 'starccm-10_04'
)
Write-Host "Image Creation in Process - Plan Info - ubercloud | starccm-10_04"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: ubercloud Offer:star-ccm-v10-04 Sku:starccm-10_04 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ub-st-starccm-10_06-heeds-mdo-2015_11
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'ubercloud',
	[string]$Offer = 'star-ccm-v10-06-heeds-mdo-v2015',
	[string]$Skus = 'starccm-10_06-heeds-mdo-2015_11',
	[string]$version =  'latest',
	[string]$Product = 'star-ccm-v10-06-heeds-mdo-v2015',
	[string]$name = 'starccm-10_06-heeds-mdo-2015_11'
)
Write-Host "Image Creation in Process - Plan Info - ubercloud | starccm-10_06-heeds-mdo-2015_11"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: ubercloud Offer:star-ccm-v10-06-heeds-mdo-v2015 Sku:starccm-10_06-heeds-mdo-2015_11 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_un-un-unidesk4
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'unidesk-corp',
	[string]$Offer = 'unidesk4',
	[string]$Skus = 'unidesk4',
	[string]$version =  'latest',
	[string]$Product = 'unidesk4',
	[string]$name = 'unidesk4'
)
Write-Host "Image Creation in Process - Plan Info - unidesk-corp | unidesk4"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: unidesk-corp Offer:unidesk4 Sku:unidesk4 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_us-un-usp-vod
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'usp',
	[string]$Offer = 'unified-streaming-vod-standard',
	[string]$Skus = 'usp-vod',
	[string]$version =  'latest',
	[string]$Product = 'unified-streaming-vod-standard',
	[string]$name = 'usp-vod'
)
Write-Host "Image Creation in Process - Plan Info - usp | usp-vod"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: usp Offer:unified-streaming-vod-standard Sku:usp-vod Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_vb-vb-vbotcms001
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'vbot',
	[string]$Offer = 'vbot',
	[string]$Skus = 'vbotcms001',
	[string]$version =  'latest',
	[string]$Product = 'vbot',
	[string]$name = 'vbotcms001'
)
Write-Host "Image Creation in Process - Plan Info - vbot | vbotcms001"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: vbot Offer:vbot Sku:vbotcms001 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ve-do-docsuite
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'vecompsoftware',
	[string]$Offer = 'docsuite',
	[string]$Skus = 'docsuite',
	[string]$version =  'latest',
	[string]$Product = 'docsuite',
	[string]$name = 'docsuite'
)
Write-Host "Image Creation in Process - Plan Info - vecompsoftware | docsuite"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: vecompsoftware Offer:docsuite Sku:docsuite Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ve-ma-veeammanagedbackupportal
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'veeam',
	[string]$Offer = 'managed-backup-portal',
	[string]$Skus = 'veeammanagedbackupportal',
	[string]$version =  'latest',
	[string]$Product = 'managed-backup-portal',
	[string]$name = 'veeammanagedbackupportal'
)
Write-Host "Image Creation in Process - Plan Info - veeam | veeammanagedbackupportal"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: veeam Offer:managed-backup-portal Sku:veeammanagedbackupportal Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ve-ve-veeamcloudcconnectenterprise
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'veeam',
	[string]$Offer = 'veeam-cloud-connect-enterprise',
	[string]$Skus = 'veeamcloudcconnectenterprise',
	[string]$version =  'latest',
	[string]$Product = 'veeam-cloud-connect-enterprise',
	[string]$name = 'veeamcloudcconnectenterprise'
)
Write-Host "Image Creation in Process - Plan Info - veeam | veeamcloudcconnectenterprise"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: veeam Offer:veeam-cloud-connect-enterprise Sku:veeamcloudcconnectenterprise Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ve-ve-veeamdirectrestoretomicrosoftazure
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'veeam',
	[string]$Offer = 'veeam-direct-restore-to-microsoft-azure',
	[string]$Skus = 'veeamdirectrestoretomicrosoftazure',
	[string]$version =  'latest',
	[string]$Product = 'veeam-direct-restore-to-microsoft-azure',
	[string]$name = 'veeamdirectrestoretomicrosoftazure'
)
Write-Host "Image Creation in Process - Plan Info - veeam | veeamdirectrestoretomicrosoftazure"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: veeam Offer:veeam-direct-restore-to-microsoft-azure Sku:veeamdirectrestoretomicrosoftazure Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ve-ve-veeambackup
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'veeam',
	[string]$Offer = 'veeamcloudconnect',
	[string]$Skus = 'veeambackup',
	[string]$version =  'latest',
	[string]$Product = 'veeamcloudconnect',
	[string]$name = 'veeambackup'
)
Write-Host "Image Creation in Process - Plan Info - veeam | veeambackup"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: veeam Offer:veeamcloudconnect Sku:veeambackup Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_vi-vi-developer
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'vidispine',
	[string]$Offer = 'vidispine-content-management',
	[string]$Skus = 'developer',
	[string]$version =  'latest',
	[string]$Product = 'vidispine-content-management',
	[string]$name = 'developer'
)
Write-Host "Image Creation in Process - Plan Info - vidispine | developer"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: vidispine Offer:vidispine-content-management Sku:developer Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_vi-vi-midsized_team
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'vidispine',
	[string]$Offer = 'vidispine-content-management',
	[string]$Skus = 'midsized_team',
	[string]$version =  'latest',
	[string]$Product = 'vidispine-content-management',
	[string]$name = 'midsized_team'
)
Write-Host "Image Creation in Process - Plan Info - vidispine | midsized_team"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: vidispine Offer:vidispine-content-management Sku:midsized_team Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_vi-vi-web_large
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'vidispine',
	[string]$Offer = 'vidispine-content-management',
	[string]$Skus = 'web_large',
	[string]$version =  'latest',
	[string]$Product = 'vidispine-content-management',
	[string]$name = 'web_large'
)
Write-Host "Image Creation in Process - Plan Info - vidispine | web_large"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: vidispine Offer:vidispine-content-management Sku:web_large Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_vi-vi-web_mid
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'vidispine',
	[string]$Offer = 'vidispine-content-management',
	[string]$Skus = 'web_mid',
	[string]$version =  'latest',
	[string]$Product = 'vidispine-content-management',
	[string]$name = 'web_mid'
)
Write-Host "Image Creation in Process - Plan Info - vidispine | web_mid"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: vidispine Offer:vidispine-content-management Sku:web_mid Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_vi-vi-web_starter
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'vidispine',
	[string]$Offer = 'vidispine-content-management',
	[string]$Skus = 'web_starter',
	[string]$version =  'latest',
	[string]$Product = 'vidispine-content-management',
	[string]$name = 'web_starter'
)
Write-Host "Image Creation in Process - Plan Info - vidispine | web_starter"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: vidispine Offer:vidispine-content-management Sku:web_starter Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_vi-en-vdzmo-azr-ent-prm-1000
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'vidizmo',
	[string]$Offer = 'enterprisetube-video-streaming-premium-portal',
	[string]$Skus = 'vdzmo-azr-ent-prm-1000',
	[string]$version =  'latest',
	[string]$Product = 'enterprisetube-video-streaming-premium-portal',
	[string]$name = 'vdzmo-azr-ent-prm-1000'
)
Write-Host "Image Creation in Process - Plan Info - vidizmo | vdzmo-azr-ent-prm-1000"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: vidizmo Offer:enterprisetube-video-streaming-premium-portal Sku:vdzmo-azr-ent-prm-1000 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_vi-vi-vincert_byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'vintegris',
	[string]$Offer = 'vincert',
	[string]$Skus = 'vincert_byol',
	[string]$version =  'latest',
	[string]$Product = 'vincert',
	[string]$name = 'vincert_byol'
)
Write-Host "Image Creation in Process - Plan Info - vintegris | vincert_byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: vintegris Offer:vincert Sku:vincert_byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_vi-mo-viraz01
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'vircom',
	[string]$Offer = 'modusgate-azure',
	[string]$Skus = 'viraz01',
	[string]$version =  'latest',
	[string]$Product = 'modusgate-azure',
	[string]$name = 'viraz01'
)
Write-Host "Image Creation in Process - Plan Info - vircom | viraz01"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: vircom Offer:modusgate-azure Sku:viraz01 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_vi-vi-viaworks
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'virtualworks',
	[string]$Offer = 'viaworks',
	[string]$Skus = 'viaworks',
	[string]$version =  'latest',
	[string]$Product = 'viaworks',
	[string]$name = 'viaworks'
)
Write-Host "Image Creation in Process - Plan Info - virtualworks | viaworks"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: virtualworks Offer:viaworks Sku:viaworks Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_vi-vi-viaworks
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'virtualworks',
	[string]$Offer = 'viaworks-online-2_5-beta',
	[string]$Skus = 'viaworks',
	[string]$version =  'latest',
	[string]$Product = 'viaworks-online-2_5-beta',
	[string]$name = 'viaworks'
)
Write-Host "Image Creation in Process - Plan Info - virtualworks | viaworks"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: virtualworks Offer:viaworks-online-2_5-beta Sku:viaworks Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_vi-do-double_take_dr_recovery_target_2008r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'vision_solutions',
	[string]$Offer = 'double_take_dr',
	[string]$Skus = 'double_take_dr_recovery_target_2008r2',
	[string]$version =  'latest',
	[string]$Product = 'double_take_dr',
	[string]$name = 'double_take_dr_recovery_target_2008r2'
)
Write-Host "Image Creation in Process - Plan Info - vision_solutions | double_take_dr_recovery_target_2008r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: vision_solutions Offer:double_take_dr Sku:double_take_dr_recovery_target_2008r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_vi-do-double_take_dr_recovery_target_2012
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'vision_solutions',
	[string]$Offer = 'double_take_dr',
	[string]$Skus = 'double_take_dr_recovery_target_2012',
	[string]$version =  'latest',
	[string]$Product = 'double_take_dr',
	[string]$name = 'double_take_dr_recovery_target_2012'
)
Write-Host "Image Creation in Process - Plan Info - vision_solutions | double_take_dr_recovery_target_2012"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: vision_solutions Offer:double_take_dr Sku:double_take_dr_recovery_target_2012 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_vi-do-double_take_dr_recovery_target_2012r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'vision_solutions',
	[string]$Offer = 'double_take_dr',
	[string]$Skus = 'double_take_dr_recovery_target_2012r2',
	[string]$version =  'latest',
	[string]$Product = 'double_take_dr',
	[string]$name = 'double_take_dr_recovery_target_2012r2'
)
Write-Host "Image Creation in Process - Plan Info - vision_solutions | double_take_dr_recovery_target_2012r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: vision_solutions Offer:double_take_dr Sku:double_take_dr_recovery_target_2012r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_vi-do-double_take_dr_repository
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'vision_solutions',
	[string]$Offer = 'double_take_dr',
	[string]$Skus = 'double_take_dr_repository',
	[string]$version =  'latest',
	[string]$Product = 'double_take_dr',
	[string]$name = 'double_take_dr_repository'
)
Write-Host "Image Creation in Process - Plan Info - vision_solutions | double_take_dr_repository"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: vision_solutions Offer:double_take_dr Sku:double_take_dr_repository Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_vi-do-double_take_move_target_2008r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'vision_solutions',
	[string]$Offer = 'double_take_move',
	[string]$Skus = 'double_take_move_target_2008r2',
	[string]$version =  'latest',
	[string]$Product = 'double_take_move',
	[string]$name = 'double_take_move_target_2008r2'
)
Write-Host "Image Creation in Process - Plan Info - vision_solutions | double_take_move_target_2008r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: vision_solutions Offer:double_take_move Sku:double_take_move_target_2008r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_vi-do-double_take_move_target_2012
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'vision_solutions',
	[string]$Offer = 'double_take_move',
	[string]$Skus = 'double_take_move_target_2012',
	[string]$version =  'latest',
	[string]$Product = 'double_take_move',
	[string]$name = 'double_take_move_target_2012'
)
Write-Host "Image Creation in Process - Plan Info - vision_solutions | double_take_move_target_2012"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: vision_solutions Offer:double_take_move Sku:double_take_move_target_2012 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_vi-do-double_take_move_target_2012r2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'vision_solutions',
	[string]$Offer = 'double_take_move',
	[string]$Skus = 'double_take_move_target_2012r2',
	[string]$version =  'latest',
	[string]$Product = 'double_take_move',
	[string]$name = 'double_take_move_target_2012r2'
)
Write-Host "Image Creation in Process - Plan Info - vision_solutions | double_take_move_target_2012r2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: vision_solutions Offer:double_take_move Sku:double_take_move_target_2012r2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_vm-vm-vmturbo64-opsmgr-5-3
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'vmturbo',
	[string]$Offer = 'vmturbo64-opsmgr-5_3',
	[string]$Skus = 'vmturbo64-opsmgr-5-3',
	[string]$version =  'latest',
	[string]$Product = 'vmturbo64-opsmgr-5_3',
	[string]$name = 'vmturbo64-opsmgr-5-3'
)
Write-Host "Image Creation in Process - Plan Info - vmturbo | vmturbo64-opsmgr-5-3"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: vmturbo Offer:vmturbo64-opsmgr-5_3 Sku:vmturbo64-opsmgr-5-3 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_vm-vm-vmturbo64-opsmgr-5-3-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'vmturbo',
	[string]$Offer = 'vmturbo64-opsmgr-5_3',
	[string]$Skus = 'vmturbo64-opsmgr-5-3-byol',
	[string]$version =  'latest',
	[string]$Product = 'vmturbo64-opsmgr-5_3',
	[string]$name = 'vmturbo64-opsmgr-5-3-byol'
)
Write-Host "Image Creation in Process - Plan Info - vmturbo | vmturbo64-opsmgr-5-3-byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: vmturbo Offer:vmturbo64-opsmgr-5_3 Sku:vmturbo64-opsmgr-5-3-byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_vm-vm-vmturbo64-opsmgr-5-3-saas
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'vmturbo',
	[string]$Offer = 'vmturbo64-opsmgr-5_3',
	[string]$Skus = 'vmturbo64-opsmgr-5-3-saas',
	[string]$version =  'latest',
	[string]$Product = 'vmturbo64-opsmgr-5_3',
	[string]$name = 'vmturbo64-opsmgr-5-3-saas'
)
Write-Host "Image Creation in Process - Plan Info - vmturbo | vmturbo64-opsmgr-5-3-saas"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: vmturbo Offer:vmturbo64-opsmgr-5_3 Sku:vmturbo64-opsmgr-5-3-saas Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_vt-sl-slashdb-azure
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'vte',
	[string]$Offer = 'slashdb',
	[string]$Skus = 'slashdb-azure',
	[string]$version =  'latest',
	[string]$Product = 'slashdb',
	[string]$name = 'slashdb-azure'
)
Write-Host "Image Creation in Process - Plan Info - vte | slashdb-azure"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: vte Offer:slashdb Sku:slashdb-azure Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_vt-sl-slashdb-unlimited
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'vte',
	[string]$Offer = 'slashdb',
	[string]$Skus = 'slashdb-unlimited',
	[string]$version =  'latest',
	[string]$Product = 'slashdb',
	[string]$name = 'slashdb-unlimited'
)
Write-Host "Image Creation in Process - Plan Info - vte | slashdb-unlimited"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: vte Offer:slashdb Sku:slashdb-unlimited Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_wa-wa-tomcat7
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'waratek',
	[string]$Offer = 'waratek-locker',
	[string]$Skus = 'tomcat7',
	[string]$version =  'latest',
	[string]$Product = 'waratek-locker',
	[string]$name = 'tomcat7'
)
Write-Host "Image Creation in Process - Plan Info - waratek | tomcat7"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: waratek Offer:waratek-locker Sku:tomcat7 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_wa-wa-warewolf-developer
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'warewolf-esb',
	[string]$Offer = 'warewolf',
	[string]$Skus = 'warewolf-developer',
	[string]$version =  'latest',
	[string]$Product = 'warewolf',
	[string]$name = 'warewolf-developer'
)
Write-Host "Image Creation in Process - Plan Info - warewolf-esb | warewolf-developer"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: warewolf-esb Offer:warewolf Sku:warewolf-developer Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_wa-wa-warewolf-enterprise
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'warewolf-esb',
	[string]$Offer = 'warewolf',
	[string]$Skus = 'warewolf-enterprise',
	[string]$version =  'latest',
	[string]$Product = 'warewolf',
	[string]$name = 'warewolf-enterprise'
)
Write-Host "Image Creation in Process - Plan Info - warewolf-esb | warewolf-enterprise"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: warewolf-esb Offer:warewolf Sku:warewolf-enterprise Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_wa-wa-warewolf-esb-business
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'warewolf-esb',
	[string]$Offer = 'warewolf-esb',
	[string]$Skus = 'warewolf-esb-business',
	[string]$version =  'latest',
	[string]$Product = 'warewolf-esb',
	[string]$name = 'warewolf-esb-business'
)
Write-Host "Image Creation in Process - Plan Info - warewolf-esb | warewolf-esb-business"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: warewolf-esb Offer:warewolf-esb Sku:warewolf-esb-business Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_wa-ri-rightswatch-subscritpion-license-ae-1-100
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'watchfulsoftware',
	[string]$Offer = 'rightswatch-single-instance',
	[string]$Skus = 'rightswatch-subscritpion-license-ae-1-100',
	[string]$version =  'latest',
	[string]$Product = 'rightswatch-single-instance',
	[string]$name = 'rightswatch-subscritpion-license-ae-1-100'
)
Write-Host "Image Creation in Process - Plan Info - watchfulsoftware | rightswatch-subscritpion-license-ae-1-100"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: watchfulsoftware Offer:rightswatch-single-instance Sku:rightswatch-subscritpion-license-ae-1-100 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_we-ap-tdeg
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'websense-apmailpe',
	[string]$Offer = 'ap-data-email-gateway',
	[string]$Skus = 'tdeg',
	[string]$version =  'latest',
	[string]$Product = 'ap-data-email-gateway',
	[string]$name = 'tdeg'
)
Write-Host "Image Creation in Process - Plan Info - websense-apmailpe | tdeg"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: websense-apmailpe Offer:ap-data-email-gateway Sku:tdeg Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_we-tr-adeg
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'websense-apmailpe',
	[string]$Offer = 'triton-ap-data',
	[string]$Skus = 'adeg',
	[string]$version =  'latest',
	[string]$Product = 'triton-ap-data',
	[string]$name = 'adeg'
)
Write-Host "Image Creation in Process - Plan Info - websense-apmailpe | adeg"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: websense-apmailpe Offer:triton-ap-data Sku:adeg Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_we-tr-forcepoint_adeg
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'websense-apmailpe',
	[string]$Offer = 'triton-ap-data',
	[string]$Skus = 'forcepoint_adeg',
	[string]$version =  'latest',
	[string]$Product = 'triton-ap-data',
	[string]$name = 'forcepoint_adeg'
)
Write-Host "Image Creation in Process - Plan Info - websense-apmailpe | forcepoint_adeg"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: websense-apmailpe Offer:triton-ap-data Sku:forcepoint_adeg Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_wi-ag-agilebase
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'wipro-ltd',
	[string]$Offer = 'agilebase-beta',
	[string]$Skus = 'agilebase',
	[string]$version =  'latest',
	[string]$Product = 'agilebase-beta',
	[string]$name = 'agilebase'
)
Write-Host "Image Creation in Process - Plan Info - wipro-ltd | agilebase"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: wipro-ltd Offer:agilebase-beta Sku:agilebase Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_wi-ag-agilebase-opensource-stack
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'wipro-ltd',
	[string]$Offer = 'agilebase-beta',
	[string]$Skus = 'agilebase-opensource-stack',
	[string]$version =  'latest',
	[string]$Product = 'agilebase-beta',
	[string]$name = 'agilebase-opensource-stack'
)
Write-Host "Image Creation in Process - Plan Info - wipro-ltd | agilebase-opensource-stack"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: wipro-ltd Offer:agilebase-beta Sku:agilebase-opensource-stack Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_wi-mf-mftaas-beta
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'wipro-ltd',
	[string]$Offer = 'mftaas',
	[string]$Skus = 'mftaas-beta',
	[string]$version =  'latest',
	[string]$Product = 'mftaas',
	[string]$name = 'mftaas-beta'
)
Write-Host "Image Creation in Process - Plan Info - wipro-ltd | mftaas-beta"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: wipro-ltd Offer:mftaas Sku:mftaas-beta Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_wm-ni-nimble-streamer
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'wmspanel',
	[string]$Offer = 'nimble-streamer-centos',
	[string]$Skus = 'nimble-streamer',
	[string]$version =  'latest',
	[string]$Product = 'nimble-streamer-centos',
	[string]$name = 'nimble-streamer'
)
Write-Host "Image Creation in Process - Plan Info - wmspanel | nimble-streamer"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: wmspanel Offer:nimble-streamer-centos Sku:nimble-streamer Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_wm-ni-nimble-streamer
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'wmspanel',
	[string]$Offer = 'nimble-streamer-ubuntu',
	[string]$Skus = 'nimble-streamer',
	[string]$version =  'latest',
	[string]$Product = 'nimble-streamer-ubuntu',
	[string]$name = 'nimble-streamer'
)
Write-Host "Image Creation in Process - Plan Info - wmspanel | nimble-streamer"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: wmspanel Offer:nimble-streamer-ubuntu Sku:nimble-streamer Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_wm-ni-nimble-streamer
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'wmspanel',
	[string]$Offer = 'nimble-streamer-windows',
	[string]$Skus = 'nimble-streamer',
	[string]$version =  'latest',
	[string]$Product = 'nimble-streamer-windows',
	[string]$name = 'nimble-streamer'
)
Write-Host "Image Creation in Process - Plan Info - wmspanel | nimble-streamer"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: wmspanel Offer:nimble-streamer-windows Sku:nimble-streamer Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_wo-ws-ws-prot-byol-protsv
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'workshare-technology',
	[string]$Offer = 'ws-prot-byol-protsvr-offer',
	[string]$Skus = 'ws-prot-byol-protsv',
	[string]$version =  'latest',
	[string]$Product = 'ws-prot-byol-protsvr-offer',
	[string]$name = 'ws-prot-byol-protsv'
)
Write-Host "Image Creation in Process - Plan Info - workshare-technology | ws-prot-byol-protsv"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: workshare-technology Offer:ws-prot-byol-protsvr-offer Sku:ws-prot-byol-protsv Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_wo-wo-std-linux-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'wowza',
	[string]$Offer = 'wowzastreamingengine',
	[string]$Skus = 'std-linux-byol',
	[string]$version =  'latest',
	[string]$Product = 'wowzastreamingengine',
	[string]$name = 'std-linux-byol'
)
Write-Host "Image Creation in Process - Plan Info - wowza | std-linux-byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: wowza Offer:wowzastreamingengine Sku:std-linux-byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_wo-wo-std-linux-byol-4-2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'wowza',
	[string]$Offer = 'wowzastreamingengine',
	[string]$Skus = 'std-linux-byol-4-2',
	[string]$version =  'latest',
	[string]$Product = 'wowzastreamingengine',
	[string]$name = 'std-linux-byol-4-2'
)
Write-Host "Image Creation in Process - Plan Info - wowza | std-linux-byol-4-2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: wowza Offer:wowzastreamingengine Sku:std-linux-byol-4-2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_wo-wo-std-linux-byol-4-3
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'wowza',
	[string]$Offer = 'wowzastreamingengine',
	[string]$Skus = 'std-linux-byol-4-3',
	[string]$version =  'latest',
	[string]$Product = 'wowzastreamingengine',
	[string]$name = 'std-linux-byol-4-3'
)
Write-Host "Image Creation in Process - Plan Info - wowza | std-linux-byol-4-3"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: wowza Offer:wowzastreamingengine Sku:std-linux-byol-4-3 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_wo-wo-std-linux-byol-4-4-1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'wowza',
	[string]$Offer = 'wowzastreamingengine',
	[string]$Skus = 'std-linux-byol-4-4-1',
	[string]$version =  'latest',
	[string]$Product = 'wowzastreamingengine',
	[string]$name = 'std-linux-byol-4-4-1'
)
Write-Host "Image Creation in Process - Plan Info - wowza | std-linux-byol-4-4-1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: wowza Offer:wowzastreamingengine Sku:std-linux-byol-4-4-1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_wo-wo-std-linux-byol-4-5-0
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'wowza',
	[string]$Offer = 'wowzastreamingengine',
	[string]$Skus = 'std-linux-byol-4-5-0',
	[string]$version =  'latest',
	[string]$Product = 'wowzastreamingengine',
	[string]$name = 'std-linux-byol-4-5-0'
)
Write-Host "Image Creation in Process - Plan Info - wowza | std-linux-byol-4-5-0"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: wowza Offer:wowzastreamingengine Sku:std-linux-byol-4-5-0 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_wo-wo-std-linux-paid-4-5-0
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'wowza',
	[string]$Offer = 'wowzastreamingengine',
	[string]$Skus = 'std-linux-paid-4-5-0',
	[string]$version =  'latest',
	[string]$Product = 'wowzastreamingengine',
	[string]$name = 'std-linux-paid-4-5-0'
)
Write-Host "Image Creation in Process - Plan Info - wowza | std-linux-paid-4-5-0"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: wowza Offer:wowzastreamingengine Sku:std-linux-paid-4-5-0 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_wo-wo-std-windows-byol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'wowza',
	[string]$Offer = 'wowzastreamingengine',
	[string]$Skus = 'std-windows-byol',
	[string]$version =  'latest',
	[string]$Product = 'wowzastreamingengine',
	[string]$name = 'std-windows-byol'
)
Write-Host "Image Creation in Process - Plan Info - wowza | std-windows-byol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: wowza Offer:wowzastreamingengine Sku:std-windows-byol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_wo-wo-std-windows-byol-4-2
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'wowza',
	[string]$Offer = 'wowzastreamingengine',
	[string]$Skus = 'std-windows-byol-4-2',
	[string]$version =  'latest',
	[string]$Product = 'wowzastreamingengine',
	[string]$name = 'std-windows-byol-4-2'
)
Write-Host "Image Creation in Process - Plan Info - wowza | std-windows-byol-4-2"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: wowza Offer:wowzastreamingengine Sku:std-windows-byol-4-2 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_wo-wo-std-windows-byol-4-3
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'wowza',
	[string]$Offer = 'wowzastreamingengine',
	[string]$Skus = 'std-windows-byol-4-3',
	[string]$version =  'latest',
	[string]$Product = 'wowzastreamingengine',
	[string]$name = 'std-windows-byol-4-3'
)
Write-Host "Image Creation in Process - Plan Info - wowza | std-windows-byol-4-3"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: wowza Offer:wowzastreamingengine Sku:std-windows-byol-4-3 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_wo-wo-std-windows-byol-4-4-1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'wowza',
	[string]$Offer = 'wowzastreamingengine',
	[string]$Skus = 'std-windows-byol-4-4-1',
	[string]$version =  'latest',
	[string]$Product = 'wowzastreamingengine',
	[string]$name = 'std-windows-byol-4-4-1'
)
Write-Host "Image Creation in Process - Plan Info - wowza | std-windows-byol-4-4-1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: wowza Offer:wowzastreamingengine Sku:std-windows-byol-4-4-1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_wo-wo-std-windows-byol-4-5-0
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'wowza',
	[string]$Offer = 'wowzastreamingengine',
	[string]$Skus = 'std-windows-byol-4-5-0',
	[string]$version =  'latest',
	[string]$Product = 'wowzastreamingengine',
	[string]$name = 'std-windows-byol-4-5-0'
)
Write-Host "Image Creation in Process - Plan Info - wowza | std-windows-byol-4-5-0"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: wowza Offer:wowzastreamingengine Sku:std-windows-byol-4-5-0 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_wo-wo-std-windows-paid-4-5-0
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'wowza',
	[string]$Offer = 'wowzastreamingengine',
	[string]$Skus = 'std-windows-paid-4-5-0',
	[string]$version =  'latest',
	[string]$Product = 'wowzastreamingengine',
	[string]$name = 'std-windows-paid-4-5-0'
)
Write-Host "Image Creation in Process - Plan Info - wowza | std-windows-paid-4-5-0"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: wowza Offer:wowzastreamingengine Sku:std-windows-paid-4-5-0 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_xe-xe-xl-deploy-linux
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'xebialabs',
	[string]$Offer = 'xebialabs-xl-deploy',
	[string]$Skus = 'xl-deploy-linux',
	[string]$version =  'latest',
	[string]$Product = 'xebialabs-xl-deploy',
	[string]$name = 'xl-deploy-linux'
)
Write-Host "Image Creation in Process - Plan Info - xebialabs | xl-deploy-linux"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: xebialabs Offer:xebialabs-xl-deploy Sku:xl-deploy-linux Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_xf-d3-d3view-v5-hosted
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'xfinityinc',
	[string]$Offer = 'd3view-v5',
	[string]$Skus = 'd3view-v5-hosted',
	[string]$version =  'latest',
	[string]$Product = 'd3view-v5',
	[string]$name = 'd3view-v5-hosted'
)
Write-Host "Image Creation in Process - Plan Info - xfinityinc | d3view-v5-hosted"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: xfinityinc Offer:d3view-v5 Sku:d3view-v5-hosted Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_xm-xm-bpm
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'xmpro',
	[string]$Offer = 'xmpro-evaluation',
	[string]$Skus = 'bpm',
	[string]$version =  'latest',
	[string]$Product = 'xmpro-evaluation',
	[string]$name = 'bpm'
)
Write-Host "Image Creation in Process - Plan Info - xmpro | bpm"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: xmpro Offer:xmpro-evaluation Sku:bpm Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_xt-db-dbx15001mnt
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'xtremedata',
	[string]$Offer = 'dbx',
	[string]$Skus = 'dbx15001mnt',
	[string]$version =  'latest',
	[string]$Product = 'dbx',
	[string]$name = 'dbx15001mnt'
)
Write-Host "Image Creation in Process - Plan Info - xtremedata | dbx15001mnt"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: xtremedata Offer:dbx Sku:dbx15001mnt Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_xt-db-dbx2014001
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'xtremedata',
	[string]$Offer = 'dbx',
	[string]$Skus = 'dbx2014001',
	[string]$version =  'latest',
	[string]$Product = 'dbx',
	[string]$name = 'dbx2014001'
)
Write-Host "Image Creation in Process - Plan Info - xtremedata | dbx2014001"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: xtremedata Offer:dbx Sku:dbx2014001 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ye-ye-yellowfinforazurebyol
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'yellowfin',
	[string]$Offer = 'yellowfin-for-azure-byol',
	[string]$Skus = 'yellowfinforazurebyol',
	[string]$version =  'latest',
	[string]$Product = 'yellowfin-for-azure-byol',
	[string]$name = 'yellowfinforazurebyol'
)
Write-Host "Image Creation in Process - Plan Info - yellowfin | yellowfinforazurebyol"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: yellowfin Offer:yellowfin-for-azure-byol Sku:yellowfinforazurebyol Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_yo-he-herefordshire-1
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'your-shop-online',
	[string]$Offer = 'herefordshire-enterprise-platform-drupal-7',
	[string]$Skus = 'herefordshire-1',
	[string]$version =  'latest',
	[string]$Product = 'herefordshire-enterprise-platform-drupal-7',
	[string]$name = 'herefordshire-1'
)
Write-Host "Image Creation in Process - Plan Info - your-shop-online | herefordshire-1"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: your-shop-online Offer:herefordshire-enterprise-platform-drupal-7 Sku:herefordshire-1 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_yo-xe-xenofile-basic
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'your-shop-online',
	[string]$Offer = 'xenofile',
	[string]$Skus = 'xenofile-basic',
	[string]$version =  'latest',
	[string]$Product = 'xenofile',
	[string]$name = 'xenofile-basic'
)
Write-Host "Image Creation in Process - Plan Info - your-shop-online | xenofile-basic"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: your-shop-online Offer:xenofile Sku:xenofile-basic Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ze-ad-adapa-decision-engine
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'zementis',
	[string]$Offer = 'adapa-decision-engine',
	[string]$Skus = 'adapa-decision-engine',
	[string]$version =  'latest',
	[string]$Product = 'adapa-decision-engine',
	[string]$name = 'adapa-decision-engine'
)
Write-Host "Image Creation in Process - Plan Info - zementis | adapa-decision-engine"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: zementis Offer:adapa-decision-engine Sku:adapa-decision-engine Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ze-ad-zementis-adapa-4-1-azure
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'zementis',
	[string]$Offer = 'adapa-scoring-enging-4-1',
	[string]$Skus = 'zementis-adapa-4-1-azure',
	[string]$version =  'latest',
	[string]$Product = 'adapa-scoring-enging-4-1',
	[string]$name = 'zementis-adapa-4-1-azure'
)
Write-Host "Image Creation in Process - Plan Info - zementis | zementis-adapa-4-1-azure"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: zementis Offer:adapa-scoring-enging-4-1 Sku:zementis-adapa-4-1-azure Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ze-ph-zs-d-00-u-php5_6
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'zend',
	[string]$Offer = 'php-zend-server',
	[string]$Skus = 'zs-d-00-u-php5_6',
	[string]$version =  'latest',
	[string]$Product = 'php-zend-server',
	[string]$name = 'zs-d-00-u-php5_6'
)
Write-Host "Image Creation in Process - Plan Info - zend | zs-d-00-u-php5_6"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: zend Offer:php-zend-server Sku:zs-d-00-u-php5_6 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ze-ph-zs-d-00-u-php7_0
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'zend',
	[string]$Offer = 'php-zend-server',
	[string]$Skus = 'zs-d-00-u-php7_0',
	[string]$version =  'latest',
	[string]$Product = 'php-zend-server',
	[string]$name = 'zs-d-00-u-php7_0'
)
Write-Host "Image Creation in Process - Plan Info - zend | zs-d-00-u-php7_0"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: zend Offer:php-zend-server Sku:zs-d-00-u-php7_0 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ze-ph-zs-e-00-u-php5_6
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'zend',
	[string]$Offer = 'php-zend-server',
	[string]$Skus = 'zs-e-00-u-php5_6',
	[string]$version =  'latest',
	[string]$Product = 'php-zend-server',
	[string]$name = 'zs-e-00-u-php5_6'
)
Write-Host "Image Creation in Process - Plan Info - zend | zs-e-00-u-php5_6"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: zend Offer:php-zend-server Sku:zs-e-00-u-php5_6 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ze-ph-zs-e-00-u-php7_0
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'zend',
	[string]$Offer = 'php-zend-server',
	[string]$Skus = 'zs-e-00-u-php7_0',
	[string]$version =  'latest',
	[string]$Product = 'php-zend-server',
	[string]$name = 'zs-e-00-u-php7_0'
)
Write-Host "Image Creation in Process - Plan Info - zend | zs-e-00-u-php7_0"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: zend Offer:php-zend-server Sku:zs-e-00-u-php7_0 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ze-ph-zs-p-00-u-php5_6
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'zend',
	[string]$Offer = 'php-zend-server',
	[string]$Skus = 'zs-p-00-u-php5_6',
	[string]$version =  'latest',
	[string]$Product = 'php-zend-server',
	[string]$name = 'zs-p-00-u-php5_6'
)
Write-Host "Image Creation in Process - Plan Info - zend | zs-p-00-u-php5_6"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: zend Offer:php-zend-server Sku:zs-p-00-u-php5_6 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_ze-ph-zs-p-00-u-php7_0
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'zend',
	[string]$Offer = 'php-zend-server',
	[string]$Skus = 'zs-p-00-u-php7_0',
	[string]$version =  'latest',
	[string]$Product = 'php-zend-server',
	[string]$name = 'zs-p-00-u-php7_0'
)
Write-Host "Image Creation in Process - Plan Info - zend | zs-p-00-u-php7_0"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: zend Offer:php-zend-server Sku:zs-p-00-u-php7_0 Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


Function makeimage_withinfo_zo-zo-server
{
param(
	[string]$VMName = $VMName,
	[string]$Publisher = 'zoomdata',
	[string]$Offer = 'zoomdata-server',
	[string]$Skus = 'server',
	[string]$version =  'latest',
	[string]$Product = 'zoomdata-server',
	[string]$name = 'server'
)
Write-Host "Image Creation in Process - Plan Info - zoomdata | server"
$script:VirtualMachine = Set-AzureRmVMPlan -VM $VirtualMachine -Name $name -Publisher $Publisher -Product $Product
$script:VirtualMachine = Set-AzureRmVMOperatingSystem -VM $VirtualMachine -linux -ComputerName $VMName -Credential $Credential1
$script:VirtualMachine = Set-AzureRmVMSourceImage -VM $VirtualMachine -PublisherName $Publisher -Offer $offer -Skus $Skus -Version $version
$LogOut = "Completed image prep Publisher: zoomdata Offer:zoomdata-server Sku:server Version:latest"
Log-Command -Description $LogOut -LogFile $LogOutFile
}


